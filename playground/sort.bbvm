%{final ansi=new{final black="\e[0;30m";f ///home/maniospas/Documents/Blombly/build/libs/.bb line 7
BEGIN _bb12
%{final toback(element)={return new{.elem ///home/maniospas/Documents/Blombly/build/libs/collections.bb line 1
BEGIN _bb35
%{return new{.func=this.func;call(A)={..f ///home/maniospas/Documents/Blombly/build/libs/collections.bb line 8
BEGIN _bb44
next func args
%{.func=this.func;call(A)={..func=this..f ///home/maniospas/Documents/Blombly/build/libs/collections.bb line 8
BEGIN _bb47
%this.func ///home/maniospas/Documents/Blombly/build/libs/collections.bb line 8
get _bb48 this func
IS .func _bb48
%{..func=this..func;ret=list();_bbmacro0= ///home/maniospas/Documents/Blombly/build/libs/collections.bb line 8
BEGIN _bb49
next A args
%this..func ///home/maniospas/Documents/Blombly/build/libs/collections.bb line 8
get _bb50 this .func
IS ..func _bb50
%list() ///home/maniospas/Documents/Blombly/build/libs/collections.bb line 8
list ret
%iter(A) ///home/maniospas/Documents/Blombly/build/libs/collections.bb line 8
iter _bbmacro0 A
%while(xas next(_bbmacro0))ret ..func(x) ///home/maniospas/Documents/Blombly/build/libs/collections.bb line 8
BEGIN _bb53
%next(_bbmacro0) ///home/maniospas/Documents/Blombly/build/libs/collections.bb line 8
next _bb54 _bbmacro0
AS x _bb54
exists _bb55 x
END
BEGIN _bb56
%..func(x) ///home/maniospas/Documents/Blombly/build/libs/collections.bb line 8
BEGIN _bb59
list args x
END
%..func(x) ///home/maniospas/Documents/Blombly/build/libs/collections.bb line 8
call _bb58 _bb59 ..func
push _bb57 ret _bb58
END
%while(xas next(_bbmacro0))ret ..func(x) ///home/maniospas/Documents/Blombly/build/libs/collections.bb line 8
while # _bb53 _bb56
%return ret ///home/maniospas/Documents/Blombly/build/libs/collections.bb line 8
return # ret
END
IS call _bb49
return # this
END
%new{.func=this.func;call(A)={..func=this ///home/maniospas/Documents/Blombly/build/libs/collections.bb line 8
new _bb45 _bb47
%return new{.func=this.func;call(A)={..fu ///home/maniospas/Documents/Blombly/build/libs/collections.bb line 8
return # _bb45
END
IS transform _bb44
final # transform
return # this
END
%new{final toback(element)={return new{.e ///home/maniospas/Documents/Blombly/build/libs/collections.bb line 1
new collection _bb35
final # collection
%new{call(str value)={return value;}final ///home/maniospas/Documents/Blombly/build/libs/collections.bb line 96
return # this
END
%new{final ansi=new{final black="\e[0;30m ///home/maniospas/Documents/Blombly/build/libs/.bb line 7
new bb _bb12
final # bb
%{int={return this.value;}lt(other)={retu //playground/sort.bb line 1
BEGIN _bb572
%{return this.value;} //playground/sort.bb line 2
BEGIN _bb573
%this.value //playground/sort.bb line 2
get _bb574 this value
%return this.value //playground/sort.bb line 2
return # _bb574
END
IS int _bb573
%{return this.value<other.vale;} //playground/sort.bb line 3
BEGIN _bb575
next other args
%other.vale //playground/sort.bb line 3
get _bb577 other vale
%this.value //playground/sort.bb line 3
get _bb578 this value
lt _bb576 _bb578 _bb577
%return this.value<other.vale //playground/sort.bb line 3
return # _bb576
END
IS lt _bb575
%{return "num {this.value}";} //playground/sort.bb line 4
BEGIN _bb579
BUILTIN _bb580 "num {this.value}"
%return "num {this.value}" //playground/sort.bb line 4
return # _bb580
END
IS str _bb579
END
IS Num _bb572
final # Num
%{return new{Num:value=x};} //playground/sort.bb line 6
BEGIN _bb581
next x args
%{Num:value=x} //playground/sort.bb line 6
BEGIN _bb584
%Num: //playground/sort.bb line 6
inline _bb585 Num
%value=x //playground/sort.bb line 6
IS value x
return # this
END
%new{Num:value=x} //playground/sort.bb line 6
new _bb582 _bb584
%return new{Num:value=x} //playground/sort.bb line 6
return # _bb582
END
IS num _bb581
%{n=A|len;_bbmacro8=iter(range(n));while( //playground/sort.bb line 8
BEGIN _bb586
next A args
%A|len //playground/sort.bb line 9
len n A
%range(n) //playground/sort.bb line 10
range _bb588 n
%iter(range(n)) //playground/sort.bb line 10
iter _bbmacro8 _bb588
%while(ias next(_bbmacro8)){_bbmacro9=ite //playground/sort.bb line 10
BEGIN _bb590
%next(_bbmacro8) //playground/sort.bb line 10
next _bb591 _bbmacro8
AS i _bb591
exists _bb592 i
END
BEGIN _bb593
%i+1 //playground/sort.bb line 11
BUILTIN _bb596 I1
add _bb595 i _bb596
%range(i+1,n) //playground/sort.bb line 11
range _bb594 _bb595 n
%iter(range(i+1,n)) //playground/sort.bb line 11
iter _bbmacro9 _bb594
%while(jas next(_bbmacro9))if(A[j]<A[i]){ //playground/sort.bb line 11
BEGIN _bb598
%next(_bbmacro9) //playground/sort.bb line 11
next _bb599 _bbmacro9
AS j _bb599
exists _bb600 j
END
BEGIN _bb601
%if(A[j]<A[i]){tmp=A[i];A[i]=A[j];A[j]=tm //playground/sort.bb line 11
BEGIN _bb602
%A[i] //playground/sort.bb line 12
at _bb603 A i
IS tmp _bb603
%A[j] //playground/sort.bb line 13
at _bb604 A j
put # A i _bb604
%A[j]=tmp //playground/sort.bb line 14
put # A j tmp
END
%A[i] //playground/sort.bb line 11
at _bb606 A i
%A[j] //playground/sort.bb line 11
at _bb607 A j
lt _bb605 _bb607 _bb606
%if(A[j]<A[i]){tmp=A[i];A[i]=A[j];A[j]=tm //playground/sort.bb line 11
if # _bb605 _bb602
END
%while(jas next(_bbmacro9))if(A[j]<A[i]){ //playground/sort.bb line 11
while # _bb598 _bb601
END
%while(ias next(_bbmacro8)){_bbmacro9=ite //playground/sort.bb line 10
while # _bb590 _bb593
END
IS sort _bb586
%5,2,3,4,1 //playground/sort.bb line 19
BUILTIN _bb608 I5
BUILTIN _bb609 I2
BUILTIN _bb610 I3
BUILTIN _bb611 I4
BUILTIN _bb612 I1
%5,2,3,4,1 //playground/sort.bb line 19
list A _bb608 _bb609 _bb610 _bb611 _bb612
%A|bb.collection.transform(num) //playground/sort.bb line 20
BEGIN _bb615
list args A
END
%bb.collection.transform(num) //playground/sort.bb line 20
BEGIN _bb618
list args num
END
%bb.collection //playground/sort.bb line 20
get _bb620 bb collection
%bb.collection.transform //playground/sort.bb line 20
get _bb619 _bb620 transform
%bb.collection.transform(num) //playground/sort.bb line 20
call _bb617 _bb618 _bb619
%A|bb.collection.transform(num) //playground/sort.bb line 20
call _bb614 _bb615 _bb617
IS A _bb614
%sort(A) //playground/sort.bb line 21
BEGIN _bb623
%sort(A) //playground/sort.bb line 21
BEGIN _bb625
list args A
END
%sort(A) //playground/sort.bb line 21
call _bb624 _bb625 sort
END
%try sort(A) //playground/sort.bb line 21
try _bb621 _bb623
%if((A[0]|int ==1)== false)fail("Assertio //playground/sort.bb line 23
BEGIN _bb626
%("Assertion failed") //playground/sort.bb line 23
BUILTIN _bb627 "Assertion failed"
%fail("Assertion failed") //playground/sort.bb line 23
fail # _bb627
END
%(A[0]|int ==1)== false //playground/sort.bb line 23
BUILTIN _bb629 Bfalse
%A[0]|int ==1 //playground/sort.bb line 23
BUILTIN _bb631 I1
%A[0] //playground/sort.bb line 23
BUILTIN _bb634 I0
%A[0] //playground/sort.bb line 23
at _bb633 A _bb634
%A[0]|int //playground/sort.bb line 23
int _bb632 _bb633
eq _bb630 _bb632 _bb631
eq _bb628 _bb630 _bb629
%if((A[0]|int ==1)== false)fail("Assertio //playground/sort.bb line 23
if # _bb628 _bb626
