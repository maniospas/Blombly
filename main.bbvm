%{returnx+y*2;} //main.bb line 1
BEGIN _bb169
next x args
int x x
next y args
int y y
%y*2 //main.bb line 1
BUILTIN _bb172 I2
mul _bb171 y _bb172
add _bb170 x _bb171
%returnx+y*2 //main.bb line 1
return # _bb170
END
IS add _bb169
%print(add) //main.bb line 2
print # add
%time() //main.bb line 5
time tic
%ret=0 //main.bb line 6
BUILTIN ret I0
%range(1000000) //main.bb line 7
BUILTIN _bb176 I1000000
%range(1000000) //main.bb line 7
range _bb175 _bb176
%bbvm::iter(range(1000000)) //main.bb line 7
iter _bbmacro5 _bb175
%while(ias bbvm::next(_bbmacro5))ret+=add //main.bb line 7
BEGIN _bb178
%bbvm::next(_bbmacro5) //main.bb line 7
next _bb179 _bbmacro5
AS i _bb179
exists _bb180 i
END
BEGIN _bb181
%add(i,1) //main.bb line 8
BEGIN _bb183
%i,1 //main.bb line 8
BUILTIN _bb184 I1
%i,1 //main.bb line 8
list args i _bb184
END
%add(i,1) //main.bb line 8
call _bb182 _bb183 add
add ret ret _bb182
END
%while(ias bbvm::next(_bbmacro5))ret+=add //main.bb line 7
while # _bb178 _bb181
%time() //main.bb line 10
time _bb187
sub _bb186 _bb187 tic
%print(time()-tic) //main.bb line 10
print # _bb186
%print(ret) //main.bb line 11
print # ret
