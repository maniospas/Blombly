%{returnx+y+y;} //main.bb line 1
BEGIN _bb169
next x args
float x x
next y args
float y y
%x+y //main.bb line 1
add _bb171 x y
add _bb170 _bb171 y
%returnx+y+y //main.bb line 1
return # _bb170
END
IS add _bb169
%print(add) //main.bb line 2
print # add
%time() //main.bb line 5
time tic
%ret=0 //main.bb line 6
BUILTIN ret I0
%range(1000000) //main.bb line 7
BUILTIN _bb175 I1000000
%range(1000000) //main.bb line 7
range _bb174 _bb175
%bbvm::iter(range(1000000)) //main.bb line 7
iter _bbmacro5 _bb174
%while(ias bbvm::next(_bbmacro5))ret+=add //main.bb line 7
BEGIN _bb177
%bbvm::next(_bbmacro5) //main.bb line 7
next _bb178 _bbmacro5
AS i _bb178
exists _bb179 i
END
BEGIN _bb180
%add(i,i) //main.bb line 8
BEGIN _bb182
%i,i //main.bb line 8
list args i i
END
%add(i,i) //main.bb line 8
call _bb181 _bb182 add
add ret ret _bb181
END
%while(ias bbvm::next(_bbmacro5))ret+=add //main.bb line 7
while # _bb177 _bb180
%time() //main.bb line 11
time _bb185
sub _bb184 _bb185 tic
%print(time()-tic) //main.bb line 11
print # _bb184
%print(ret) //main.bb line 12
print # ret
