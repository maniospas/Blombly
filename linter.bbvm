BEGIN _bb7
BUILTIN green "\e[0;32m"
final # green
BUILTIN yellow "\e[0;33m"
final # yellow
BUILTIN cyan "\e[0;36m"
final # cyan
BUILTIN lightgreen "\e[0;92m"
final # lightgreen
BUILTIN lightpurple "\e[0;95m"
final # lightpurple
BUILTIN reset "\e[0m"
final # reset
return # this
END
new ansi _bb7
final # ansi
BEGIN _bb46
BEGIN _bb47
next value args
str _bb48 value
return # _bb48
END
IS call _bb47
return # this
END
new string _bb46
BEGIN _bb162
next code args
BEGIN _bb163
BEGIN _bb166
BEGIN _bb167
return # #
END
BUILTIN _bb169 Bfalse
len _bb171 word
bool _bb170 _bb171
eq _bb168 _bb170 _bb169
if # _bb168 _bb167
BEGIN _bb172
get _bb174 ansi reset
get _bb176 ansi lightgreen
add _bb175 _bb176 word
add _bb173 _bb175 _bb174
add ret ret _bb173
return # #
END
if # in_comment _bb172
BEGIN _bb177
get _bb179 ansi reset
get _bb181 ansi green
add _bb180 _bb181 word
add _bb178 _bb180 _bb179
add ret ret _bb178
return # #
END
if # in_string _bb177
BEGIN _bb182
get _bb184 ansi reset
get _bb186 ansi cyan
add _bb185 _bb186 word
add _bb183 _bb185 _bb184
add ret ret _bb183
return # #
END
BUILTIN _bb189 "next"
eq _bb188 word _bb189
BUILTIN _bb192 "pop"
eq _bb191 word _bb192
BUILTIN _bb195 "push"
eq _bb194 word _bb195
BUILTIN _bb198 "in"
eq _bb197 word _bb198
BUILTIN _bb200 "as"
eq _bb199 word _bb200
or _bb196 _bb199 _bb197
or _bb193 _bb196 _bb194
or _bb190 _bb193 _bb191
or _bb187 _bb190 _bb188
if # _bb187 _bb182
BEGIN _bb201
get _bb203 ansi reset
get _bb205 ansi yellow
add _bb204 _bb205 word
add _bb202 _bb204 _bb203
add ret ret _bb202
return # #
END
BUILTIN _bb207 "!"
BUILTIN _bb209 I0
at _bb208 word _bb209
eq _bb206 _bb208 _bb207
if # _bb206 _bb201
BEGIN _bb210
get _bb212 ansi reset
get _bb214 ansi yellow
add _bb213 _bb214 word
add _bb211 _bb213 _bb212
add ret ret _bb211
return # #
END
BUILTIN _bb216 "@"
BUILTIN _bb218 I0
at _bb217 word _bb218
eq _bb215 _bb217 _bb216
if # _bb215 _bb210
BEGIN _bb219
get _bb221 ansi reset
get _bb223 ansi lightpurple
add _bb222 _bb223 word
add _bb220 _bb222 _bb221
add ret ret _bb220
return # #
END
BUILTIN _bb226 "fail"
eq _bb225 word _bb226
BUILTIN _bb229 "try"
eq _bb228 word _bb229
BUILTIN _bb232 "default"
eq _bb231 word _bb232
BUILTIN _bb235 "defer"
eq _bb234 word _bb235
BUILTIN _bb238 "assert"
eq _bb237 word _bb238
BUILTIN _bb241 "bbvm"
eq _bb240 word _bb241
BUILTIN _bb244 "else"
eq _bb243 word _bb244
BUILTIN _bb247 "return"
eq _bb246 word _bb247
BUILTIN _bb250 "catch"
eq _bb249 word _bb250
BUILTIN _bb253 "while"
eq _bb252 word _bb253
BUILTIN _bb256 "if"
eq _bb255 word _bb256
BUILTIN _bb258 "new"
eq _bb257 word _bb258
or _bb254 _bb257 _bb255
or _bb251 _bb254 _bb252
or _bb248 _bb251 _bb249
or _bb245 _bb248 _bb246
or _bb242 _bb245 _bb243
or _bb239 _bb242 _bb240
or _bb236 _bb239 _bb237
or _bb233 _bb236 _bb234
or _bb230 _bb233 _bb231
or _bb227 _bb230 _bb228
or _bb224 _bb227 _bb225
if # _bb224 _bb219
BEGIN _bb259
get _bb261 ansi reset
get _bb263 ansi cyan
add _bb262 _bb263 word
add _bb260 _bb262 _bb261
add ret ret _bb260
return # #
END
BUILTIN _bb266 "true"
eq _bb265 word _bb266
BUILTIN _bb269 "bool"
eq _bb268 word _bb269
BUILTIN _bb272 "random"
eq _bb271 word _bb272
BUILTIN _bb275 "time"
eq _bb274 word _bb275
BUILTIN _bb278 "not"
eq _bb277 word _bb278
BUILTIN _bb281 "and"
eq _bb280 word _bb281
BUILTIN _bb284 "or"
eq _bb283 word _bb284
BUILTIN _bb287 "pow"
eq _bb286 word _bb287
BUILTIN _bb290 "mod"
eq _bb289 word _bb290
BUILTIN _bb293 "div"
eq _bb292 word _bb293
BUILTIN _bb296 "mul"
eq _bb295 word _bb296
BUILTIN _bb299 "sub"
eq _bb298 word _bb299
BUILTIN _bb302 "add"
eq _bb301 word _bb302
BUILTIN _bb305 "false"
eq _bb304 word _bb305
BUILTIN _bb308 "this"
eq _bb307 word _bb308
BUILTIN _bb311 "iter"
eq _bb310 word _bb311
BUILTIN _bb314 "file"
eq _bb313 word _bb314
BUILTIN _bb317 "print"
eq _bb316 word _bb317
BUILTIN _bb320 "server"
eq _bb319 word _bb320
BUILTIN _bb323 "str"
eq _bb322 word _bb323
BUILTIN _bb326 "server"
eq _bb325 word _bb326
BUILTIN _bb329 "call"
eq _bb328 word _bb329
BUILTIN _bb332 "float"
eq _bb331 word _bb332
BUILTIN _bb335 "final"
eq _bb334 word _bb335
BUILTIN _bb338 "int"
eq _bb337 word _bb338
BUILTIN _bb341 "bool"
eq _bb340 word _bb341
BUILTIN _bb343 "len"
eq _bb342 word _bb343
or _bb339 _bb342 _bb340
or _bb336 _bb339 _bb337
or _bb333 _bb336 _bb334
or _bb330 _bb333 _bb331
or _bb327 _bb330 _bb328
or _bb324 _bb327 _bb325
or _bb321 _bb324 _bb322
or _bb318 _bb321 _bb319
or _bb315 _bb318 _bb316
or _bb312 _bb315 _bb313
or _bb309 _bb312 _bb310
or _bb306 _bb309 _bb307
or _bb303 _bb306 _bb304
or _bb300 _bb303 _bb301
or _bb297 _bb300 _bb298
or _bb294 _bb297 _bb295
or _bb291 _bb294 _bb292
or _bb288 _bb291 _bb289
or _bb285 _bb288 _bb286
or _bb282 _bb285 _bb283
or _bb279 _bb282 _bb280
or _bb276 _bb279 _bb277
or _bb273 _bb276 _bb274
or _bb270 _bb273 _bb271
or _bb267 _bb270 _bb268
or _bb264 _bb267 _bb265
if # _bb264 _bb259
add ret ret word
END
try _bb164 _bb166
BUILTIN word ""
END
IS end_word _bb163
get _bb345 ansi reset
IS ret _bb345
BUILTIN word ""
BUILTIN pos I0
len n code
BUILTIN in_string Bfalse
BUILTIN in_fstring Bfalse
BUILTIN in_comment Bfalse
BEGIN _bb352
lt _bb353 pos n
END
BEGIN _bb354
BEGIN _bb357
at _bb358 code pos
IS c _bb358
BUILTIN _bb359 I1
add pos pos _bb359
BEGIN _bb360
inline _bb361 end_word
add ret ret c
BUILTIN in_comment Bfalse
return # #
END
BUILTIN _bb365 "\n"
eq _bb364 c _bb365
and _bb363 _bb364 in_comment
if # _bb363 _bb360
BEGIN _bb366
BEGIN _bb367
BUILTIN in_comment Btrue
END
BUILTIN _bb370 "/"
at _bb371 code pos
eq _bb369 _bb371 _bb370
if # _bb369 _bb367
END
lt _bb373 pos n
BUILTIN _bb375 "/"
eq _bb374 c _bb375
and _bb372 _bb374 _bb373
if # _bb372 _bb366
BEGIN _bb376
add word word c
return # #
END
if # in_comment _bb376
BEGIN _bb377
BEGIN _bb378
add word word c
inline _bb379 end_word
BUILTIN in_string Bfalse
return # #
END
if # in_string _bb378
inline _bb381 end_word
BUILTIN in_string Btrue
END
BUILTIN _bb384 """
eq _bb383 c _bb384
if # _bb383 _bb377
BEGIN _bb385
BEGIN _bb386
inline _bb387 end_word
get _bb389 ansi reset
get _bb391 ansi cyan
add _bb390 _bb391 c
add _bb388 _bb390 _bb389
add ret ret _bb388
BUILTIN in_string Btrue
BUILTIN in_fstring Bfalse
return # #
END
BUILTIN _bb396 "}"
eq _bb395 c _bb396
and _bb394 in_fstring _bb395
if # _bb394 _bb386
BEGIN _bb397
inline _bb398 end_word
get _bb400 ansi reset
get _bb402 ansi cyan
add _bb401 _bb402 c
add _bb399 _bb401 _bb400
add ret ret _bb399
BUILTIN in_fstring Btrue
BUILTIN in_string Bfalse
return # #
END
BUILTIN _bb407 "{"
eq _bb406 c _bb407
not _bb408 in_fstring
and _bb405 _bb408 _bb406
if # _bb405 _bb397
BEGIN _bb409
add word word c
return # #
END
not _bb410 in_fstring
if # _bb410 _bb409
END
or _bb411 in_string in_fstring
if # _bb411 _bb385
BEGIN _bb412
BEGIN _bb413
inline _bb414 end_word
get _bb416 ansi reset
BUILTIN _bb418 "=>"
get _bb419 ansi lightpurple
add _bb417 _bb419 _bb418
add _bb415 _bb417 _bb416
add ret ret _bb415
BUILTIN _bb420 I1
add pos pos _bb420
return # #
END
BUILTIN _bb422 ">"
at _bb423 code pos
eq _bb421 _bb423 _bb422
if # _bb421 _bb413
END
lt _bb425 pos n
BUILTIN _bb427 "="
eq _bb426 c _bb427
and _bb424 _bb426 _bb425
if # _bb424 _bb412
BEGIN _bb428
BEGIN _bb429
inline _bb430 end_word
get _bb432 ansi reset
BUILTIN _bb434 "->"
get _bb435 ansi lightpurple
add _bb433 _bb435 _bb434
add _bb431 _bb433 _bb432
add ret ret _bb431
BUILTIN _bb436 I1
add pos pos _bb436
return # #
END
BUILTIN _bb438 ">"
at _bb439 code pos
eq _bb437 _bb439 _bb438
if # _bb437 _bb429
END
lt _bb441 pos n
BUILTIN _bb443 "-"
eq _bb442 c _bb443
and _bb440 _bb442 _bb441
if # _bb440 _bb428
BEGIN _bb444
inline _bb445 end_word
get _bb447 ansi reset
get _bb449 ansi cyan
add _bb448 _bb449 c
add _bb446 _bb448 _bb447
add ret ret _bb446
return # #
END
BUILTIN _bb451 ":"
eq _bb450 c _bb451
if # _bb450 _bb444
BEGIN _bb452
inline _bb453 end_word
get _bb455 ansi reset
get _bb457 ansi cyan
add _bb456 _bb457 c
add _bb454 _bb456 _bb455
add ret ret _bb454
return # #
END
BUILTIN _bb460 "}"
eq _bb459 c _bb460
BUILTIN _bb462 "{"
eq _bb461 c _bb462
or _bb458 _bb461 _bb459
if # _bb458 _bb452
BEGIN _bb463
inline _bb464 end_word
get _bb466 ansi reset
get _bb468 ansi reset
add _bb467 _bb468 c
add _bb465 _bb467 _bb466
add ret ret _bb465
return # #
END
BUILTIN _bb471 ","
eq _bb470 c _bb471
BUILTIN _bb474 ";"
eq _bb473 c _bb474
BUILTIN _bb477 ")"
eq _bb476 c _bb477
BUILTIN _bb480 "("
eq _bb479 c _bb480
BUILTIN _bb483 "]"
eq _bb482 c _bb483
BUILTIN _bb486 "["
eq _bb485 c _bb486
BUILTIN _bb489 "/"
eq _bb488 c _bb489
BUILTIN _bb492 "="
eq _bb491 c _bb492
BUILTIN _bb495 "."
eq _bb494 c _bb495
BUILTIN _bb498 "|"
eq _bb497 c _bb498
BUILTIN _bb501 "%"
eq _bb500 c _bb501
BUILTIN _bb504 "^"
eq _bb503 c _bb504
BUILTIN _bb507 "*"
eq _bb506 c _bb507
BUILTIN _bb510 "-"
eq _bb509 c _bb510
BUILTIN _bb513 "+"
eq _bb512 c _bb513
BUILTIN _bb516 "<"
eq _bb515 c _bb516
BUILTIN _bb518 ">"
eq _bb517 c _bb518
or _bb514 _bb517 _bb515
or _bb511 _bb514 _bb512
or _bb508 _bb511 _bb509
or _bb505 _bb508 _bb506
or _bb502 _bb505 _bb503
or _bb499 _bb502 _bb500
or _bb496 _bb499 _bb497
or _bb493 _bb496 _bb494
or _bb490 _bb493 _bb491
or _bb487 _bb490 _bb488
or _bb484 _bb487 _bb485
or _bb481 _bb484 _bb482
or _bb478 _bb481 _bb479
or _bb475 _bb478 _bb476
or _bb472 _bb475 _bb473
or _bb469 _bb472 _bb470
if # _bb469 _bb463
BEGIN _bb519
inline _bb520 end_word
add ret ret c
return # #
END
BUILTIN _bb523 "\n"
eq _bb522 c _bb523
BUILTIN _bb525 " "
eq _bb524 c _bb525
or _bb521 _bb524 _bb522
if # _bb521 _bb519
add word word c
END
try _bb355 _bb357
END
while # _bb352 _bb354
inline _bb526 end_word
get _bb528 ansi reset
add _bb527 ret _bb528
return # _bb527
END
IS highlight _bb162
BUILTIN _bb530 "File for code highlighting:"
read path _bb530
BUILTIN _bb531 ""
print # _bb531
BUILTIN _bb532 "===================================================="
print # _bb532
file _bb534 path
str code _bb534
BEGIN _bb536
list args code
END
call _bb535 _bb536 highlight
print # _bb535
BUILTIN _bb538 "===================================================="
print # _bb538
