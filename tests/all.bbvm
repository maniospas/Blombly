%new{} //libs/.bb line 8
BEGIN _bb16
return # this
END
%new{} //libs/.bb line 8
new bb _bb16
final # bb
%{final black="\e[0;30m";final red="\e[0; //libs/ansi.bb line 1
BEGIN _bb19
%final red="\e[0;31m" //libs/ansi.bb line 3
BUILTIN red "\e[0;31m"
final # red
%final green="\e[0;32m" //libs/ansi.bb line 4
BUILTIN green "\e[0;32m"
final # green
%final reset="\e[0m" //libs/ansi.bb line 18
BUILTIN reset "\e[0m"
final # reset
return # this
END
%new{final black="\e[0;30m";final red="\e //libs/ansi.bb line 1
new _bb17 _bb19
set # bb ansi _bb17
%{final toback(element)={return new{.elem //libs/collections.bb line 1
BEGIN _bb39
%{return new{.element=this.element;call(A //libs/collections.bb line 2
BEGIN _bb40
next element args
%{.element=this.element;call(A)={..elemen //libs/collections.bb line 2
BEGIN _bb43
%this.element //libs/collections.bb line 2
get _bb44 this element
IS .element _bb44
%{..element=this..element;push(A,..elemen //libs/collections.bb line 2
BEGIN _bb45
next A args
%this..element //libs/collections.bb line 2
get _bb46 this .element
IS ..element _bb46
%push(A,..element) //libs/collections.bb line 2
push # A ..element
%returnA //libs/collections.bb line 2
return # A
END
IS call _bb45
return # this
END
%new{.element=this.element;call(A)={..ele //libs/collections.bb line 2
new _bb41 _bb43
%return new{.element=this.element;call(A) //libs/collections.bb line 2
return # _bb41
END
IS toback _bb40
final # toback
%return new{.func=this.func;call(A)={..fu //libs/collections.bb line 8
return # this
END
%new{final toback(element)={return new{.e //libs/collections.bb line 1
new _bb37 _bb39
set # bb collection _bb37
%{final call(str file path)={return path; //libs/collections.bb line 17
BEGIN _bb64
%{return path;} //libs/collections.bb line 18
BEGIN _bb65
next path args
str path path
file path path
%return path //libs/collections.bb line 18
return # path
END
IS call _bb65
%return bool(file(path)/".")== false //libs/collections.bb line 27
return # this
END
%new{final call(str file path)={return pa //libs/collections.bb line 17
new _bb62 _bb64
set # bb os _bb62
%{call(str value)={return value;}final st //libs/collections.bb line 30
BEGIN _bb86
%{return value;} //libs/collections.bb line 31
BEGIN _bb87
next value args
str value value
%return value //libs/collections.bb line 31
return # value
END
IS call _bb87
%{return new{.query=this.query;if((args|l //libs/collections.bb line 33
BEGIN _bb88
next query args
str query query
%{.query=this.query;if((args|len ==0)== f //libs/collections.bb line 33
BEGIN _bb91
%this.query //libs/collections.bb line 33
get _bb92 this query
IS .query _bb92
%if((args|len ==0)== false)fail("Assertio //libs/collections.bb line 33
BEGIN _bb93
%("Assertion failed: args|len==0") //libs/collections.bb line 33
BUILTIN _bb94 "Assertion failed: args|len==0"
%fail("Assertion failed: args|len==0") //libs/collections.bb line 33
fail # _bb94
END
%(args|len ==0)== false //libs/collections.bb line 33
BUILTIN _bb96 Bfalse
%args|len ==0 //libs/collections.bb line 33
BUILTIN _bb98 I0
%args|len //libs/collections.bb line 33
len _bb99 args
eq _bb97 _bb99 _bb98
eq _bb95 _bb97 _bb96
%if((args|len ==0)== false)fail("Assertio //libs/collections.bb line 33
if # _bb95 _bb93
%{..query=this..query;if((args|len ==0)== //libs/collections.bb line 33
BEGIN _bb100
next search args
str search search
%this..query //libs/collections.bb line 33
get _bb101 this .query
IS ..query _bb101
%if((args|len ==0)== false)fail("Assertio //libs/collections.bb line 33
BEGIN _bb102
%("Assertion failed: args|len==0") //libs/collections.bb line 33
BUILTIN _bb103 "Assertion failed: args|len==0"
%fail("Assertion failed: args|len==0") //libs/collections.bb line 33
fail # _bb103
END
%(args|len ==0)== false //libs/collections.bb line 33
BUILTIN _bb105 Bfalse
%args|len ==0 //libs/collections.bb line 33
BUILTIN _bb107 I0
%args|len //libs/collections.bb line 33
len _bb108 args
eq _bb106 _bb108 _bb107
eq _bb104 _bb106 _bb105
%if((args|len ==0)== false)fail("Assertio //libs/collections.bb line 33
if # _bb104 _bb102
%query=..query //libs/collections.bb line 33
IS query ..query
%search|len //libs/collections.bb line 33
len nsearch search
%query|len //libs/collections.bb line 33
len nquery query
%if(nsearch<nquery)return false //libs/collections.bb line 33
BEGIN _bb111
BUILTIN _bb112 Bfalse
%return false //libs/collections.bb line 33
return # _bb112
END
%nsearch<nquery //libs/collections.bb line 33
lt _bb113 nsearch nquery
%if(nsearch<nquery)return false //libs/collections.bb line 33
if # _bb113 _bb111
%range(nquery) //libs/collections.bb line 33
range _bb114 nquery
%iter(range(nquery)) //libs/collections.bb line 33
iter _bbmacro2 _bb114
%while(ias next(_bbmacro2))if(query[i]!=  //libs/collections.bb line 33
BEGIN _bb116
%next(_bbmacro2) //libs/collections.bb line 33
next _bb117 _bbmacro2
AS i _bb117
exists _bb118 i
END
BEGIN _bb119
%if(query[i]!= search[i])return false //libs/collections.bb line 33
BEGIN _bb120
BUILTIN _bb121 Bfalse
%return false //libs/collections.bb line 33
return # _bb121
END
%search[i] //libs/collections.bb line 33
at _bb123 search i
%query[i] //libs/collections.bb line 33
at _bb124 query i
neq _bb122 _bb124 _bb123
%if(query[i]!= search[i])return false //libs/collections.bb line 33
if # _bb122 _bb120
END
%while(ias next(_bbmacro2))if(query[i]!=  //libs/collections.bb line 33
while # _bb116 _bb119
BUILTIN _bb125 Btrue
%return true //libs/collections.bb line 33
return # _bb125
END
IS call _bb100
return # this
END
%new{.query=this.query;if((args|len ==0)= //libs/collections.bb line 33
new _bb89 _bb91
%return new{.query=this.query;if((args|le //libs/collections.bb line 33
return # _bb89
END
IS starts _bb88
final # starts
%{return new{.query=this.query;if((args|l //libs/collections.bb line 45
BEGIN _bb126
next query args
str query query
%{.query=this.query;if((args|len ==0)== f //libs/collections.bb line 45
BEGIN _bb129
%this.query //libs/collections.bb line 45
get _bb130 this query
IS .query _bb130
%if((args|len ==0)== false)fail("Assertio //libs/collections.bb line 45
BEGIN _bb131
%("Assertion failed: args|len==0") //libs/collections.bb line 45
BUILTIN _bb132 "Assertion failed: args|len==0"
%fail("Assertion failed: args|len==0") //libs/collections.bb line 45
fail # _bb132
END
%(args|len ==0)== false //libs/collections.bb line 45
BUILTIN _bb134 Bfalse
%args|len ==0 //libs/collections.bb line 45
BUILTIN _bb136 I0
%args|len //libs/collections.bb line 45
len _bb137 args
eq _bb135 _bb137 _bb136
eq _bb133 _bb135 _bb134
%if((args|len ==0)== false)fail("Assertio //libs/collections.bb line 45
if # _bb133 _bb131
%{..query=this..query;if((args|len ==0)== //libs/collections.bb line 45
BEGIN _bb138
next search args
str search search
%this..query //libs/collections.bb line 45
get _bb139 this .query
IS ..query _bb139
%if((args|len ==0)== false)fail("Assertio //libs/collections.bb line 45
BEGIN _bb140
%("Assertion failed: args|len==0") //libs/collections.bb line 45
BUILTIN _bb141 "Assertion failed: args|len==0"
%fail("Assertion failed: args|len==0") //libs/collections.bb line 45
fail # _bb141
END
%(args|len ==0)== false //libs/collections.bb line 45
BUILTIN _bb143 Bfalse
%args|len ==0 //libs/collections.bb line 45
BUILTIN _bb145 I0
%args|len //libs/collections.bb line 45
len _bb146 args
eq _bb144 _bb146 _bb145
eq _bb142 _bb144 _bb143
%if((args|len ==0)== false)fail("Assertio //libs/collections.bb line 45
if # _bb142 _bb140
%query=..query //libs/collections.bb line 45
IS query ..query
%search|len //libs/collections.bb line 45
len nsearch search
%query|len //libs/collections.bb line 45
len nquery query
%if(nsearch<nquery)return false //libs/collections.bb line 45
BEGIN _bb149
BUILTIN _bb150 Bfalse
%return false //libs/collections.bb line 45
return # _bb150
END
%nsearch<nquery //libs/collections.bb line 45
lt _bb151 nsearch nquery
%if(nsearch<nquery)return false //libs/collections.bb line 45
if # _bb151 _bb149
%range(nquery) //libs/collections.bb line 45
range _bb152 nquery
%iter(range(nquery)) //libs/collections.bb line 45
iter _bbmacro3 _bb152
%while(ias next(_bbmacro3))if(query[i]!=  //libs/collections.bb line 45
BEGIN _bb154
%next(_bbmacro3) //libs/collections.bb line 45
next _bb155 _bbmacro3
AS i _bb155
exists _bb156 i
END
BEGIN _bb157
%if(query[i]!= search[nsearch-nquery+i])r //libs/collections.bb line 45
BEGIN _bb158
BUILTIN _bb159 Bfalse
%return false //libs/collections.bb line 45
return # _bb159
END
%nsearch-nquery //libs/collections.bb line 45
sub _bb163 nsearch nquery
add _bb162 _bb163 i
%search[nsearch-nquery+i] //libs/collections.bb line 45
at _bb161 search _bb162
%query[i] //libs/collections.bb line 45
at _bb164 query i
neq _bb160 _bb164 _bb161
%if(query[i]!= search[nsearch-nquery+i])r //libs/collections.bb line 45
if # _bb160 _bb158
END
%while(ias next(_bbmacro3))if(query[i]!=  //libs/collections.bb line 45
while # _bb154 _bb157
BUILTIN _bb165 Btrue
%return true //libs/collections.bb line 45
return # _bb165
END
IS call _bb138
return # this
END
%new{.query=this.query;if((args|len ==0)= //libs/collections.bb line 45
new _bb127 _bb129
%return new{.query=this.query;if((args|le //libs/collections.bb line 45
return # _bb127
END
IS ends _bb126
final # ends
%return new{.query=this.query;if((args|le //libs/collections.bb line 73
return # this
END
%new{call(str value)={return value;}final //libs/collections.bb line 30
new _bb84 _bb86
set # bb string _bb84
%{A=1,2,3,4;if((A[1]==2)== false)fail("As //tests/all.bb line 1
BEGIN _bb259
%1,2,3,4 //tests/list.bb line 1
BUILTIN _bb260 I1
BUILTIN _bb261 I2
BUILTIN _bb262 I3
BUILTIN _bb263 I4
%1,2,3,4 //tests/list.bb line 1
list A _bb260 _bb261 _bb262 _bb263
%if((A[1]==2)== false)fail("Assertion fai //tests/list.bb line 2
BEGIN _bb265
%("Assertion failed: A[1]==2") //tests/list.bb line 2
BUILTIN _bb266 "Assertion failed: A[1]==2"
%fail("Assertion failed: A[1]==2") //tests/list.bb line 2
fail # _bb266
END
%(A[1]==2)== false //tests/list.bb line 2
BUILTIN _bb268 Bfalse
%A[1]==2 //tests/list.bb line 2
BUILTIN _bb270 I2
%A[1] //tests/list.bb line 2
BUILTIN _bb272 I1
%A[1] //tests/list.bb line 2
at _bb271 A _bb272
eq _bb269 _bb271 _bb270
eq _bb267 _bb269 _bb268
%if((A[1]==2)== false)fail("Assertion fai //tests/list.bb line 2
if # _bb267 _bb265
%if((A|next ==1)== false)fail("Assertion  //tests/list.bb line 3
BEGIN _bb273
%("Assertion failed: A|next==1") //tests/list.bb line 3
BUILTIN _bb274 "Assertion failed: A|next==1"
%fail("Assertion failed: A|next==1") //tests/list.bb line 3
fail # _bb274
END
%(A|next ==1)== false //tests/list.bb line 3
BUILTIN _bb276 Bfalse
%A|next ==1 //tests/list.bb line 3
BUILTIN _bb278 I1
%A|next //tests/list.bb line 3
next _bb279 A
eq _bb277 _bb279 _bb278
eq _bb275 _bb277 _bb276
%if((A|next ==1)== false)fail("Assertion  //tests/list.bb line 3
if # _bb275 _bb273
%if((A|next ==2)== false)fail("Assertion  //tests/list.bb line 4
BEGIN _bb280
%("Assertion failed: A|next==2") //tests/list.bb line 4
BUILTIN _bb281 "Assertion failed: A|next==2"
%fail("Assertion failed: A|next==2") //tests/list.bb line 4
fail # _bb281
END
%(A|next ==2)== false //tests/list.bb line 4
BUILTIN _bb283 Bfalse
%A|next ==2 //tests/list.bb line 4
BUILTIN _bb285 I2
%A|next //tests/list.bb line 4
next _bb286 A
eq _bb284 _bb286 _bb285
eq _bb282 _bb284 _bb283
%if((A|next ==2)== false)fail("Assertion  //tests/list.bb line 4
if # _bb282 _bb280
%if((A|pop ==4)== false)fail("Assertion f //tests/list.bb line 5
BEGIN _bb287
%("Assertion failed: A|pop==4") //tests/list.bb line 5
BUILTIN _bb288 "Assertion failed: A|pop==4"
%fail("Assertion failed: A|pop==4") //tests/list.bb line 5
fail # _bb288
END
%(A|pop ==4)== false //tests/list.bb line 5
BUILTIN _bb290 Bfalse
%A|pop ==4 //tests/list.bb line 5
BUILTIN _bb292 I4
%A|pop //tests/list.bb line 5
pop _bb293 A
eq _bb291 _bb293 _bb292
eq _bb289 _bb291 _bb290
%if((A|pop ==4)== false)fail("Assertion f //tests/list.bb line 5
if # _bb289 _bb287
%if((A|pop ==3)== false)fail("Assertion f //tests/list.bb line 6
BEGIN _bb294
%("Assertion failed: A|pop==3") //tests/list.bb line 6
BUILTIN _bb295 "Assertion failed: A|pop==3"
%fail("Assertion failed: A|pop==3") //tests/list.bb line 6
fail # _bb295
END
%(A|pop ==3)== false //tests/list.bb line 6
BUILTIN _bb297 Bfalse
%A|pop ==3 //tests/list.bb line 6
BUILTIN _bb299 I3
%A|pop //tests/list.bb line 6
pop _bb300 A
eq _bb298 _bb300 _bb299
eq _bb296 _bb298 _bb297
%if((A|pop ==3)== false)fail("Assertion f //tests/list.bb line 6
if # _bb296 _bb294
%if((A|len ==0)== false)fail("Assertion f //tests/list.bb line 7
BEGIN _bb301
%("Assertion failed: A|len==0") //tests/list.bb line 7
BUILTIN _bb302 "Assertion failed: A|len==0"
%fail("Assertion failed: A|len==0") //tests/list.bb line 7
fail # _bb302
END
%(A|len ==0)== false //tests/list.bb line 7
BUILTIN _bb304 Bfalse
%A|len ==0 //tests/list.bb line 7
BUILTIN _bb306 I0
%A|len //tests/list.bb line 7
len _bb307 A
eq _bb305 _bb307 _bb306
eq _bb303 _bb305 _bb304
%if((A|len ==0)== false)fail("Assertion f //tests/list.bb line 7
if # _bb303 _bb301
%push(A,5) //tests/list.bb line 8
BUILTIN _bb308 I5
%push(A,5) //tests/list.bb line 8
push # A _bb308
%if((A|pop ==5)== false)fail("Assertion f //tests/list.bb line 9
BEGIN _bb309
%("Assertion failed: A|pop==5") //tests/list.bb line 9
BUILTIN _bb310 "Assertion failed: A|pop==5"
%fail("Assertion failed: A|pop==5") //tests/list.bb line 9
fail # _bb310
END
%(A|pop ==5)== false //tests/list.bb line 9
BUILTIN _bb312 Bfalse
%A|pop ==5 //tests/list.bb line 9
BUILTIN _bb314 I5
%A|pop //tests/list.bb line 9
pop _bb315 A
eq _bb313 _bb315 _bb314
eq _bb311 _bb313 _bb312
%if((A|pop ==5)== false)fail("Assertion f //tests/list.bb line 9
if # _bb311 _bb309
return # #
END
%try{A=1,2,3,4;if((A[1]==2)== false)fail( //tests/all.bb line 1
try _bbmacro6 _bb259
%catch(_bbmacro6)print("[ "+str(bb.ansi.r //tests/all.bb line 1
BEGIN _bb316
%str(_bbmacro6) //tests/all.bb line 1
str _bb318 _bbmacro6
%"[ "+str(bb.ansi.red)+"fail"+str(bb.ansi //tests/all.bb line 1
BUILTIN _bb320 "\n"
%"[ "+str(bb.ansi.red)+"fail"+str(bb.ansi //tests/all.bb line 1
BUILTIN _bb322 "List"
%"[ "+str(bb.ansi.red)+"fail"+str(bb.ansi //tests/all.bb line 1
BUILTIN _bb324 " ] "
%bb.ansi //tests/all.bb line 1
get _bb327 bb ansi
%bb.ansi.reset //tests/all.bb line 1
get _bb326 _bb327 reset
%str(bb.ansi.reset) //tests/all.bb line 1
str _bb328 _bb326
%"[ "+str(bb.ansi.red)+"fail" //tests/all.bb line 1
BUILTIN _bb330 "fail"
%bb.ansi //tests/all.bb line 1
get _bb333 bb ansi
%bb.ansi.red //tests/all.bb line 1
get _bb332 _bb333 red
%str(bb.ansi.red) //tests/all.bb line 1
str _bb334 _bb332
BUILTIN _bb335 "[ "
add _bb331 _bb335 _bb334
add _bb329 _bb331 _bb330
add _bb325 _bb329 _bb328
add _bb323 _bb325 _bb324
add _bb321 _bb323 _bb322
add _bb319 _bb321 _bb320
add _bb317 _bb319 _bb318
%print("[ "+str(bb.ansi.red)+"fail"+str(b //tests/all.bb line 1
print # _bb317
END
BEGIN _bb336
%"[  "+str(bb.ansi.green)+"ok"+str(bb.ans //tests/all.bb line 1
BUILTIN _bb338 "List"
%"[  "+str(bb.ansi.green)+"ok"+str(bb.ans //tests/all.bb line 1
BUILTIN _bb340 "  ] "
%bb.ansi //tests/all.bb line 1
get _bb343 bb ansi
%bb.ansi.reset //tests/all.bb line 1
get _bb342 _bb343 reset
%str(bb.ansi.reset) //tests/all.bb line 1
str _bb344 _bb342
%"[  "+str(bb.ansi.green)+"ok" //tests/all.bb line 1
BUILTIN _bb346 "ok"
%bb.ansi //tests/all.bb line 1
get _bb349 bb ansi
%bb.ansi.green //tests/all.bb line 1
get _bb348 _bb349 green
%str(bb.ansi.green) //tests/all.bb line 1
str _bb350 _bb348
BUILTIN _bb351 "[  "
add _bb347 _bb351 _bb350
add _bb345 _bb347 _bb346
add _bb341 _bb345 _bb344
add _bb339 _bb341 _bb340
add _bb337 _bb339 _bb338
%print("[  "+str(bb.ansi.green)+"ok"+str( //tests/all.bb line 1
print # _bb337
END
%catch(_bbmacro6)print("[ "+str(bb.ansi.r //tests/all.bb line 1
catch # _bbmacro6 _bb316 _bb336
%{s=0;_bbmacro8=iter(range(10));while(ias //tests/all.bb line 2
BEGIN _bb354
%s=0 //tests/range.bb line 1
BUILTIN s I0
%range(10) //tests/range.bb line 2
BUILTIN _bb357 I10
%range(10) //tests/range.bb line 2
range _bb356 _bb357
%iter(range(10)) //tests/range.bb line 2
iter _bbmacro8 _bb356
%while(ias next(_bbmacro8))s+=i //tests/range.bb line 2
BEGIN _bb359
%next(_bbmacro8) //tests/range.bb line 2
next _bb360 _bbmacro8
AS i _bb360
exists _bb361 i
END
BEGIN _bb362
%s+=i //tests/range.bb line 2
add s s i
END
%while(ias next(_bbmacro8))s+=i //tests/range.bb line 2
while # _bb359 _bb362
%if((s== 45)== false)fail("Assertion fail //tests/range.bb line 3
BEGIN _bb363
%("Assertion failed: s==45") //tests/range.bb line 3
BUILTIN _bb364 "Assertion failed: s==45"
%fail("Assertion failed: s==45") //tests/range.bb line 3
fail # _bb364
END
%(s== 45)== false //tests/range.bb line 3
BUILTIN _bb366 Bfalse
%s== 45 //tests/range.bb line 3
BUILTIN _bb368 I45
eq _bb367 s _bb368
eq _bb365 _bb367 _bb366
%if((s== 45)== false)fail("Assertion fail //tests/range.bb line 3
if # _bb365 _bb363
return # #
END
%try{s=0;_bbmacro8=iter(range(10));while( //tests/all.bb line 2
try _bbmacro7 _bb354
%catch(_bbmacro7)print("[ "+str(bb.ansi.r //tests/all.bb line 2
BEGIN _bb369
%str(_bbmacro7) //tests/all.bb line 2
str _bb371 _bbmacro7
%"[ "+str(bb.ansi.red)+"fail"+str(bb.ansi //tests/all.bb line 2
BUILTIN _bb373 "\n"
%"[ "+str(bb.ansi.red)+"fail"+str(bb.ansi //tests/all.bb line 2
BUILTIN _bb375 "Range"
%"[ "+str(bb.ansi.red)+"fail"+str(bb.ansi //tests/all.bb line 2
BUILTIN _bb377 " ] "
%bb.ansi //tests/all.bb line 2
get _bb380 bb ansi
%bb.ansi.reset //tests/all.bb line 2
get _bb379 _bb380 reset
%str(bb.ansi.reset) //tests/all.bb line 2
str _bb381 _bb379
%"[ "+str(bb.ansi.red)+"fail" //tests/all.bb line 2
BUILTIN _bb383 "fail"
%bb.ansi //tests/all.bb line 2
get _bb386 bb ansi
%bb.ansi.red //tests/all.bb line 2
get _bb385 _bb386 red
%str(bb.ansi.red) //tests/all.bb line 2
str _bb387 _bb385
BUILTIN _bb388 "[ "
add _bb384 _bb388 _bb387
add _bb382 _bb384 _bb383
add _bb378 _bb382 _bb381
add _bb376 _bb378 _bb377
add _bb374 _bb376 _bb375
add _bb372 _bb374 _bb373
add _bb370 _bb372 _bb371
%print("[ "+str(bb.ansi.red)+"fail"+str(b //tests/all.bb line 2
print # _bb370
END
BEGIN _bb389
%"[  "+str(bb.ansi.green)+"ok"+str(bb.ans //tests/all.bb line 2
BUILTIN _bb391 "Range"
%"[  "+str(bb.ansi.green)+"ok"+str(bb.ans //tests/all.bb line 2
BUILTIN _bb393 "  ] "
%bb.ansi //tests/all.bb line 2
get _bb396 bb ansi
%bb.ansi.reset //tests/all.bb line 2
get _bb395 _bb396 reset
%str(bb.ansi.reset) //tests/all.bb line 2
str _bb397 _bb395
%"[  "+str(bb.ansi.green)+"ok" //tests/all.bb line 2
BUILTIN _bb399 "ok"
%bb.ansi //tests/all.bb line 2
get _bb402 bb ansi
%bb.ansi.green //tests/all.bb line 2
get _bb401 _bb402 green
%str(bb.ansi.green) //tests/all.bb line 2
str _bb403 _bb401
BUILTIN _bb404 "[  "
add _bb400 _bb404 _bb403
add _bb398 _bb400 _bb399
add _bb394 _bb398 _bb397
add _bb392 _bb394 _bb393
add _bb390 _bb392 _bb391
%print("[  "+str(bb.ansi.green)+"ok"+str( //tests/all.bb line 2
print # _bb390
END
%catch(_bbmacro7)print("[ "+str(bb.ansi.r //tests/all.bb line 2
catch # _bbmacro7 _bb369 _bb389
%{A=1,2,3;s=0;_bbmacro10=iter(A);while(xa //tests/all.bb line 3
BEGIN _bb407
%1,2,3 //tests/iter.bb line 1
BUILTIN _bb408 I1
BUILTIN _bb409 I2
BUILTIN _bb410 I3
%1,2,3 //tests/iter.bb line 1
list A _bb408 _bb409 _bb410
%s=0 //tests/iter.bb line 2
BUILTIN s I0
%iter(A) //tests/iter.bb line 3
iter _bbmacro10 A
%while(xas next(_bbmacro10))s+=x //tests/iter.bb line 3
BEGIN _bb414
%next(_bbmacro10) //tests/iter.bb line 3
next _bb415 _bbmacro10
AS x _bb415
exists _bb416 x
END
BEGIN _bb417
%s+=x //tests/iter.bb line 3
add s s x
END
%while(xas next(_bbmacro10))s+=x //tests/iter.bb line 3
while # _bb414 _bb417
%iter(A) //tests/iter.bb line 5
iter it A
%while(xas bbvm::next(it))s-=x //tests/iter.bb line 6
BEGIN _bb419
%bbvm::next(it) //tests/iter.bb line 6
next _bb420 it
AS x _bb420
exists _bb421 x
END
BEGIN _bb422
%s-=x //tests/iter.bb line 6
sub s s x
END
%while(xas bbvm::next(it))s-=x //tests/iter.bb line 6
while # _bb419 _bb422
%if((s==0)== false)fail("Assertion failed //tests/iter.bb line 8
BEGIN _bb423
%("Assertion failed: s==0") //tests/iter.bb line 8
BUILTIN _bb424 "Assertion failed: s==0"
%fail("Assertion failed: s==0") //tests/iter.bb line 8
fail # _bb424
END
%(s==0)== false //tests/iter.bb line 8
BUILTIN _bb426 Bfalse
%s==0 //tests/iter.bb line 8
BUILTIN _bb428 I0
eq _bb427 s _bb428
eq _bb425 _bb427 _bb426
%if((s==0)== false)fail("Assertion failed //tests/iter.bb line 8
if # _bb425 _bb423
return # #
END
%try{A=1,2,3;s=0;_bbmacro10=iter(A);while //tests/all.bb line 3
try _bbmacro9 _bb407
%catch(_bbmacro9)print("[ "+str(bb.ansi.r //tests/all.bb line 3
BEGIN _bb429
%str(_bbmacro9) //tests/all.bb line 3
str _bb431 _bbmacro9
%"[ "+str(bb.ansi.red)+"fail"+str(bb.ansi //tests/all.bb line 3
BUILTIN _bb433 "\n"
%"[ "+str(bb.ansi.red)+"fail"+str(bb.ansi //tests/all.bb line 3
BUILTIN _bb435 "Iteration"
%"[ "+str(bb.ansi.red)+"fail"+str(bb.ansi //tests/all.bb line 3
BUILTIN _bb437 " ] "
%bb.ansi //tests/all.bb line 3
get _bb440 bb ansi
%bb.ansi.reset //tests/all.bb line 3
get _bb439 _bb440 reset
%str(bb.ansi.reset) //tests/all.bb line 3
str _bb441 _bb439
%"[ "+str(bb.ansi.red)+"fail" //tests/all.bb line 3
BUILTIN _bb443 "fail"
%bb.ansi //tests/all.bb line 3
get _bb446 bb ansi
%bb.ansi.red //tests/all.bb line 3
get _bb445 _bb446 red
%str(bb.ansi.red) //tests/all.bb line 3
str _bb447 _bb445
BUILTIN _bb448 "[ "
add _bb444 _bb448 _bb447
add _bb442 _bb444 _bb443
add _bb438 _bb442 _bb441
add _bb436 _bb438 _bb437
add _bb434 _bb436 _bb435
add _bb432 _bb434 _bb433
add _bb430 _bb432 _bb431
%print("[ "+str(bb.ansi.red)+"fail"+str(b //tests/all.bb line 3
print # _bb430
END
BEGIN _bb449
%"[  "+str(bb.ansi.green)+"ok"+str(bb.ans //tests/all.bb line 3
BUILTIN _bb451 "Iteration"
%"[  "+str(bb.ansi.green)+"ok"+str(bb.ans //tests/all.bb line 3
BUILTIN _bb453 "  ] "
%bb.ansi //tests/all.bb line 3
get _bb456 bb ansi
%bb.ansi.reset //tests/all.bb line 3
get _bb455 _bb456 reset
%str(bb.ansi.reset) //tests/all.bb line 3
str _bb457 _bb455
%"[  "+str(bb.ansi.green)+"ok" //tests/all.bb line 3
BUILTIN _bb459 "ok"
%bb.ansi //tests/all.bb line 3
get _bb462 bb ansi
%bb.ansi.green //tests/all.bb line 3
get _bb461 _bb462 green
%str(bb.ansi.green) //tests/all.bb line 3
str _bb463 _bb461
BUILTIN _bb464 "[  "
add _bb460 _bb464 _bb463
add _bb458 _bb460 _bb459
add _bb454 _bb458 _bb457
add _bb452 _bb454 _bb453
add _bb450 _bb452 _bb451
%print("[  "+str(bb.ansi.green)+"ok"+str( //tests/all.bb line 3
print # _bb450
END
%catch(_bbmacro9)print("[ "+str(bb.ansi.r //tests/all.bb line 3
catch # _bbmacro9 _bb429 _bb449
%{Struct={.x=this.x;x=0;xthis={return thi //tests/all.bb line 4
BEGIN _bb467
%{.x=this.x;x=0;xthis={return this.x;}xcl //tests/closure.bb line 1
BEGIN _bb468
%this.x //tests/closure.bb line 4
get _bb469 this x
IS .x _bb469
%x=0 //tests/closure.bb line 2
BUILTIN x I0
%{return this.x;} //tests/closure.bb line 3
BEGIN _bb471
%this.x //tests/closure.bb line 3
get _bb472 this x
%return this.x //tests/closure.bb line 3
return # _bb472
END
IS xthis _bb471
%{..x=this..x;return ..x;} //tests/closure.bb line 4
BEGIN _bb473
%this..x //tests/closure.bb line 4
get _bb474 this .x
IS ..x _bb474
%return ..x //tests/closure.bb line 4
return # ..x
END
IS xclosure _bb473
END
IS Struct _bb468
%x=1 //tests/closure.bb line 6
BUILTIN x I1
%{Struct:} //tests/closure.bb line 7
BEGIN _bb478
%Struct: //tests/closure.bb line 7
inline _bb479 Struct
return # this
END
%new{Struct:} //tests/closure.bb line 7
new struct _bb478
%x=2 //tests/closure.bb line 8
BUILTIN x I2
%if((struct.xthis()==0)== false)fail("Ass //tests/closure.bb line 10
BEGIN _bb481
%("Assertion failed: struct.xthis()==0") //tests/closure.bb line 10
BUILTIN _bb482 "Assertion failed: struct.xthis()==0"
%fail("Assertion failed: struct.xthis()== //tests/closure.bb line 10
fail # _bb482
END
%(struct.xthis()==0)== false //tests/closure.bb line 10
BUILTIN _bb484 Bfalse
%struct.xthis()==0 //tests/closure.bb line 10
BUILTIN _bb486 I0
%struct.xthis //tests/closure.bb line 10
get _bb488 struct xthis
%struct.xthis() //tests/closure.bb line 10
call _bb487 # _bb488
eq _bb485 _bb487 _bb486
eq _bb483 _bb485 _bb484
%if((struct.xthis()==0)== false)fail("Ass //tests/closure.bb line 10
if # _bb483 _bb481
%if((struct.xclosure()==1)== false)fail(" //tests/closure.bb line 11
BEGIN _bb489
%("Assertion failed: struct.xclosure()==1 //tests/closure.bb line 11
BUILTIN _bb490 "Assertion failed: struct.xclosure()==1"
%fail("Assertion failed: struct.xclosure( //tests/closure.bb line 11
fail # _bb490
END
%(struct.xclosure()==1)== false //tests/closure.bb line 11
BUILTIN _bb492 Bfalse
%struct.xclosure()==1 //tests/closure.bb line 11
BUILTIN _bb494 I1
%struct.xclosure //tests/closure.bb line 11
get _bb496 struct xclosure
%struct.xclosure() //tests/closure.bb line 11
call _bb495 # _bb496
eq _bb493 _bb495 _bb494
eq _bb491 _bb493 _bb492
%if((struct.xclosure()==1)== false)fail(" //tests/closure.bb line 11
if # _bb491 _bb489
return # #
END
%try{Struct={.x=this.x;x=0;xthis={return  //tests/all.bb line 4
try _bbmacro11 _bb467
%catch(_bbmacro11)print("[ "+str(bb.ansi. //tests/all.bb line 4
BEGIN _bb497
%str(_bbmacro11) //tests/all.bb line 4
str _bb499 _bbmacro11
%"[ "+str(bb.ansi.red)+"fail"+str(bb.ansi //tests/all.bb line 4
BUILTIN _bb501 "\n"
%"[ "+str(bb.ansi.red)+"fail"+str(bb.ansi //tests/all.bb line 4
BUILTIN _bb503 "Closure"
%"[ "+str(bb.ansi.red)+"fail"+str(bb.ansi //tests/all.bb line 4
BUILTIN _bb505 " ] "
%bb.ansi //tests/all.bb line 4
get _bb508 bb ansi
%bb.ansi.reset //tests/all.bb line 4
get _bb507 _bb508 reset
%str(bb.ansi.reset) //tests/all.bb line 4
str _bb509 _bb507
%"[ "+str(bb.ansi.red)+"fail" //tests/all.bb line 4
BUILTIN _bb511 "fail"
%bb.ansi //tests/all.bb line 4
get _bb514 bb ansi
%bb.ansi.red //tests/all.bb line 4
get _bb513 _bb514 red
%str(bb.ansi.red) //tests/all.bb line 4
str _bb515 _bb513
BUILTIN _bb516 "[ "
add _bb512 _bb516 _bb515
add _bb510 _bb512 _bb511
add _bb506 _bb510 _bb509
add _bb504 _bb506 _bb505
add _bb502 _bb504 _bb503
add _bb500 _bb502 _bb501
add _bb498 _bb500 _bb499
%print("[ "+str(bb.ansi.red)+"fail"+str(b //tests/all.bb line 4
print # _bb498
END
BEGIN _bb517
%"[  "+str(bb.ansi.green)+"ok"+str(bb.ans //tests/all.bb line 4
BUILTIN _bb519 "Closure"
%"[  "+str(bb.ansi.green)+"ok"+str(bb.ans //tests/all.bb line 4
BUILTIN _bb521 "  ] "
%bb.ansi //tests/all.bb line 4
get _bb524 bb ansi
%bb.ansi.reset //tests/all.bb line 4
get _bb523 _bb524 reset
%str(bb.ansi.reset) //tests/all.bb line 4
str _bb525 _bb523
%"[  "+str(bb.ansi.green)+"ok" //tests/all.bb line 4
BUILTIN _bb527 "ok"
%bb.ansi //tests/all.bb line 4
get _bb530 bb ansi
%bb.ansi.green //tests/all.bb line 4
get _bb529 _bb530 green
%str(bb.ansi.green) //tests/all.bb line 4
str _bb531 _bb529
BUILTIN _bb532 "[  "
add _bb528 _bb532 _bb531
add _bb526 _bb528 _bb527
add _bb522 _bb526 _bb525
add _bb520 _bb522 _bb521
add _bb518 _bb520 _bb519
%print("[  "+str(bb.ansi.green)+"ok"+str( //tests/all.bb line 4
print # _bb518
END
%catch(_bbmacro11)print("[ "+str(bb.ansi. //tests/all.bb line 4
catch # _bbmacro11 _bb497 _bb517
%{A=1,2,3;A=A|bb.collection.toback(4);if( //tests/all.bb line 5
BEGIN _bb535
%1,2,3 //tests/collection.bb line 1
BUILTIN _bb536 I1
BUILTIN _bb537 I2
BUILTIN _bb538 I3
%1,2,3 //tests/collection.bb line 1
list A _bb536 _bb537 _bb538
%A|bb.collection.toback(4) //tests/collection.bb line 2
BEGIN _bb541
list args A
END
%bb.collection.toback(4) //tests/collection.bb line 2
BEGIN _bb544
BUILTIN _bb545 I4
list args _bb545
END
%bb.collection //tests/collection.bb line 2
get _bb547 bb collection
%bb.collection.toback //tests/collection.bb line 2
get _bb546 _bb547 toback
%bb.collection.toback(4) //tests/collection.bb line 2
call _bb543 _bb544 _bb546
%A|bb.collection.toback(4) //tests/collection.bb line 2
call _bb540 _bb541 _bb543
IS A _bb540
%if((A|pop ==4)== false)fail("Assertion f //tests/collection.bb line 3
BEGIN _bb548
%("Assertion failed: A|pop==4") //tests/collection.bb line 3
BUILTIN _bb549 "Assertion failed: A|pop==4"
%fail("Assertion failed: A|pop==4") //tests/collection.bb line 3
fail # _bb549
END
%(A|pop ==4)== false //tests/collection.bb line 3
BUILTIN _bb551 Bfalse
%A|pop ==4 //tests/collection.bb line 3
BUILTIN _bb553 I4
%A|pop //tests/collection.bb line 3
pop _bb554 A
eq _bb552 _bb554 _bb553
eq _bb550 _bb552 _bb551
%if((A|pop ==4)== false)fail("Assertion f //tests/collection.bb line 3
if # _bb550 _bb548
return # #
END
%try{A=1,2,3;A=A|bb.collection.toback(4); //tests/all.bb line 5
try _bbmacro12 _bb535
%catch(_bbmacro12)print("[ "+str(bb.ansi. //tests/all.bb line 5
BEGIN _bb555
%str(_bbmacro12) //tests/all.bb line 5
str _bb557 _bbmacro12
%"[ "+str(bb.ansi.red)+"fail"+str(bb.ansi //tests/all.bb line 5
BUILTIN _bb559 "\n"
%"[ "+str(bb.ansi.red)+"fail"+str(bb.ansi //tests/all.bb line 5
BUILTIN _bb561 "Collection"
%"[ "+str(bb.ansi.red)+"fail"+str(bb.ansi //tests/all.bb line 5
BUILTIN _bb563 " ] "
%bb.ansi //tests/all.bb line 5
get _bb566 bb ansi
%bb.ansi.reset //tests/all.bb line 5
get _bb565 _bb566 reset
%str(bb.ansi.reset) //tests/all.bb line 5
str _bb567 _bb565
%"[ "+str(bb.ansi.red)+"fail" //tests/all.bb line 5
BUILTIN _bb569 "fail"
%bb.ansi //tests/all.bb line 5
get _bb572 bb ansi
%bb.ansi.red //tests/all.bb line 5
get _bb571 _bb572 red
%str(bb.ansi.red) //tests/all.bb line 5
str _bb573 _bb571
BUILTIN _bb574 "[ "
add _bb570 _bb574 _bb573
add _bb568 _bb570 _bb569
add _bb564 _bb568 _bb567
add _bb562 _bb564 _bb563
add _bb560 _bb562 _bb561
add _bb558 _bb560 _bb559
add _bb556 _bb558 _bb557
%print("[ "+str(bb.ansi.red)+"fail"+str(b //tests/all.bb line 5
print # _bb556
END
BEGIN _bb575
%"[  "+str(bb.ansi.green)+"ok"+str(bb.ans //tests/all.bb line 5
BUILTIN _bb577 "Collection"
%"[  "+str(bb.ansi.green)+"ok"+str(bb.ans //tests/all.bb line 5
BUILTIN _bb579 "  ] "
%bb.ansi //tests/all.bb line 5
get _bb582 bb ansi
%bb.ansi.reset //tests/all.bb line 5
get _bb581 _bb582 reset
%str(bb.ansi.reset) //tests/all.bb line 5
str _bb583 _bb581
%"[  "+str(bb.ansi.green)+"ok" //tests/all.bb line 5
BUILTIN _bb585 "ok"
%bb.ansi //tests/all.bb line 5
get _bb588 bb ansi
%bb.ansi.green //tests/all.bb line 5
get _bb587 _bb588 green
%str(bb.ansi.green) //tests/all.bb line 5
str _bb589 _bb587
BUILTIN _bb590 "[  "
add _bb586 _bb590 _bb589
add _bb584 _bb586 _bb585
add _bb580 _bb584 _bb583
add _bb578 _bb580 _bb579
add _bb576 _bb578 _bb577
%print("[  "+str(bb.ansi.green)+"ok"+str( //tests/all.bb line 5
print # _bb576
END
%catch(_bbmacro12)print("[ "+str(bb.ansi. //tests/all.bb line 5
catch # _bbmacro12 _bb555 _bb575
%{A="I like banana!";if((A|bb.string.star //tests/all.bb line 6
BEGIN _bb593
%A="I like banana!" //tests/string.bb line 1
BUILTIN A "I like banana!"
%if((A|bb.string.starts("I like"))== fals //tests/string.bb line 2
BEGIN _bb595
%("Assertion failed: A|bb.string.starts(I //tests/string.bb line 2
BUILTIN _bb596 "Assertion failed: A|bb.string.starts(I like)"
%fail("Assertion failed: A|bb.string.star //tests/string.bb line 2
fail # _bb596
END
%(A|bb.string.starts("I like"))== false //tests/string.bb line 2
BUILTIN _bb598 Bfalse
%A|bb.string.starts("I like") //tests/string.bb line 2
BEGIN _bb600
list args A
END
%bb.string.starts("I like") //tests/string.bb line 2
BEGIN _bb603
BUILTIN _bb604 "I like"
list args _bb604
END
%bb.string //tests/string.bb line 2
get _bb606 bb string
%bb.string.starts //tests/string.bb line 2
get _bb605 _bb606 starts
%bb.string.starts("I like") //tests/string.bb line 2
call _bb602 _bb603 _bb605
%A|bb.string.starts("I like") //tests/string.bb line 2
call _bb599 _bb600 _bb602
eq _bb597 _bb599 _bb598
%if((A|bb.string.starts("I like"))== fals //tests/string.bb line 2
if # _bb597 _bb595
%if((A|bb.string.ends("banana!"))== false //tests/string.bb line 3
BEGIN _bb607
%("Assertion failed: A|bb.string.ends(ban //tests/string.bb line 3
BUILTIN _bb608 "Assertion failed: A|bb.string.ends(banana!)"
%fail("Assertion failed: A|bb.string.ends //tests/string.bb line 3
fail # _bb608
END
%(A|bb.string.ends("banana!"))== false //tests/string.bb line 3
BUILTIN _bb610 Bfalse
%A|bb.string.ends("banana!") //tests/string.bb line 3
BEGIN _bb612
list args A
END
%bb.string.ends("banana!") //tests/string.bb line 3
BEGIN _bb615
BUILTIN _bb616 "banana!"
list args _bb616
END
%bb.string //tests/string.bb line 3
get _bb618 bb string
%bb.string.ends //tests/string.bb line 3
get _bb617 _bb618 ends
%bb.string.ends("banana!") //tests/string.bb line 3
call _bb614 _bb615 _bb617
%A|bb.string.ends("banana!") //tests/string.bb line 3
call _bb611 _bb612 _bb614
eq _bb609 _bb611 _bb610
%if((A|bb.string.ends("banana!"))== false //tests/string.bb line 3
if # _bb609 _bb607
return # #
END
%try{A="I like banana!";if((A|bb.string.s //tests/all.bb line 6
try _bbmacro13 _bb593
%catch(_bbmacro13)print("[ "+str(bb.ansi. //tests/all.bb line 6
BEGIN _bb619
%str(_bbmacro13) //tests/all.bb line 6
str _bb621 _bbmacro13
%"[ "+str(bb.ansi.red)+"fail"+str(bb.ansi //tests/all.bb line 6
BUILTIN _bb623 "\n"
%"[ "+str(bb.ansi.red)+"fail"+str(bb.ansi //tests/all.bb line 6
BUILTIN _bb625 "String"
%"[ "+str(bb.ansi.red)+"fail"+str(bb.ansi //tests/all.bb line 6
BUILTIN _bb627 " ] "
%bb.ansi //tests/all.bb line 6
get _bb630 bb ansi
%bb.ansi.reset //tests/all.bb line 6
get _bb629 _bb630 reset
%str(bb.ansi.reset) //tests/all.bb line 6
str _bb631 _bb629
%"[ "+str(bb.ansi.red)+"fail" //tests/all.bb line 6
BUILTIN _bb633 "fail"
%bb.ansi //tests/all.bb line 6
get _bb636 bb ansi
%bb.ansi.red //tests/all.bb line 6
get _bb635 _bb636 red
%str(bb.ansi.red) //tests/all.bb line 6
str _bb637 _bb635
BUILTIN _bb638 "[ "
add _bb634 _bb638 _bb637
add _bb632 _bb634 _bb633
add _bb628 _bb632 _bb631
add _bb626 _bb628 _bb627
add _bb624 _bb626 _bb625
add _bb622 _bb624 _bb623
add _bb620 _bb622 _bb621
%print("[ "+str(bb.ansi.red)+"fail"+str(b //tests/all.bb line 6
print # _bb620
END
BEGIN _bb639
%"[  "+str(bb.ansi.green)+"ok"+str(bb.ans //tests/all.bb line 6
BUILTIN _bb641 "String"
%"[  "+str(bb.ansi.green)+"ok"+str(bb.ans //tests/all.bb line 6
BUILTIN _bb643 "  ] "
%bb.ansi //tests/all.bb line 6
get _bb646 bb ansi
%bb.ansi.reset //tests/all.bb line 6
get _bb645 _bb646 reset
%str(bb.ansi.reset) //tests/all.bb line 6
str _bb647 _bb645
%"[  "+str(bb.ansi.green)+"ok" //tests/all.bb line 6
BUILTIN _bb649 "ok"
%bb.ansi //tests/all.bb line 6
get _bb652 bb ansi
%bb.ansi.green //tests/all.bb line 6
get _bb651 _bb652 green
%str(bb.ansi.green) //tests/all.bb line 6
str _bb653 _bb651
BUILTIN _bb654 "[  "
add _bb650 _bb654 _bb653
add _bb648 _bb650 _bb649
add _bb644 _bb648 _bb647
add _bb642 _bb644 _bb643
add _bb640 _bb642 _bb641
%print("[  "+str(bb.ansi.green)+"ok"+str( //tests/all.bb line 6
print # _bb640
END
%catch(_bbmacro13)print("[ "+str(bb.ansi. //tests/all.bb line 6
catch # _bbmacro13 _bb619 _bb639
