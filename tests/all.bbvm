BEGIN _bb33
BEGIN _bb36
BUILTIN lightred "\e[0;91m"
final # lightred
BUILTIN lightgreen "\e[0;92m"
final # lightgreen
BUILTIN reset "\e[0m"
final # reset
return # this
END
new ansi _bb36
final # ansi
BEGIN _bb56
BEGIN _bb57
next element args
BEGIN _bb60
get _bb61 this element
IS .element _bb61
BEGIN _bb62
next A args
get _bb63 this .element
IS ..element _bb63
push _bb64 A ..element
return # A
END
IS call _bb62
return # this
END
new _bb58 _bb60
return # _bb58
END
IS toback _bb57
final # toback
BEGIN _bb65
next func args
BEGIN _bb68
get _bb69 this func
IS .func _bb69
BEGIN _bb70
next A args
get _bb71 this .func
IS ..func _bb71
list ret
iter _bbmacro0 A
BEGIN _bb74
next _bb75 _bbmacro0
AS x _bb75
exists _bb76 x
END
BEGIN _bb77
BEGIN _bb80
list args x
END
call _bb79 _bb80 ..func
push _bb78 ret _bb79
END
while # _bb74 _bb77
return # ret
END
IS call _bb70
return # this
END
new _bb66 _bb68
return # _bb66
END
IS transform _bb65
final # transform
return # this
END
new collection _bb56
final # collection
BEGIN _bb81
next path args
str path path
BEGIN _bb84
sqlite connector path
return # this
END
new _bb82 _bb84
return # _bb82
END
IS db _bb81
final # db
BEGIN _bb197
BEGIN _bb198
next text args
str text text
BUILTIN _bb200 ""
str _bb202 text
BUILTIN _bb204 "  ] "
get _bb207 bb ansi
get _bb206 _bb207 reset
str _bb208 _bb206
BUILTIN _bb210 "ok"
get _bb213 bb ansi
get _bb212 _bb213 lightgreen
str _bb214 _bb212
BUILTIN _bb215 "[  "
add _bb211 _bb215 _bb214
add _bb209 _bb211 _bb210
add _bb205 _bb209 _bb208
add _bb203 _bb205 _bb204
add _bb201 _bb203 _bb202
add _bb199 _bb201 _bb200
print # _bb199
END
IS ok _bb198
final # ok
BEGIN _bb216
next text args
str text text
BUILTIN _bb218 ""
str _bb220 text
BUILTIN _bb222 " ] "
get _bb225 bb ansi
get _bb224 _bb225 reset
str _bb226 _bb224
BUILTIN _bb228 "fail"
get _bb231 bb ansi
get _bb230 _bb231 lightred
str _bb232 _bb230
BUILTIN _bb233 "[ "
add _bb229 _bb233 _bb232
add _bb227 _bb229 _bb228
add _bb223 _bb227 _bb226
add _bb221 _bb223 _bb222
add _bb219 _bb221 _bb220
add _bb217 _bb219 _bb218
print # _bb217
END
IS fail _bb216
final # fail
return # this
END
new logger _bb197
final # logger
BEGIN _bb290
BEGIN _bb291
next path args
str path path
file path path
return # path
END
IS call _bb291
BEGIN _bb299
next path args
str path path
file path path
BUILTIN ret ""
iter _bbmacro2 path
BEGIN _bb302
next _bb303 _bbmacro2
AS line _bb303
exists _bb304 line
END
BEGIN _bb305
BEGIN _bb306
BUILTIN _bb307 "\n"
add ret ret _bb307
END
len _bb309 ret
bool _bb308 _bb309
if # _bb308 _bb306
add ret ret line
END
while # _bb302 _bb305
return # ret
END
IS read _bb299
final # read
return # this
END
new os _bb290
final # os
BEGIN _bb359
BEGIN _bb360
next value args
str value value
return # value
END
IS call _bb360
BEGIN _bb423
next query args
str query query
BEGIN _bb426
get _bb427 this query
IS .query _bb427
BEGIN _bb428
BUILTIN _bb429 "Assertion failed"
fail # _bb429
END
BUILTIN _bb431 Bfalse
BUILTIN _bb433 I0
len _bb434 args
eq _bb432 _bb434 _bb433
eq _bb430 _bb432 _bb431
if # _bb430 _bb428
BEGIN _bb435
next search args
str search search
get _bb436 this .query
IS ..query _bb436
BEGIN _bb437
BUILTIN _bb438 "Assertion failed"
fail # _bb438
END
BUILTIN _bb440 Bfalse
BUILTIN _bb442 I0
len _bb443 args
eq _bb441 _bb443 _bb442
eq _bb439 _bb441 _bb440
if # _bb439 _bb437
IS query ..query
len nsearch search
len nquery query
BEGIN _bb446
BUILTIN _bb447 Bfalse
return # _bb447
END
lt _bb448 nsearch nquery
if # _bb448 _bb446
range _bb449 nquery
iter _bbmacro4 _bb449
BEGIN _bb451
next _bb452 _bbmacro4
AS i _bb452
exists _bb453 i
END
BEGIN _bb454
BEGIN _bb455
BUILTIN _bb456 Bfalse
return # _bb456
END
at _bb458 search i
at _bb459 query i
neq _bb457 _bb459 _bb458
if # _bb457 _bb455
END
while # _bb451 _bb454
BUILTIN _bb460 Btrue
return # _bb460
END
IS call _bb435
return # this
END
new _bb424 _bb426
return # _bb424
END
IS starts _bb423
final # starts
BEGIN _bb461
next query args
str query query
BEGIN _bb464
get _bb465 this query
IS .query _bb465
BEGIN _bb466
BUILTIN _bb467 "Assertion failed"
fail # _bb467
END
BUILTIN _bb469 Bfalse
BUILTIN _bb471 I0
len _bb472 args
eq _bb470 _bb472 _bb471
eq _bb468 _bb470 _bb469
if # _bb468 _bb466
BEGIN _bb473
next search args
str search search
get _bb474 this .query
IS ..query _bb474
BEGIN _bb475
BUILTIN _bb476 "Assertion failed"
fail # _bb476
END
BUILTIN _bb478 Bfalse
BUILTIN _bb480 I0
len _bb481 args
eq _bb479 _bb481 _bb480
eq _bb477 _bb479 _bb478
if # _bb477 _bb475
IS query ..query
len nsearch search
len nquery query
BEGIN _bb484
BUILTIN _bb485 Bfalse
return # _bb485
END
lt _bb486 nsearch nquery
if # _bb486 _bb484
range _bb487 nquery
iter _bbmacro5 _bb487
BEGIN _bb489
next _bb490 _bbmacro5
AS i _bb490
exists _bb491 i
END
BEGIN _bb492
BEGIN _bb493
BUILTIN _bb494 Bfalse
return # _bb494
END
sub _bb498 nsearch nquery
add _bb497 _bb498 i
at _bb496 search _bb497
at _bb499 query i
neq _bb495 _bb499 _bb496
if # _bb495 _bb493
END
while # _bb489 _bb492
BUILTIN _bb500 Btrue
return # _bb500
END
IS call _bb473
return # this
END
new _bb462 _bb464
return # _bb462
END
IS ends _bb461
final # ends
BEGIN _bb501
next query args
str query query
BEGIN _bb504
get _bb505 this query
IS .query _bb505
BEGIN _bb506
BUILTIN _bb507 "Assertion failed"
fail # _bb507
END
BUILTIN _bb509 Bfalse
BUILTIN _bb511 I0
len _bb512 args
eq _bb510 _bb512 _bb511
eq _bb508 _bb510 _bb509
if # _bb508 _bb506
BEGIN _bb513
BUILTIN pos I0
END
BEGIN _bb517
IS pos pos
return # #
END
try _bb515 _bb517
catch # _bb515 _bb513
BEGIN _bb518
next search args
str search search
get _bb519 this .query
IS ..query _bb519
BEGIN _bb520
BUILTIN _bb521 "Assertion failed"
fail # _bb521
END
BUILTIN _bb523 Bfalse
BUILTIN _bb525 I0
len _bb526 args
eq _bb524 _bb526 _bb525
eq _bb522 _bb524 _bb523
if # _bb522 _bb520
IS query ..query
get _bb527 this pos
IS pos _bb527
len nsearch search
len nquery query
BUILTIN _bb532 I1
sub _bb533 nsearch nquery
add _bb531 _bb533 _bb532
range _bb530 pos _bb531
iter _bbmacro6 _bb530
BEGIN _bb535
next _bb536 _bbmacro6
AS i _bb536
exists _bb537 i
END
BEGIN _bb538
range _bb539 nquery
iter _bbmacro7 _bb539
BEGIN _bb541
next _bb542 _bbmacro7
AS j _bb542
exists _bb543 j
END
BEGIN _bb544
BEGIN _bb545
BUILTIN _bb546 Btrue
return # _bb546
END
add _bb549 i j
at _bb548 search _bb549
at _bb550 query j
neq _bb547 _bb550 _bb548
if # _bb547 _bb545
END
while different _bb541 _bb544
BEGIN _bb551
return # i
END
catch # different _bb551
END
while # _bb535 _bb538
return # nsearch
END
IS call _bb518
return # this
END
new _bb502 _bb504
return # _bb502
END
IS index _bb501
final # index
BEGIN _bb552
next query args
str query query
BEGIN _bb555
get _bb556 this query
IS .query _bb556
BEGIN _bb557
BUILTIN _bb558 "Assertion failed"
fail # _bb558
END
BUILTIN _bb560 Bfalse
BUILTIN _bb562 I0
len _bb563 args
eq _bb561 _bb563 _bb562
eq _bb559 _bb561 _bb560
if # _bb559 _bb557
BEGIN _bb565
END
default # _bb565
BEGIN _bb567
next search args
str search search
get _bb568 this .query
IS ..query _bb568
IS query ..query
len nsearch search
len nquery query
BEGIN _bb571
BUILTIN _bb572 "Cannot split on a zero-length string"
fail # _bb572
END
BUILTIN _bb574 I0
eq _bb573 nquery _bb574
if # _bb573 _bb571
list ret
BUILTIN pos I0
BEGIN _bb577
lt _bb578 pos nsearch
END
BEGIN _bb579
IS prev_pos pos
BEGIN _bb581
list args search
END
BEGIN _bb584
list args query
IS pos pos
END
get _bb586 bb string
get _bb585 _bb586 index
call _bb583 _bb584 _bb585
call _bb580 _bb581 _bb583
IS pos _bb580
range _bb588 prev_pos pos
at _bb587 search _bb588
IS s _bb587
push _bb589 ret s
add pos pos nquery
END
while # _bb577 _bb579
return # ret
END
IS call _bb567
return # this
END
new _bb553 _bb555
return # _bb553
END
IS split _bb552
final # split
return # this
END
new string _bb359
final # string
return # this
END
new bb _bb33
final # bb
BEGIN _bb592
BUILTIN A "0"
BUILTIN _bb594 "1"
add A A _bb594
BUILTIN _bb595 "2"
add A A _bb595
BUILTIN _bb596 "3"
add A A _bb596
BUILTIN _bb597 "4"
add A A _bb597
BUILTIN _bb598 "5"
add A A _bb598
BUILTIN _bb599 "6"
add A A _bb599
BUILTIN _bb600 "7"
add A A _bb600
BUILTIN _bb601 "8"
add A A _bb601
BUILTIN _bb602 "9"
add A A _bb602
BEGIN _bb603
BUILTIN _bb604 "Assertion failed"
fail # _bb604
END
BUILTIN _bb606 Bfalse
BUILTIN _bb608 "0123456789"
eq _bb607 A _bb608
eq _bb605 _bb607 _bb606
if # _bb605 _bb603
BEGIN _bb609
BUILTIN _bb610 "Assertion failed"
fail # _bb610
END
BUILTIN _bb612 Bfalse
BUILTIN _bb614 I10
len _bb615 A
eq _bb613 _bb615 _bb614
eq _bb611 _bb613 _bb612
if # _bb611 _bb609
return # #
END
try _bbmacro8 _bb592
BEGIN _bb616
BEGIN _bb618
str _bb620 _bbmacro8
BUILTIN _bb622 "\n"
BUILTIN _bb623 "String add"
add _bb621 _bb623 _bb622
add _bb619 _bb621 _bb620
list args _bb619
END
get _bb625 bb logger
get _bb624 _bb625 fail
call _bb617 _bb618 _bb624
END
BEGIN _bb626
BEGIN _bb628
BUILTIN _bb629 "String add"
list args _bb629
END
get _bb631 bb logger
get _bb630 _bb631 ok
call _bb627 _bb628 _bb630
END
catch # _bbmacro8 _bb616 _bb626
BEGIN _bb634
BUILTIN _bb635 I1
BUILTIN _bb636 I2
BUILTIN _bb637 I3
BUILTIN _bb638 I4
list A _bb635 _bb636 _bb637 _bb638
BEGIN _bb640
BUILTIN _bb641 "Assertion failed"
fail # _bb641
END
BUILTIN _bb643 Bfalse
BUILTIN _bb645 I2
BUILTIN _bb647 I1
at _bb646 A _bb647
eq _bb644 _bb646 _bb645
eq _bb642 _bb644 _bb643
if # _bb642 _bb640
BEGIN _bb648
BUILTIN _bb649 "Assertion failed"
fail # _bb649
END
BUILTIN _bb651 Bfalse
BUILTIN _bb653 I1
next _bb654 A
eq _bb652 _bb654 _bb653
eq _bb650 _bb652 _bb651
if # _bb650 _bb648
BEGIN _bb655
BUILTIN _bb656 "Assertion failed"
fail # _bb656
END
BUILTIN _bb658 Bfalse
BUILTIN _bb660 I2
next _bb661 A
eq _bb659 _bb661 _bb660
eq _bb657 _bb659 _bb658
if # _bb657 _bb655
BEGIN _bb662
BUILTIN _bb663 "Assertion failed"
fail # _bb663
END
BUILTIN _bb665 Bfalse
BUILTIN _bb667 I4
pop _bb668 A
eq _bb666 _bb668 _bb667
eq _bb664 _bb666 _bb665
if # _bb664 _bb662
BEGIN _bb669
BUILTIN _bb670 "Assertion failed"
fail # _bb670
END
BUILTIN _bb672 Bfalse
BUILTIN _bb674 I3
pop _bb675 A
eq _bb673 _bb675 _bb674
eq _bb671 _bb673 _bb672
if # _bb671 _bb669
BEGIN _bb676
BUILTIN _bb677 "Assertion failed"
fail # _bb677
END
BUILTIN _bb679 Bfalse
BUILTIN _bb681 I0
len _bb682 A
eq _bb680 _bb682 _bb681
eq _bb678 _bb680 _bb679
if # _bb678 _bb676
BUILTIN _bb683 I5
push # A _bb683
BEGIN _bb684
BUILTIN _bb685 "Assertion failed"
fail # _bb685
END
BUILTIN _bb687 Bfalse
BUILTIN _bb689 I5
pop _bb690 A
eq _bb688 _bb690 _bb689
eq _bb686 _bb688 _bb687
if # _bb686 _bb684
return # #
END
try _bbmacro9 _bb634
BEGIN _bb691
BEGIN _bb693
str _bb695 _bbmacro9
BUILTIN _bb697 "\n"
BUILTIN _bb698 "List"
add _bb696 _bb698 _bb697
add _bb694 _bb696 _bb695
list args _bb694
END
get _bb700 bb logger
get _bb699 _bb700 fail
call _bb692 _bb693 _bb699
END
BEGIN _bb701
BEGIN _bb703
BUILTIN _bb704 "List"
list args _bb704
END
get _bb706 bb logger
get _bb705 _bb706 ok
call _bb702 _bb703 _bb705
END
catch # _bbmacro9 _bb691 _bb701
BEGIN _bb709
BUILTIN s I0
BUILTIN _bb712 I10
range _bb711 _bb712
iter _bbmacro11 _bb711
BEGIN _bb714
next _bb715 _bbmacro11
AS i _bb715
exists _bb716 i
END
BEGIN _bb717
add s s i
END
while # _bb714 _bb717
BEGIN _bb718
BUILTIN _bb719 "Assertion failed"
fail # _bb719
END
BUILTIN _bb721 Bfalse
BUILTIN _bb723 I45
eq _bb722 s _bb723
eq _bb720 _bb722 _bb721
if # _bb720 _bb718
return # #
END
try _bbmacro10 _bb709
BEGIN _bb724
BEGIN _bb726
str _bb728 _bbmacro10
BUILTIN _bb730 "\n"
BUILTIN _bb731 "Range"
add _bb729 _bb731 _bb730
add _bb727 _bb729 _bb728
list args _bb727
END
get _bb733 bb logger
get _bb732 _bb733 fail
call _bb725 _bb726 _bb732
END
BEGIN _bb734
BEGIN _bb736
BUILTIN _bb737 "Range"
list args _bb737
END
get _bb739 bb logger
get _bb738 _bb739 ok
call _bb735 _bb736 _bb738
END
catch # _bbmacro10 _bb724 _bb734
BEGIN _bb742
BUILTIN _bb743 I1
BUILTIN _bb744 I2
BUILTIN _bb745 I3
list A _bb743 _bb744 _bb745
BUILTIN s I0
iter _bbmacro13 A
BEGIN _bb749
next _bb750 _bbmacro13
AS x _bb750
exists _bb751 x
END
BEGIN _bb752
add s s x
END
while # _bb749 _bb752
iter it A
BEGIN _bb754
next _bb755 it
AS x _bb755
exists _bb756 x
END
BEGIN _bb757
sub s s x
END
while # _bb754 _bb757
BEGIN _bb758
BUILTIN _bb759 "Assertion failed"
fail # _bb759
END
BUILTIN _bb761 Bfalse
BUILTIN _bb763 I0
eq _bb762 s _bb763
eq _bb760 _bb762 _bb761
if # _bb760 _bb758
return # #
END
try _bbmacro12 _bb742
BEGIN _bb764
BEGIN _bb766
str _bb768 _bbmacro12
BUILTIN _bb770 "\n"
BUILTIN _bb771 "Iteration"
add _bb769 _bb771 _bb770
add _bb767 _bb769 _bb768
list args _bb767
END
get _bb773 bb logger
get _bb772 _bb773 fail
call _bb765 _bb766 _bb772
END
BEGIN _bb774
BEGIN _bb776
BUILTIN _bb777 "Iteration"
list args _bb777
END
get _bb779 bb logger
get _bb778 _bb779 ok
call _bb775 _bb776 _bb778
END
catch # _bbmacro12 _bb764 _bb774
BEGIN _bb782
map A
BUILTIN _bb784 I1
BUILTIN _bb785 "test"
put # A _bb785 _bb784
BEGIN _bb786
BUILTIN _bb787 "Assertion failed"
fail # _bb787
END
BUILTIN _bb789 Bfalse
BUILTIN _bb791 I1
BUILTIN _bb793 "test"
at _bb792 A _bb793
eq _bb790 _bb792 _bb791
eq _bb788 _bb790 _bb789
if # _bb788 _bb786
clear # A
BUILTIN _bb795 "a"
BUILTIN _bb796 I1
list _bb797 _bb795 _bb796
BUILTIN _bb798 "b"
BUILTIN _bb799 I2
list _bb800 _bb798 _bb799
BUILTIN _bb801 "c"
BUILTIN _bb802 I3
list _bb803 _bb801 _bb802
list _bb804 _bb797 _bb800 _bb803
map A _bb804
BEGIN _bb806
BUILTIN _bb807 "Assertion failed"
fail # _bb807
END
BUILTIN _bb809 Bfalse
BUILTIN _bb811 I1
BUILTIN _bb813 "a"
at _bb812 A _bb813
eq _bb810 _bb812 _bb811
eq _bb808 _bb810 _bb809
if # _bb808 _bb806
BEGIN _bb814
BUILTIN _bb815 "Assertion failed"
fail # _bb815
END
BUILTIN _bb817 Bfalse
BUILTIN _bb819 I2
BUILTIN _bb821 "b"
at _bb820 A _bb821
eq _bb818 _bb820 _bb819
eq _bb816 _bb818 _bb817
if # _bb816 _bb814
BEGIN _bb822
BUILTIN _bb823 "Assertion failed"
fail # _bb823
END
BUILTIN _bb825 Bfalse
BUILTIN _bb827 I3
BUILTIN _bb829 "c"
at _bb828 A _bb829
eq _bb826 _bb828 _bb827
eq _bb824 _bb826 _bb825
if # _bb824 _bb822
return # #
END
try _bbmacro14 _bb782
BEGIN _bb830
BEGIN _bb832
str _bb834 _bbmacro14
BUILTIN _bb836 "\n"
BUILTIN _bb837 "Map"
add _bb835 _bb837 _bb836
add _bb833 _bb835 _bb834
list args _bb833
END
get _bb839 bb logger
get _bb838 _bb839 fail
call _bb831 _bb832 _bb838
END
BEGIN _bb840
BEGIN _bb842
BUILTIN _bb843 "Map"
list args _bb843
END
get _bb845 bb logger
get _bb844 _bb845 ok
call _bb841 _bb842 _bb844
END
catch # _bbmacro14 _bb830 _bb840
BEGIN _bb848
BUILTIN _bb849 I0
BUILTIN _bb850 I1
list _bb851 _bb849 _bb850
vector A _bb851
BUILTIN _bb853 I2
BUILTIN _bb854 I3
list _bb855 _bb853 _bb854
vector B _bb855
BEGIN _bb857
BUILTIN _bb858 "Assertion failed"
fail # _bb858
END
BUILTIN _bb860 Bfalse
BUILTIN _bb862 I2
min _bb863 B
eq _bb861 _bb863 _bb862
eq _bb859 _bb861 _bb860
if # _bb859 _bb857
BEGIN _bb864
BUILTIN _bb865 "Assertion failed"
fail # _bb865
END
BUILTIN _bb867 Bfalse
BUILTIN _bb869 I3
max _bb870 B
eq _bb868 _bb870 _bb869
eq _bb866 _bb868 _bb867
if # _bb866 _bb864
BEGIN _bb871
BUILTIN _bb872 "Assertion failed"
fail # _bb872
END
BUILTIN _bb874 Bfalse
BUILTIN _bb876 I1
sum _bb877 A
eq _bb875 _bb877 _bb876
eq _bb873 _bb875 _bb874
if # _bb873 _bb871
BEGIN _bb878
BUILTIN _bb879 "Assertion failed"
fail # _bb879
END
BUILTIN _bb881 Bfalse
BUILTIN _bb883 I2
BUILTIN _bb885 I0
add _bb886 A B
at _bb884 _bb886 _bb885
eq _bb882 _bb884 _bb883
eq _bb880 _bb882 _bb881
if # _bb880 _bb878
BEGIN _bb887
BUILTIN _bb888 "Assertion failed"
fail # _bb888
END
BUILTIN _bb890 Bfalse
BUILTIN _bb892 I4
BUILTIN _bb894 I1
add _bb895 A B
at _bb893 _bb895 _bb894
eq _bb891 _bb893 _bb892
eq _bb889 _bb891 _bb890
if # _bb889 _bb887
BEGIN _bb896
BUILTIN _bb897 "Assertion failed"
fail # _bb897
END
BUILTIN _bb899 Bfalse
BUILTIN _bb901 I0
BUILTIN _bb903 I0
mul _bb904 A B
at _bb902 _bb904 _bb903
eq _bb900 _bb902 _bb901
eq _bb898 _bb900 _bb899
if # _bb898 _bb896
BEGIN _bb905
BUILTIN _bb906 "Assertion failed"
fail # _bb906
END
BUILTIN _bb908 Bfalse
BUILTIN _bb910 I3
BUILTIN _bb912 I1
mul _bb913 A B
at _bb911 _bb913 _bb912
eq _bb909 _bb911 _bb910
eq _bb907 _bb909 _bb908
if # _bb907 _bb905
BEGIN _bb914
BUILTIN _bb915 "Assertion failed"
fail # _bb915
END
BUILTIN _bb917 Bfalse
BUILTIN _bb919 I0
BUILTIN _bb921 I0
div _bb922 A B
at _bb920 _bb922 _bb921
eq _bb918 _bb920 _bb919
eq _bb916 _bb918 _bb917
if # _bb916 _bb914
BEGIN _bb923
BUILTIN _bb924 "Assertion failed"
fail # _bb924
END
BUILTIN _bb926 Bfalse
BUILTIN _bb929 I3
BUILTIN _bb930 I1
div _bb928 _bb930 _bb929
BUILTIN _bb932 I1
div _bb933 A B
at _bb931 _bb933 _bb932
eq _bb927 _bb931 _bb928
eq _bb925 _bb927 _bb926
if # _bb925 _bb923
BEGIN _bb934
BUILTIN _bb935 "Assertion failed"
fail # _bb935
END
BUILTIN _bb937 Bfalse
BUILTIN _bb939 I0
BUILTIN _bb941 I0
pow _bb942 A B
at _bb940 _bb942 _bb941
eq _bb938 _bb940 _bb939
eq _bb936 _bb938 _bb937
if # _bb936 _bb934
BEGIN _bb943
BUILTIN _bb944 "Assertion failed"
fail # _bb944
END
BUILTIN _bb946 Bfalse
BUILTIN _bb948 I1
BUILTIN _bb950 I1
pow _bb951 A B
at _bb949 _bb951 _bb950
eq _bb947 _bb949 _bb948
eq _bb945 _bb947 _bb946
if # _bb945 _bb943
BEGIN _bb952
BUILTIN _bb953 "Assertion failed"
fail # _bb953
END
BUILTIN _bb955 Bfalse
BUILTIN _bb957 I1
BUILTIN _bb959 I0
lt _bb960 A B
at _bb958 _bb960 _bb959
eq _bb956 _bb958 _bb957
eq _bb954 _bb956 _bb955
if # _bb954 _bb952
BEGIN _bb961
BUILTIN _bb962 "Assertion failed"
fail # _bb962
END
BUILTIN _bb964 Bfalse
BUILTIN _bb966 I1
BUILTIN _bb968 I1
lt _bb969 A B
at _bb967 _bb969 _bb968
eq _bb965 _bb967 _bb966
eq _bb963 _bb965 _bb964
if # _bb963 _bb961
BEGIN _bb970
BUILTIN _bb971 "Assertion failed"
fail # _bb971
END
BUILTIN _bb973 Bfalse
BUILTIN _bb975 I0
BUILTIN _bb977 I0
gt _bb978 A B
at _bb976 _bb978 _bb977
eq _bb974 _bb976 _bb975
eq _bb972 _bb974 _bb973
if # _bb972 _bb970
BEGIN _bb979
BUILTIN _bb980 "Assertion failed"
fail # _bb980
END
BUILTIN _bb982 Bfalse
BUILTIN _bb984 I0
BUILTIN _bb986 I1
gt _bb987 A B
at _bb985 _bb987 _bb986
eq _bb983 _bb985 _bb984
eq _bb981 _bb983 _bb982
if # _bb981 _bb979
BEGIN _bb988
BUILTIN _bb989 "Assertion failed"
fail # _bb989
END
BUILTIN _bb991 Bfalse
BUILTIN _bb993 I1
BUILTIN _bb995 I0
le _bb996 A B
at _bb994 _bb996 _bb995
eq _bb992 _bb994 _bb993
eq _bb990 _bb992 _bb991
if # _bb990 _bb988
BEGIN _bb997
BUILTIN _bb998 "Assertion failed"
fail # _bb998
END
BUILTIN _bb1000 Bfalse
BUILTIN _bb1002 I1
BUILTIN _bb1004 I1
le _bb1005 A B
at _bb1003 _bb1005 _bb1004
eq _bb1001 _bb1003 _bb1002
eq _bb999 _bb1001 _bb1000
if # _bb999 _bb997
BEGIN _bb1006
BUILTIN _bb1007 "Assertion failed"
fail # _bb1007
END
BUILTIN _bb1009 Bfalse
BUILTIN _bb1011 I0
BUILTIN _bb1013 I0
ge _bb1014 A B
at _bb1012 _bb1014 _bb1013
eq _bb1010 _bb1012 _bb1011
eq _bb1008 _bb1010 _bb1009
if # _bb1008 _bb1006
BEGIN _bb1015
BUILTIN _bb1016 "Assertion failed"
fail # _bb1016
END
BUILTIN _bb1018 Bfalse
BUILTIN _bb1020 I0
BUILTIN _bb1022 I1
ge _bb1023 A B
at _bb1021 _bb1023 _bb1022
eq _bb1019 _bb1021 _bb1020
eq _bb1017 _bb1019 _bb1018
if # _bb1017 _bb1015
BEGIN _bb1024
BUILTIN _bb1025 "Assertion failed"
fail # _bb1025
END
BUILTIN _bb1027 Bfalse
BUILTIN _bb1029 I0
BUILTIN _bb1031 I0
BUILTIN _bb1034 I3
add _bb1033 A _bb1034
le _bb1032 _bb1033 B
at _bb1030 _bb1032 _bb1031
eq _bb1028 _bb1030 _bb1029
eq _bb1026 _bb1028 _bb1027
if # _bb1026 _bb1024
BEGIN _bb1035
BUILTIN _bb1036 "Assertion failed"
fail # _bb1036
END
BUILTIN _bb1038 Bfalse
BUILTIN _bb1040 I1
BUILTIN _bb1042 I0
BUILTIN _bb1045 I3
add _bb1044 A _bb1045
ge _bb1043 _bb1044 B
at _bb1041 _bb1043 _bb1042
eq _bb1039 _bb1041 _bb1040
eq _bb1037 _bb1039 _bb1038
if # _bb1037 _bb1035
BEGIN _bb1046
BUILTIN _bb1047 "Assertion failed"
fail # _bb1047
END
BUILTIN _bb1049 Bfalse
BUILTIN _bb1051 I1
BUILTIN _bb1053 I1
BUILTIN _bb1056 I3
mul _bb1055 A _bb1056
eq _bb1054 _bb1055 B
at _bb1052 _bb1054 _bb1053
eq _bb1050 _bb1052 _bb1051
eq _bb1048 _bb1050 _bb1049
if # _bb1048 _bb1046
return # #
END
try _bbmacro15 _bb848
BEGIN _bb1057
BEGIN _bb1059
str _bb1061 _bbmacro15
BUILTIN _bb1063 "\n"
BUILTIN _bb1064 "Vector"
add _bb1062 _bb1064 _bb1063
add _bb1060 _bb1062 _bb1061
list args _bb1060
END
get _bb1066 bb logger
get _bb1065 _bb1066 fail
call _bb1058 _bb1059 _bb1065
END
BEGIN _bb1067
BEGIN _bb1069
BUILTIN _bb1070 "Vector"
list args _bb1070
END
get _bb1072 bb logger
get _bb1071 _bb1072 ok
call _bb1068 _bb1069 _bb1071
END
catch # _bbmacro15 _bb1057 _bb1067
BEGIN _bb1075
BEGIN _bb1076
BEGIN _bb1077
get _bb1078 this value
return # _bb1078
END
IS int _bb1077
BEGIN _bb1079
next other args
get _bb1081 other value
get _bb1082 this value
lt _bb1080 _bb1082 _bb1081
return # _bb1080
END
IS lt _bb1079
BEGIN _bb1083
BUILTIN _bb1085 ""
get _bb1087 this value
str _bb1088 _bb1087
BUILTIN _bb1089 "num "
add _bb1086 _bb1089 _bb1088
add _bb1084 _bb1086 _bb1085
return # _bb1084
END
IS str _bb1083
END
IS Num _bb1076
final # Num
BEGIN _bb1090
next x args
BEGIN _bb1093
inline _bb1094 Num
IS value x
return # this
END
new _bb1091 _bb1093
return # _bb1091
END
IS num _bb1090
BUILTIN _bb1095 I5
BUILTIN _bb1096 I2
BUILTIN _bb1097 I3
BUILTIN _bb1098 I4
BUILTIN _bb1099 I1
list A _bb1095 _bb1096 _bb1097 _bb1098 _bb1099
BEGIN _bb1102
list args A
END
BEGIN _bb1105
list args num
END
get _bb1107 bb collection
get _bb1106 _bb1107 transform
call _bb1104 _bb1105 _bb1106
call _bb1101 _bb1102 _bb1104
IS A _bb1101
len n A
range _bb1109 n
iter _bbmacro17 _bb1109
BEGIN _bb1111
next _bb1112 _bbmacro17
AS i _bb1112
exists _bb1113 i
END
BEGIN _bb1114
BUILTIN _bb1117 I1
add _bb1116 i _bb1117
range _bb1115 _bb1116 n
iter _bbmacro18 _bb1115
BEGIN _bb1119
next _bb1120 _bbmacro18
AS j _bb1120
exists _bb1121 j
END
BEGIN _bb1122
BEGIN _bb1123
at _bb1124 A i
IS tmp _bb1124
at _bb1125 A j
put # A i _bb1125
put # A j tmp
END
at _bb1127 A i
at _bb1128 A j
lt _bb1126 _bb1128 _bb1127
if # _bb1126 _bb1123
END
while # _bb1119 _bb1122
END
while # _bb1111 _bb1114
BEGIN _bb1129
BUILTIN _bb1130 "Assertion failed"
fail # _bb1130
END
BUILTIN _bb1132 Bfalse
BUILTIN _bb1134 I1
BUILTIN _bb1137 I0
at _bb1136 A _bb1137
int _bb1135 _bb1136
eq _bb1133 _bb1135 _bb1134
eq _bb1131 _bb1133 _bb1132
if # _bb1131 _bb1129
return # #
END
try _bbmacro16 _bb1075
BEGIN _bb1138
BEGIN _bb1140
str _bb1142 _bbmacro16
BUILTIN _bb1144 "\n"
BUILTIN _bb1145 "Overload"
add _bb1143 _bb1145 _bb1144
add _bb1141 _bb1143 _bb1142
list args _bb1141
END
get _bb1147 bb logger
get _bb1146 _bb1147 fail
call _bb1139 _bb1140 _bb1146
END
BEGIN _bb1148
BEGIN _bb1150
BUILTIN _bb1151 "Overload"
list args _bb1151
END
get _bb1153 bb logger
get _bb1152 _bb1153 ok
call _bb1149 _bb1150 _bb1152
END
catch # _bbmacro16 _bb1138 _bb1148
BEGIN _bb1156
BEGIN _bb1157
next x args
next y args
BEGIN _bb1159
BUILTIN bias I0
END
default # _bb1159
add _bb1162 x y
add _bb1161 _bb1162 bias
return # _bb1161
END
IS foo _bb1157
BEGIN _bb1163
BUILTIN _bb1164 "Assertion failed"
fail # _bb1164
END
BUILTIN _bb1166 Bfalse
BUILTIN _bb1168 I6
BEGIN _bb1170
BUILTIN _bb1171 I1
BUILTIN _bb1172 I2
list args _bb1171 _bb1172
BUILTIN bias I3
END
call _bb1169 _bb1170 foo
eq _bb1167 _bb1169 _bb1168
eq _bb1165 _bb1167 _bb1166
if # _bb1165 _bb1163
return # #
END
try _bbmacro19 _bb1156
BEGIN _bb1175
BEGIN _bb1177
str _bb1179 _bbmacro19
BUILTIN _bb1181 "\n"
BUILTIN _bb1182 "Func call"
add _bb1180 _bb1182 _bb1181
add _bb1178 _bb1180 _bb1179
list args _bb1178
END
get _bb1184 bb logger
get _bb1183 _bb1184 fail
call _bb1176 _bb1177 _bb1183
END
BEGIN _bb1185
BEGIN _bb1187
BUILTIN _bb1188 "Func call"
list args _bb1188
END
get _bb1190 bb logger
get _bb1189 _bb1190 ok
call _bb1186 _bb1187 _bb1189
END
catch # _bbmacro19 _bb1175 _bb1185
BEGIN _bb1193
BEGIN _bb1194
get _bb1195 this x
IS .x _bb1195
BUILTIN x I0
BEGIN _bb1197
get _bb1198 this x
return # _bb1198
END
IS xthis _bb1197
BEGIN _bb1199
get _bb1200 this .x
IS ..x _bb1200
return # ..x
END
IS xclosure _bb1199
END
IS Struct _bb1194
BUILTIN x I1
BEGIN _bb1204
inline _bb1205 Struct
return # this
END
new struct _bb1204
BUILTIN x I2
BEGIN _bb1207
BUILTIN _bb1208 "Assertion failed"
fail # _bb1208
END
BUILTIN _bb1210 Bfalse
BUILTIN _bb1212 I0
get _bb1214 struct xthis
call _bb1213 # _bb1214
eq _bb1211 _bb1213 _bb1212
eq _bb1209 _bb1211 _bb1210
if # _bb1209 _bb1207
BEGIN _bb1215
BUILTIN _bb1216 "Assertion failed"
fail # _bb1216
END
BUILTIN _bb1218 Bfalse
BUILTIN _bb1220 I1
get _bb1222 struct xclosure
call _bb1221 # _bb1222
eq _bb1219 _bb1221 _bb1220
eq _bb1217 _bb1219 _bb1218
if # _bb1217 _bb1215
return # #
END
try _bbmacro20 _bb1193
BEGIN _bb1223
BEGIN _bb1225
str _bb1227 _bbmacro20
BUILTIN _bb1229 "\n"
BUILTIN _bb1230 "Closure"
add _bb1228 _bb1230 _bb1229
add _bb1226 _bb1228 _bb1227
list args _bb1226
END
get _bb1232 bb logger
get _bb1231 _bb1232 fail
call _bb1224 _bb1225 _bb1231
END
BEGIN _bb1233
BEGIN _bb1235
BUILTIN _bb1236 "Closure"
list args _bb1236
END
get _bb1238 bb logger
get _bb1237 _bb1238 ok
call _bb1234 _bb1235 _bb1237
END
catch # _bbmacro20 _bb1223 _bb1233
BEGIN _bb1241
BEGIN _bb1244
BUILTIN x I1
BUILTIN y I2
return # this
END
new A _bb1244
BEGIN _bb1247
BUILTIN _bb1248 "Assertion failed"
fail # _bb1248
END
BUILTIN _bb1250 Bfalse
BUILTIN _bb1252 I1
get _bb1253 A x
eq _bb1251 _bb1253 _bb1252
eq _bb1249 _bb1251 _bb1250
if # _bb1249 _bb1247
clear # A
BEGIN _bb1257
get _bb1258 A x
print # _bb1258
END
try err _bb1257
BEGIN _bb1259
BUILTIN _bb1260 "Assertion failed"
fail # _bb1260
END
BUILTIN _bb1262 Bfalse
BEGIN _bb1265
BEGIN _bb1266
BUILTIN _bb1267 Btrue
return # _bb1267
END
BEGIN _bb1268
BUILTIN _bb1269 Bfalse
return # _bb1269
END
catch # err _bb1266 _bb1268
END
try _bb1263 _bb1265
eq _bb1261 _bb1263 _bb1262
if # _bb1261 _bb1259
BEGIN _bb1272
BUILTIN x I1
BUILTIN y I2
return # this
END
new B _bb1272
move C B
BEGIN _bb1278
get _bb1279 B x
print # _bb1279
END
try err _bb1278
BEGIN _bb1280
BUILTIN _bb1281 "Assertion failed"
fail # _bb1281
END
BUILTIN _bb1283 Bfalse
BEGIN _bb1286
BEGIN _bb1287
BUILTIN _bb1288 Btrue
return # _bb1288
END
BEGIN _bb1289
BUILTIN _bb1290 Bfalse
return # _bb1290
END
catch # err _bb1287 _bb1289
END
try _bb1284 _bb1286
eq _bb1282 _bb1284 _bb1283
if # _bb1282 _bb1280
BEGIN _bb1291
BUILTIN _bb1292 "Assertion failed"
fail # _bb1292
END
BUILTIN _bb1294 Bfalse
BUILTIN _bb1296 I1
get _bb1297 C x
eq _bb1295 _bb1297 _bb1296
eq _bb1293 _bb1295 _bb1294
if # _bb1293 _bb1291
return # #
END
try _bbmacro21 _bb1241
BEGIN _bb1298
BEGIN _bb1300
str _bb1302 _bbmacro21
BUILTIN _bb1304 "\n"
BUILTIN _bb1305 "Clear"
add _bb1303 _bb1305 _bb1304
add _bb1301 _bb1303 _bb1302
list args _bb1301
END
get _bb1307 bb logger
get _bb1306 _bb1307 fail
call _bb1299 _bb1300 _bb1306
END
BEGIN _bb1308
BEGIN _bb1310
BUILTIN _bb1311 "Clear"
list args _bb1311
END
get _bb1313 bb logger
get _bb1312 _bb1313 ok
call _bb1309 _bb1310 _bb1312
END
catch # _bbmacro21 _bb1298 _bb1308
BEGIN _bb1316
BEGIN _bb1317
next A args
move A A
len _bb1318 A
return # _bb1318
END
IS waslength _bb1317
BUILTIN _bb1319 I1
BUILTIN _bb1320 I2
BUILTIN _bb1321 I3
list A _bb1319 _bb1320 _bb1321
BEGIN _bb1323
BUILTIN _bb1324 "Assertion failed"
fail # _bb1324
END
BUILTIN _bb1326 Bfalse
BUILTIN _bb1328 I3
len _bb1329 A
eq _bb1327 _bb1329 _bb1328
eq _bb1325 _bb1327 _bb1326
if # _bb1325 _bb1323
BEGIN _bb1330
BUILTIN _bb1331 "Assertion failed"
fail # _bb1331
END
BUILTIN _bb1333 Bfalse
BUILTIN _bb1335 I3
BEGIN _bb1337
list args A
END
call _bb1336 _bb1337 waslength
eq _bb1334 _bb1336 _bb1335
eq _bb1332 _bb1334 _bb1333
if # _bb1332 _bb1330
BEGIN _bb1338
BUILTIN _bb1339 "Assertion failed"
fail # _bb1339
END
BUILTIN _bb1341 Bfalse
BUILTIN _bb1343 I0
len _bb1344 A
eq _bb1342 _bb1344 _bb1343
eq _bb1340 _bb1342 _bb1341
if # _bb1340 _bb1338
return # #
END
try _bbmacro22 _bb1316
BEGIN _bb1345
BEGIN _bb1347
str _bb1349 _bbmacro22
BUILTIN _bb1351 "\n"
BUILTIN _bb1352 "Move "
add _bb1350 _bb1352 _bb1351
add _bb1348 _bb1350 _bb1349
list args _bb1348
END
get _bb1354 bb logger
get _bb1353 _bb1354 fail
call _bb1346 _bb1347 _bb1353
END
BEGIN _bb1355
BEGIN _bb1357
BUILTIN _bb1358 "Move "
list args _bb1358
END
get _bb1360 bb logger
get _bb1359 _bb1360 ok
call _bb1356 _bb1357 _bb1359
END
catch # _bbmacro22 _bb1345 _bb1355
BEGIN _bb1363
BUILTIN _bb1364 I1
BUILTIN _bb1365 I2
BUILTIN _bb1366 I3
list A _bb1364 _bb1365 _bb1366
BEGIN _bb1369
list args A
END
BEGIN _bb1372
BUILTIN _bb1373 I4
list args _bb1373
END
get _bb1375 bb collection
get _bb1374 _bb1375 toback
call _bb1371 _bb1372 _bb1374
call _bb1368 _bb1369 _bb1371
IS A _bb1368
BEGIN _bb1376
BUILTIN _bb1377 "Assertion failed"
fail # _bb1377
END
BUILTIN _bb1379 Bfalse
BUILTIN _bb1381 I4
pop _bb1382 A
eq _bb1380 _bb1382 _bb1381
eq _bb1378 _bb1380 _bb1379
if # _bb1378 _bb1376
return # #
END
try _bbmacro23 _bb1363
BEGIN _bb1383
BEGIN _bb1385
str _bb1387 _bbmacro23
BUILTIN _bb1389 "\n"
BUILTIN _bb1390 "Collection"
add _bb1388 _bb1390 _bb1389
add _bb1386 _bb1388 _bb1387
list args _bb1386
END
get _bb1392 bb logger
get _bb1391 _bb1392 fail
call _bb1384 _bb1385 _bb1391
END
BEGIN _bb1393
BEGIN _bb1395
BUILTIN _bb1396 "Collection"
list args _bb1396
END
get _bb1398 bb logger
get _bb1397 _bb1398 ok
call _bb1394 _bb1395 _bb1397
END
catch # _bbmacro23 _bb1383 _bb1393
BEGIN _bb1401
BUILTIN A "I like banana!"
BEGIN _bb1403
BUILTIN _bb1404 "Assertion failed"
fail # _bb1404
END
BUILTIN _bb1406 Bfalse
BEGIN _bb1408
list args A
END
BEGIN _bb1411
BUILTIN _bb1412 "I like"
list args _bb1412
END
get _bb1414 bb string
get _bb1413 _bb1414 starts
call _bb1410 _bb1411 _bb1413
call _bb1407 _bb1408 _bb1410
eq _bb1405 _bb1407 _bb1406
if # _bb1405 _bb1403
BEGIN _bb1415
BUILTIN _bb1416 "Assertion failed"
fail # _bb1416
END
BUILTIN _bb1418 Bfalse
BEGIN _bb1420
list args A
END
BEGIN _bb1423
BUILTIN _bb1424 "banana!"
list args _bb1424
END
get _bb1426 bb string
get _bb1425 _bb1426 ends
call _bb1422 _bb1423 _bb1425
call _bb1419 _bb1420 _bb1422
eq _bb1417 _bb1419 _bb1418
if # _bb1417 _bb1415
BEGIN _bb1427
BUILTIN _bb1428 "Assertion failed"
fail # _bb1428
END
BUILTIN _bb1430 Bfalse
BUILTIN _bb1432 Bfalse
BEGIN _bb1434
list args A
END
BEGIN _bb1437
BUILTIN _bb1438 "w"
list args _bb1438
END
get _bb1440 bb string
get _bb1439 _bb1440 ends
call _bb1436 _bb1437 _bb1439
call _bb1433 _bb1434 _bb1436
eq _bb1431 _bb1433 _bb1432
eq _bb1429 _bb1431 _bb1430
if # _bb1429 _bb1427
BEGIN _bb1441
BUILTIN _bb1442 "Assertion failed"
fail # _bb1442
END
BUILTIN _bb1444 Bfalse
BUILTIN _bb1446 I2
BEGIN _bb1448
list args A
END
BEGIN _bb1451
BUILTIN _bb1452 "like"
list args _bb1452
END
get _bb1454 bb string
get _bb1453 _bb1454 index
call _bb1450 _bb1451 _bb1453
call _bb1447 _bb1448 _bb1450
eq _bb1445 _bb1447 _bb1446
eq _bb1443 _bb1445 _bb1444
if # _bb1443 _bb1441
BEGIN _bb1455
BUILTIN _bb1456 "Assertion failed"
fail # _bb1456
END
BUILTIN _bb1458 Bfalse
BUILTIN _bb1460 I10
BEGIN _bb1462
list args A
END
BEGIN _bb1465
BUILTIN _bb1466 "an"
list args _bb1466
BUILTIN pos I9
END
get _bb1469 bb string
get _bb1468 _bb1469 index
call _bb1464 _bb1465 _bb1468
call _bb1461 _bb1462 _bb1464
eq _bb1459 _bb1461 _bb1460
eq _bb1457 _bb1459 _bb1458
if # _bb1457 _bb1455
BEGIN _bb1470
BUILTIN _bb1471 "Assertion failed"
fail # _bb1471
END
BUILTIN _bb1473 Bfalse
BUILTIN _bb1475 I3
BEGIN _bb1478
list args A
END
BEGIN _bb1481
BUILTIN _bb1482 " "
list args _bb1482
END
get _bb1484 bb string
get _bb1483 _bb1484 split
call _bb1480 _bb1481 _bb1483
call _bb1477 _bb1478 _bb1480
len _bb1476 _bb1477
eq _bb1474 _bb1476 _bb1475
eq _bb1472 _bb1474 _bb1473
if # _bb1472 _bb1470
return # #
END
try _bbmacro24 _bb1401
BEGIN _bb1485
BEGIN _bb1487
str _bb1489 _bbmacro24
BUILTIN _bb1491 "\n"
BUILTIN _bb1492 "Stringutil"
add _bb1490 _bb1492 _bb1491
add _bb1488 _bb1490 _bb1489
list args _bb1488
END
get _bb1494 bb logger
get _bb1493 _bb1494 fail
call _bb1486 _bb1487 _bb1493
END
BEGIN _bb1495
BEGIN _bb1497
BUILTIN _bb1498 "Stringutil"
list args _bb1498
END
get _bb1500 bb logger
get _bb1499 _bb1500 ok
call _bb1496 _bb1497 _bb1499
END
catch # _bbmacro24 _bb1485 _bb1495
BEGIN _bb1503
BEGIN _bb1506
BUILTIN value I0
BEGIN _bb1508
next x args
get _bb1509 this value
add _bb1509 _bb1509 x
set # this value _bb1509
END
IS add _bb1508
return # this
END
new accum _bb1506
final # accum
BUILTIN _bb1511 I10
range _bb1510 _bb1511
iter _bbmacro26 _bb1510
BEGIN _bb1515
BEGIN _bb1516
next _bb1517 _bbmacro26
AS i _bb1517
exists _bb1518 i
END
BEGIN _bb1519
BEGIN _bb1521
list args i
END
get _bb1522 accum add
call _bb1520 _bb1521 _bb1522
END
while # _bb1516 _bb1519
END
try _bb1513 _bb1515
BEGIN _bb1523
BUILTIN _bb1524 "Assertion failed"
fail # _bb1524
END
BUILTIN _bb1526 Bfalse
BUILTIN _bb1528 I45
get _bb1529 accum value
eq _bb1527 _bb1529 _bb1528
eq _bb1525 _bb1527 _bb1526
if # _bb1525 _bb1523
return # #
END
try _bbmacro25 _bb1503
BEGIN _bb1530
BEGIN _bb1532
str _bb1534 _bbmacro25
BUILTIN _bb1536 "\n"
BUILTIN _bb1537 "Atomicity"
add _bb1535 _bb1537 _bb1536
add _bb1533 _bb1535 _bb1534
list args _bb1533
END
get _bb1539 bb logger
get _bb1538 _bb1539 fail
call _bb1531 _bb1532 _bb1538
END
BEGIN _bb1540
BEGIN _bb1542
BUILTIN _bb1543 "Atomicity"
list args _bb1543
END
get _bb1545 bb logger
get _bb1544 _bb1545 ok
call _bb1541 _bb1542 _bb1544
END
catch # _bbmacro25 _bb1530 _bb1540
BEGIN _bb1548
BEGIN _bb1551
BEGIN _bb1552
BEGIN _bb1554
list args B
END
call _bb1553 _bb1554 extern2
return # _bb1553
END
IS foo1 _bb1552
BEGIN _bb1555
BEGIN _bb1557
list args this
END
call _bb1556 _bb1557 extern3
return # _bb1556
END
IS foo2 _bb1555
BEGIN _bb1558
get _bb1560 B foo1
call _bb1559 # _bb1560
return # _bb1559
END
IS foo3 _bb1558
return # this
END
new A _bb1551
final # A
BEGIN _bb1563
BEGIN _bb1564
BEGIN _bb1566
list args A
END
call _bb1565 _bb1566 extern2
return # _bb1565
END
IS foo1 _bb1564
BEGIN _bb1567
BEGIN _bb1569
list args this
END
call _bb1568 _bb1569 extern3
return # _bb1568
END
IS foo2 _bb1567
BEGIN _bb1570
BUILTIN _bb1571 I1
return # _bb1571
END
IS foo3 _bb1570
return # this
END
new B _bb1563
final # B
BEGIN _bb1572
next obj args
get _bb1574 obj foo1
call _bb1573 # _bb1574
return # _bb1573
END
IS extern1 _bb1572
final # extern1
BEGIN _bb1575
next obj args
get _bb1577 obj foo2
call _bb1576 # _bb1577
return # _bb1576
END
IS extern2 _bb1575
final # extern2
BEGIN _bb1578
next obj args
get _bb1580 obj foo3
call _bb1579 # _bb1580
return # _bb1579
END
IS extern3 _bb1578
final # extern3
BEGIN _bb1581
BUILTIN _bb1582 "Assertion failed"
fail # _bb1582
END
BUILTIN _bb1584 Bfalse
BUILTIN _bb1586 I1
BEGIN _bb1588
list args A
END
call _bb1587 _bb1588 extern1
eq _bb1585 _bb1587 _bb1586
eq _bb1583 _bb1585 _bb1584
if # _bb1583 _bb1581
return # #
END
try _bbmacro27 _bb1548
BEGIN _bb1589
BEGIN _bb1591
str _bb1593 _bbmacro27
BUILTIN _bb1595 "\n"
BUILTIN _bb1596 "No deadlock"
add _bb1594 _bb1596 _bb1595
add _bb1592 _bb1594 _bb1593
list args _bb1592
END
get _bb1598 bb logger
get _bb1597 _bb1598 fail
call _bb1590 _bb1591 _bb1597
END
BEGIN _bb1599
BEGIN _bb1601
BUILTIN _bb1602 "No deadlock"
list args _bb1602
END
get _bb1604 bb logger
get _bb1603 _bb1604 ok
call _bb1600 _bb1601 _bb1603
END
catch # _bbmacro27 _bb1589 _bb1599
BEGIN _bb1607
BUILTIN _bb1609 "vfs://test.txt"
file f1 _bb1609
BUILTIN _bb1610 "Virtual data."
push # f1 _bb1610
BUILTIN _bb1612 "vfs://test.txt"
file f2 _bb1612
BEGIN _bb1613
BUILTIN _bb1614 "Assertion failed"
fail # _bb1614
END
BUILTIN _bb1616 Bfalse
BUILTIN _bb1618 "Virtual data."
BEGIN _bb1620
list args f2
END
get _bb1622 bb os
get _bb1621 _bb1622 read
call _bb1619 _bb1620 _bb1621
eq _bb1617 _bb1619 _bb1618
eq _bb1615 _bb1617 _bb1616
if # _bb1615 _bb1613
return # #
END
try _bbmacro28 _bb1607
BEGIN _bb1623
BEGIN _bb1625
str _bb1627 _bbmacro28
BUILTIN _bb1629 "\n"
BUILTIN _bb1630 "VFS"
add _bb1628 _bb1630 _bb1629
add _bb1626 _bb1628 _bb1627
list args _bb1626
END
get _bb1632 bb logger
get _bb1631 _bb1632 fail
call _bb1624 _bb1625 _bb1631
END
BEGIN _bb1633
BEGIN _bb1635
BUILTIN _bb1636 "VFS"
list args _bb1636
END
get _bb1638 bb logger
get _bb1637 _bb1638 ok
call _bb1634 _bb1635 _bb1637
END
catch # _bbmacro28 _bb1623 _bb1633
BEGIN _bb1641
BUILTIN _bb1642 "bb://.cache/database.db"
sqlite db _bb1642
BUILTIN _bb1645 "CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY, name TEXT, age INTEGER);"
push _bb1644 db _bb1645
BUILTIN n I10000
time start
BUILTIN _bb1649 "BEGIN TRANSACTION;"
push _bb1648 db _bb1649
range _bb1650 n
iter _bbmacro30 _bb1650
BEGIN _bb1652
next _bb1653 _bbmacro30
AS i _bb1653
exists _bb1654 i
END
BEGIN _bb1655
BUILTIN _bb1658 ");"
BUILTIN _bb1662 I10
mod _bb1661 i _bb1662
BUILTIN _bb1663 I20
add _bb1660 _bb1663 _bb1661
str _bb1664 _bb1660
BUILTIN _bb1666 "', "
str _bb1668 i
BUILTIN _bb1669 "INSERT INTO users (name, age) VALUES ('User"
add _bb1667 _bb1669 _bb1668
add _bb1665 _bb1667 _bb1666
add _bb1659 _bb1665 _bb1664
add _bb1657 _bb1659 _bb1658
push _bb1656 db _bb1657
BUILTIN _bb1672 ";"
str _bb1674 i
BUILTIN _bb1675 "SELECT * FROM users WHERE id = "
add _bb1673 _bb1675 _bb1674
add _bb1671 _bb1673 _bb1672
push _bb1670 db _bb1671
BUILTIN _bb1678 ";"
str _bb1680 i
BUILTIN _bb1681 "UPDATE users SET age = age + 1 WHERE id = "
add _bb1679 _bb1681 _bb1680
add _bb1677 _bb1679 _bb1678
push _bb1676 db _bb1677
END
while # _bb1652 _bb1655
BUILTIN _bb1683 "COMMIT;"
push _bb1682 db _bb1683
time _bb1685
sub eta _bb1685 start
BEGIN _bb1686
BUILTIN _bb1687 "Assertion failed"
fail # _bb1687
END
BUILTIN _bb1689 Bfalse
BUILTIN _bb1691 I1
lt _bb1690 eta _bb1691
eq _bb1688 _bb1690 _bb1689
if # _bb1688 _bb1686
BEGIN _bb1692
BUILTIN _bb1693 "Assertion failed"
fail # _bb1693
END
BUILTIN _bb1695 Bfalse
BUILTIN _bb1699 "SELECT * FROM users;"
push _bb1698 db _bb1699
len _bb1697 _bb1698
eq _bb1696 n _bb1697
eq _bb1694 _bb1696 _bb1695
if # _bb1694 _bb1692
BUILTIN _bb1701 "DELETE FROM users;"
push _bb1700 db _bb1701
return # #
END
try _bbmacro29 _bb1641
BEGIN _bb1702
BEGIN _bb1704
str _bb1706 _bbmacro29
BUILTIN _bb1708 "\n"
BUILTIN _bb1709 "Database"
add _bb1707 _bb1709 _bb1708
add _bb1705 _bb1707 _bb1706
list args _bb1705
END
get _bb1711 bb logger
get _bb1710 _bb1711 fail
call _bb1703 _bb1704 _bb1710
END
BEGIN _bb1712
BEGIN _bb1714
BUILTIN _bb1715 "Database"
list args _bb1715
END
get _bb1717 bb logger
get _bb1716 _bb1717 ok
call _bb1713 _bb1714 _bb1716
END
catch # _bbmacro29 _bb1702 _bb1712
