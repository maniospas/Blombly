BEGIN _bb29
BEGIN _bb32
BUILTIN lightred "\e[0;91m"
final # lightred
BUILTIN lightgreen "\e[0;92m"
final # lightgreen
BUILTIN reset "\e[0m"
final # reset
return # this
END
new ansi _bb32
final # ansi
BEGIN _bb52
BEGIN _bb53
next element args
BEGIN _bb56
get _bb57 this element
IS .element _bb57
BEGIN _bb58
next A args
get _bb59 this .element
IS ..element _bb59
push # A ..element
return # A
END
IS call _bb58
return # this
END
new _bb54 _bb56
return # _bb54
END
IS toback _bb53
final # toback
BEGIN _bb60
next func args
BEGIN _bb63
get _bb64 this func
IS .func _bb64
BEGIN _bb65
next A args
get _bb66 this .func
IS ..func _bb66
list ret
iter _bbmacro0 A
BEGIN _bb69
next _bb70 _bbmacro0
AS x _bb70
exists _bb71 x
END
BEGIN _bb72
BEGIN _bb74
list args x
END
call _bb73 _bb74 ..func
push # ret _bb73
END
while # _bb69 _bb72
return # ret
END
IS call _bb65
return # this
END
new _bb61 _bb63
return # _bb61
END
IS transform _bb60
final # transform
return # this
END
new collection _bb52
final # collection
BEGIN _bb75
next path args
str path path
BEGIN _bb78
sqlite connector path
return # this
END
new _bb76 _bb78
return # _bb76
END
IS db _bb75
final # db
BEGIN _bb189
BEGIN _bb190
next text args
str text text
BUILTIN _bb192 ""
str _bb194 text
BUILTIN _bb196 "  ] "
get _bb199 bb ansi
get _bb198 _bb199 reset
str _bb200 _bb198
BUILTIN _bb202 "ok"
get _bb205 bb ansi
get _bb204 _bb205 lightgreen
str _bb206 _bb204
BUILTIN _bb207 "[  "
add _bb203 _bb207 _bb206
add _bb201 _bb203 _bb202
add _bb197 _bb201 _bb200
add _bb195 _bb197 _bb196
add _bb193 _bb195 _bb194
add _bb191 _bb193 _bb192
print # _bb191
END
IS ok _bb190
final # ok
BEGIN _bb208
next text args
str text text
BUILTIN _bb210 ""
str _bb212 text
BUILTIN _bb214 " ] "
get _bb217 bb ansi
get _bb216 _bb217 reset
str _bb218 _bb216
BUILTIN _bb220 "fail"
get _bb223 bb ansi
get _bb222 _bb223 lightred
str _bb224 _bb222
BUILTIN _bb225 "[ "
add _bb221 _bb225 _bb224
add _bb219 _bb221 _bb220
add _bb215 _bb219 _bb218
add _bb213 _bb215 _bb214
add _bb211 _bb213 _bb212
add _bb209 _bb211 _bb210
print # _bb209
END
IS fail _bb208
final # fail
return # this
END
new logger _bb189
final # logger
BEGIN _bb349
BEGIN _bb350
next value args
str value value
return # value
END
IS call _bb350
BEGIN _bb413
next query args
str query query
BEGIN _bb416
get _bb417 this query
IS .query _bb417
BEGIN _bb418
BUILTIN _bb419 "Assertion failed"
fail # _bb419
END
BUILTIN _bb421 Bfalse
BUILTIN _bb423 I0
len _bb424 args
eq _bb422 _bb424 _bb423
eq _bb420 _bb422 _bb421
if # _bb420 _bb418
BEGIN _bb425
next search args
str search search
get _bb426 this .query
IS ..query _bb426
BEGIN _bb427
BUILTIN _bb428 "Assertion failed"
fail # _bb428
END
BUILTIN _bb430 Bfalse
BUILTIN _bb432 I0
len _bb433 args
eq _bb431 _bb433 _bb432
eq _bb429 _bb431 _bb430
if # _bb429 _bb427
IS query ..query
len nsearch search
len nquery query
BEGIN _bb436
BUILTIN _bb437 Bfalse
return # _bb437
END
lt _bb438 nsearch nquery
if # _bb438 _bb436
range _bb439 nquery
iter _bbmacro4 _bb439
BEGIN _bb441
next _bb442 _bbmacro4
AS i _bb442
exists _bb443 i
END
BEGIN _bb444
BEGIN _bb445
BUILTIN _bb446 Bfalse
return # _bb446
END
at _bb448 search i
at _bb449 query i
neq _bb447 _bb449 _bb448
if # _bb447 _bb445
END
while # _bb441 _bb444
BUILTIN _bb450 Btrue
return # _bb450
END
IS call _bb425
return # this
END
new _bb414 _bb416
return # _bb414
END
IS starts _bb413
final # starts
BEGIN _bb451
next query args
str query query
BEGIN _bb454
get _bb455 this query
IS .query _bb455
BEGIN _bb456
BUILTIN _bb457 "Assertion failed"
fail # _bb457
END
BUILTIN _bb459 Bfalse
BUILTIN _bb461 I0
len _bb462 args
eq _bb460 _bb462 _bb461
eq _bb458 _bb460 _bb459
if # _bb458 _bb456
BEGIN _bb463
next search args
str search search
get _bb464 this .query
IS ..query _bb464
BEGIN _bb465
BUILTIN _bb466 "Assertion failed"
fail # _bb466
END
BUILTIN _bb468 Bfalse
BUILTIN _bb470 I0
len _bb471 args
eq _bb469 _bb471 _bb470
eq _bb467 _bb469 _bb468
if # _bb467 _bb465
IS query ..query
len nsearch search
len nquery query
BEGIN _bb474
BUILTIN _bb475 Bfalse
return # _bb475
END
lt _bb476 nsearch nquery
if # _bb476 _bb474
range _bb477 nquery
iter _bbmacro5 _bb477
BEGIN _bb479
next _bb480 _bbmacro5
AS i _bb480
exists _bb481 i
END
BEGIN _bb482
BEGIN _bb483
BUILTIN _bb484 Bfalse
return # _bb484
END
sub _bb488 nsearch nquery
add _bb487 _bb488 i
at _bb486 search _bb487
at _bb489 query i
neq _bb485 _bb489 _bb486
if # _bb485 _bb483
END
while # _bb479 _bb482
BUILTIN _bb490 Btrue
return # _bb490
END
IS call _bb463
return # this
END
new _bb452 _bb454
return # _bb452
END
IS ends _bb451
final # ends
BEGIN _bb491
next query args
str query query
BEGIN _bb494
get _bb495 this query
IS .query _bb495
BEGIN _bb496
BUILTIN _bb497 "Assertion failed"
fail # _bb497
END
BUILTIN _bb499 Bfalse
BUILTIN _bb501 I0
len _bb502 args
eq _bb500 _bb502 _bb501
eq _bb498 _bb500 _bb499
if # _bb498 _bb496
BEGIN _bb503
BUILTIN pos I0
END
BEGIN _bb507
IS pos pos
return # #
END
try _bb505 _bb507
catch # _bb505 _bb503
BEGIN _bb508
next search args
str search search
get _bb509 this .query
IS ..query _bb509
BEGIN _bb510
BUILTIN _bb511 "Assertion failed"
fail # _bb511
END
BUILTIN _bb513 Bfalse
BUILTIN _bb515 I0
len _bb516 args
eq _bb514 _bb516 _bb515
eq _bb512 _bb514 _bb513
if # _bb512 _bb510
IS query ..query
get _bb517 this pos
IS pos _bb517
len nsearch search
len nquery query
BUILTIN _bb522 I1
sub _bb523 nsearch nquery
add _bb521 _bb523 _bb522
range _bb520 pos _bb521
iter _bbmacro6 _bb520
BEGIN _bb525
next _bb526 _bbmacro6
AS i _bb526
exists _bb527 i
END
BEGIN _bb528
range _bb529 nquery
iter _bbmacro7 _bb529
BEGIN _bb533
BEGIN _bb534
next _bb535 _bbmacro7
AS j _bb535
exists _bb536 j
END
BEGIN _bb537
BEGIN _bb538
BUILTIN _bb539 Btrue
return # _bb539
END
add _bb542 i j
at _bb541 search _bb542
at _bb543 query j
neq _bb540 _bb543 _bb541
if # _bb540 _bb538
END
while # _bb534 _bb537
END
try different _bb533
BEGIN _bb544
return # i
END
catch # different _bb544
END
while # _bb525 _bb528
return # nsearch
END
IS call _bb508
return # this
END
new _bb492 _bb494
return # _bb492
END
IS index _bb491
final # index
BEGIN _bb545
next query args
str query query
BEGIN _bb548
get _bb549 this query
IS .query _bb549
BEGIN _bb550
BUILTIN _bb551 "Assertion failed"
fail # _bb551
END
BUILTIN _bb553 Bfalse
BUILTIN _bb555 I0
len _bb556 args
eq _bb554 _bb556 _bb555
eq _bb552 _bb554 _bb553
if # _bb552 _bb550
BEGIN _bb558
END
default # _bb558
BEGIN _bb560
next search args
str search search
get _bb561 this .query
IS ..query _bb561
IS query ..query
len nsearch search
len nquery query
BEGIN _bb564
BUILTIN _bb565 "Cannot split on a zero-length string"
fail # _bb565
END
BUILTIN _bb567 I0
eq _bb566 nquery _bb567
if # _bb566 _bb564
list ret
BUILTIN pos I0
BEGIN _bb570
lt _bb571 pos nsearch
END
BEGIN _bb572
IS prev_pos pos
BEGIN _bb574
list args search
END
BEGIN _bb577
list args query
IS pos pos
END
get _bb579 bb string
get _bb578 _bb579 index
call _bb576 _bb577 _bb578
call _bb573 _bb574 _bb576
IS pos _bb573
range _bb581 prev_pos pos
at _bb580 search _bb581
IS s _bb580
push # ret s
add pos pos nquery
END
while # _bb570 _bb572
return # ret
END
IS call _bb560
return # this
END
new _bb546 _bb548
return # _bb546
END
IS split _bb545
final # split
return # this
END
new string _bb349
final # string
return # this
END
new bb _bb29
final # bb
BEGIN _bb584
BUILTIN A "0"
BUILTIN _bb586 "1"
add A A _bb586
BUILTIN _bb587 "2"
add A A _bb587
BUILTIN _bb588 "3"
add A A _bb588
BUILTIN _bb589 "4"
add A A _bb589
BUILTIN _bb590 "5"
add A A _bb590
BUILTIN _bb591 "6"
add A A _bb591
BUILTIN _bb592 "7"
add A A _bb592
BUILTIN _bb593 "8"
add A A _bb593
BUILTIN _bb594 "9"
add A A _bb594
BEGIN _bb595
BUILTIN _bb596 "Assertion failed"
fail # _bb596
END
BUILTIN _bb598 Bfalse
BUILTIN _bb600 "0123456789"
eq _bb599 A _bb600
eq _bb597 _bb599 _bb598
if # _bb597 _bb595
BEGIN _bb601
BUILTIN _bb602 "Assertion failed"
fail # _bb602
END
BUILTIN _bb604 Bfalse
BUILTIN _bb606 I10
len _bb607 A
eq _bb605 _bb607 _bb606
eq _bb603 _bb605 _bb604
if # _bb603 _bb601
return # #
END
try _bbmacro8 _bb584
BEGIN _bb608
BEGIN _bb610
str _bb612 _bbmacro8
BUILTIN _bb614 "\n"
BUILTIN _bb615 "String add"
add _bb613 _bb615 _bb614
add _bb611 _bb613 _bb612
list args _bb611
END
get _bb617 bb logger
get _bb616 _bb617 fail
call _bb609 _bb610 _bb616
END
BEGIN _bb618
BEGIN _bb620
BUILTIN _bb621 "String add"
list args _bb621
END
get _bb623 bb logger
get _bb622 _bb623 ok
call _bb619 _bb620 _bb622
END
catch # _bbmacro8 _bb608 _bb618
BEGIN _bb626
BUILTIN _bb627 I1
BUILTIN _bb628 I2
BUILTIN _bb629 I3
BUILTIN _bb630 I4
list A _bb627 _bb628 _bb629 _bb630
BEGIN _bb632
BUILTIN _bb633 "Assertion failed"
fail # _bb633
END
BUILTIN _bb635 Bfalse
BUILTIN _bb637 I2
BUILTIN _bb639 I1
at _bb638 A _bb639
eq _bb636 _bb638 _bb637
eq _bb634 _bb636 _bb635
if # _bb634 _bb632
BEGIN _bb640
BUILTIN _bb641 "Assertion failed"
fail # _bb641
END
BUILTIN _bb643 Bfalse
BUILTIN _bb645 I1
next _bb646 A
eq _bb644 _bb646 _bb645
eq _bb642 _bb644 _bb643
if # _bb642 _bb640
BEGIN _bb647
BUILTIN _bb648 "Assertion failed"
fail # _bb648
END
BUILTIN _bb650 Bfalse
BUILTIN _bb652 I2
next _bb653 A
eq _bb651 _bb653 _bb652
eq _bb649 _bb651 _bb650
if # _bb649 _bb647
BEGIN _bb654
BUILTIN _bb655 "Assertion failed"
fail # _bb655
END
BUILTIN _bb657 Bfalse
BUILTIN _bb659 I4
pop _bb660 A
eq _bb658 _bb660 _bb659
eq _bb656 _bb658 _bb657
if # _bb656 _bb654
BEGIN _bb661
BUILTIN _bb662 "Assertion failed"
fail # _bb662
END
BUILTIN _bb664 Bfalse
BUILTIN _bb666 I3
pop _bb667 A
eq _bb665 _bb667 _bb666
eq _bb663 _bb665 _bb664
if # _bb663 _bb661
BEGIN _bb668
BUILTIN _bb669 "Assertion failed"
fail # _bb669
END
BUILTIN _bb671 Bfalse
BUILTIN _bb673 I0
len _bb674 A
eq _bb672 _bb674 _bb673
eq _bb670 _bb672 _bb671
if # _bb670 _bb668
BUILTIN _bb675 I5
push # A _bb675
BEGIN _bb676
BUILTIN _bb677 "Assertion failed"
fail # _bb677
END
BUILTIN _bb679 Bfalse
BUILTIN _bb681 I5
pop _bb682 A
eq _bb680 _bb682 _bb681
eq _bb678 _bb680 _bb679
if # _bb678 _bb676
return # #
END
try _bbmacro9 _bb626
BEGIN _bb683
BEGIN _bb685
str _bb687 _bbmacro9
BUILTIN _bb689 "\n"
BUILTIN _bb690 "List"
add _bb688 _bb690 _bb689
add _bb686 _bb688 _bb687
list args _bb686
END
get _bb692 bb logger
get _bb691 _bb692 fail
call _bb684 _bb685 _bb691
END
BEGIN _bb693
BEGIN _bb695
BUILTIN _bb696 "List"
list args _bb696
END
get _bb698 bb logger
get _bb697 _bb698 ok
call _bb694 _bb695 _bb697
END
catch # _bbmacro9 _bb683 _bb693
BEGIN _bb701
BUILTIN s I0
BUILTIN _bb704 I10
range _bb703 _bb704
iter _bbmacro11 _bb703
BEGIN _bb706
next _bb707 _bbmacro11
AS i _bb707
exists _bb708 i
END
BEGIN _bb709
add s s i
END
while # _bb706 _bb709
BEGIN _bb710
BUILTIN _bb711 "Assertion failed"
fail # _bb711
END
BUILTIN _bb713 Bfalse
BUILTIN _bb715 I45
eq _bb714 s _bb715
eq _bb712 _bb714 _bb713
if # _bb712 _bb710
return # #
END
try _bbmacro10 _bb701
BEGIN _bb716
BEGIN _bb718
str _bb720 _bbmacro10
BUILTIN _bb722 "\n"
BUILTIN _bb723 "Range"
add _bb721 _bb723 _bb722
add _bb719 _bb721 _bb720
list args _bb719
END
get _bb725 bb logger
get _bb724 _bb725 fail
call _bb717 _bb718 _bb724
END
BEGIN _bb726
BEGIN _bb728
BUILTIN _bb729 "Range"
list args _bb729
END
get _bb731 bb logger
get _bb730 _bb731 ok
call _bb727 _bb728 _bb730
END
catch # _bbmacro10 _bb716 _bb726
BEGIN _bb734
BUILTIN _bb735 I1
BUILTIN _bb736 I2
BUILTIN _bb737 I3
list A _bb735 _bb736 _bb737
BUILTIN s I0
iter _bbmacro13 A
BEGIN _bb741
next _bb742 _bbmacro13
AS x _bb742
exists _bb743 x
END
BEGIN _bb744
add s s x
END
while # _bb741 _bb744
iter it A
BEGIN _bb746
next _bb747 it
AS x _bb747
exists _bb748 x
END
BEGIN _bb749
sub s s x
END
while # _bb746 _bb749
BEGIN _bb750
BUILTIN _bb751 "Assertion failed"
fail # _bb751
END
BUILTIN _bb753 Bfalse
BUILTIN _bb755 I0
eq _bb754 s _bb755
eq _bb752 _bb754 _bb753
if # _bb752 _bb750
return # #
END
try _bbmacro12 _bb734
BEGIN _bb756
BEGIN _bb758
str _bb760 _bbmacro12
BUILTIN _bb762 "\n"
BUILTIN _bb763 "Iteration"
add _bb761 _bb763 _bb762
add _bb759 _bb761 _bb760
list args _bb759
END
get _bb765 bb logger
get _bb764 _bb765 fail
call _bb757 _bb758 _bb764
END
BEGIN _bb766
BEGIN _bb768
BUILTIN _bb769 "Iteration"
list args _bb769
END
get _bb771 bb logger
get _bb770 _bb771 ok
call _bb767 _bb768 _bb770
END
catch # _bbmacro12 _bb756 _bb766
BEGIN _bb774
BEGIN _bb775
BEGIN _bb776
get _bb777 this value
return # _bb777
END
IS int _bb776
BEGIN _bb778
next other args
get _bb780 other value
get _bb781 this value
lt _bb779 _bb781 _bb780
return # _bb779
END
IS lt _bb778
BEGIN _bb782
BUILTIN _bb784 ""
get _bb786 this value
str _bb787 _bb786
BUILTIN _bb788 "num "
add _bb785 _bb788 _bb787
add _bb783 _bb785 _bb784
return # _bb783
END
IS str _bb782
END
IS Num _bb775
final # Num
BEGIN _bb789
next x args
BEGIN _bb792
inline _bb793 Num
IS value x
return # this
END
new _bb790 _bb792
return # _bb790
END
IS num _bb789
BUILTIN _bb794 I5
BUILTIN _bb795 I2
BUILTIN _bb796 I3
BUILTIN _bb797 I4
BUILTIN _bb798 I1
list A _bb794 _bb795 _bb796 _bb797 _bb798
BEGIN _bb801
list args A
END
BEGIN _bb804
list args num
END
get _bb806 bb collection
get _bb805 _bb806 transform
call _bb803 _bb804 _bb805
call _bb800 _bb801 _bb803
IS A _bb800
len n A
range _bb808 n
iter _bbmacro15 _bb808
BEGIN _bb810
next _bb811 _bbmacro15
AS i _bb811
exists _bb812 i
END
BEGIN _bb813
BUILTIN _bb816 I1
add _bb815 i _bb816
range _bb814 _bb815 n
iter _bbmacro16 _bb814
BEGIN _bb818
next _bb819 _bbmacro16
AS j _bb819
exists _bb820 j
END
BEGIN _bb821
BEGIN _bb822
at _bb823 A i
IS tmp _bb823
at _bb824 A j
put # A i _bb824
put # A j tmp
END
at _bb826 A i
at _bb827 A j
lt _bb825 _bb827 _bb826
if # _bb825 _bb822
END
while # _bb818 _bb821
END
while # _bb810 _bb813
BEGIN _bb828
BUILTIN _bb829 "Assertion failed"
fail # _bb829
END
BUILTIN _bb831 Bfalse
BUILTIN _bb833 I1
BUILTIN _bb836 I0
at _bb835 A _bb836
int _bb834 _bb835
eq _bb832 _bb834 _bb833
eq _bb830 _bb832 _bb831
if # _bb830 _bb828
return # #
END
try _bbmacro14 _bb774
BEGIN _bb837
BEGIN _bb839
str _bb841 _bbmacro14
BUILTIN _bb843 "\n"
BUILTIN _bb844 "Overload"
add _bb842 _bb844 _bb843
add _bb840 _bb842 _bb841
list args _bb840
END
get _bb846 bb logger
get _bb845 _bb846 fail
call _bb838 _bb839 _bb845
END
BEGIN _bb847
BEGIN _bb849
BUILTIN _bb850 "Overload"
list args _bb850
END
get _bb852 bb logger
get _bb851 _bb852 ok
call _bb848 _bb849 _bb851
END
catch # _bbmacro14 _bb837 _bb847
BEGIN _bb855
BEGIN _bb856
get _bb857 this x
IS .x _bb857
BUILTIN x I0
BEGIN _bb859
get _bb860 this x
return # _bb860
END
IS xthis _bb859
BEGIN _bb861
get _bb862 this .x
IS ..x _bb862
return # ..x
END
IS xclosure _bb861
END
IS Struct _bb856
BUILTIN x I1
BEGIN _bb866
inline _bb867 Struct
return # this
END
new struct _bb866
BUILTIN x I2
BEGIN _bb869
BUILTIN _bb870 "Assertion failed"
fail # _bb870
END
BUILTIN _bb872 Bfalse
BUILTIN _bb874 I0
get _bb876 struct xthis
call _bb875 # _bb876
eq _bb873 _bb875 _bb874
eq _bb871 _bb873 _bb872
if # _bb871 _bb869
BEGIN _bb877
BUILTIN _bb878 "Assertion failed"
fail # _bb878
END
BUILTIN _bb880 Bfalse
BUILTIN _bb882 I1
get _bb884 struct xclosure
call _bb883 # _bb884
eq _bb881 _bb883 _bb882
eq _bb879 _bb881 _bb880
if # _bb879 _bb877
return # #
END
try _bbmacro17 _bb855
BEGIN _bb885
BEGIN _bb887
str _bb889 _bbmacro17
BUILTIN _bb891 "\n"
BUILTIN _bb892 "Closure"
add _bb890 _bb892 _bb891
add _bb888 _bb890 _bb889
list args _bb888
END
get _bb894 bb logger
get _bb893 _bb894 fail
call _bb886 _bb887 _bb893
END
BEGIN _bb895
BEGIN _bb897
BUILTIN _bb898 "Closure"
list args _bb898
END
get _bb900 bb logger
get _bb899 _bb900 ok
call _bb896 _bb897 _bb899
END
catch # _bbmacro17 _bb885 _bb895
BEGIN _bb903
BEGIN _bb906
BUILTIN x I1
return # this
END
new A _bb906
BEGIN _bb909
BUILTIN _bb910 "Assertion failed"
fail # _bb910
END
BUILTIN _bb912 Bfalse
BUILTIN _bb914 I1
get _bb915 A x
eq _bb913 _bb915 _bb914
eq _bb911 _bb913 _bb912
if # _bb911 _bb909
clear # A
BEGIN _bb919
get _bb920 A x
print # _bb920
END
try err _bb919
BEGIN _bb921
BUILTIN _bb922 "Assertion failed"
fail # _bb922
END
BUILTIN _bb924 Bfalse
BEGIN _bb927
BEGIN _bb928
BUILTIN _bb929 Btrue
return # _bb929
END
BEGIN _bb930
BUILTIN _bb931 Bfalse
return # _bb931
END
catch # err _bb928 _bb930
END
try _bb925 _bb927
eq _bb923 _bb925 _bb924
if # _bb923 _bb921
BEGIN _bb934
BUILTIN x I1
return # this
END
new B _bb934
move C B
BEGIN _bb940
get _bb941 B x
print # _bb941
END
try err _bb940
BEGIN _bb942
BUILTIN _bb943 "Assertion failed"
fail # _bb943
END
BUILTIN _bb945 Bfalse
BEGIN _bb948
BEGIN _bb949
BUILTIN _bb950 Btrue
return # _bb950
END
BEGIN _bb951
BUILTIN _bb952 Bfalse
return # _bb952
END
catch # err _bb949 _bb951
END
try _bb946 _bb948
eq _bb944 _bb946 _bb945
if # _bb944 _bb942
BEGIN _bb953
BUILTIN _bb954 "Assertion failed"
fail # _bb954
END
BUILTIN _bb956 Bfalse
BUILTIN _bb958 I1
get _bb959 C x
eq _bb957 _bb959 _bb958
eq _bb955 _bb957 _bb956
if # _bb955 _bb953
return # #
END
try _bbmacro18 _bb903
BEGIN _bb960
BEGIN _bb962
str _bb964 _bbmacro18
BUILTIN _bb966 "\n"
BUILTIN _bb967 "Clear"
add _bb965 _bb967 _bb966
add _bb963 _bb965 _bb964
list args _bb963
END
get _bb969 bb logger
get _bb968 _bb969 fail
call _bb961 _bb962 _bb968
END
BEGIN _bb970
BEGIN _bb972
BUILTIN _bb973 "Clear"
list args _bb973
END
get _bb975 bb logger
get _bb974 _bb975 ok
call _bb971 _bb972 _bb974
END
catch # _bbmacro18 _bb960 _bb970
BEGIN _bb978
BEGIN _bb979
next A args
move A A
len _bb980 A
return # _bb980
END
IS waslength _bb979
BUILTIN _bb981 I1
BUILTIN _bb982 I2
BUILTIN _bb983 I3
list A _bb981 _bb982 _bb983
BEGIN _bb985
BUILTIN _bb986 "Assertion failed"
fail # _bb986
END
BUILTIN _bb988 Bfalse
BUILTIN _bb990 I3
len _bb991 A
eq _bb989 _bb991 _bb990
eq _bb987 _bb989 _bb988
if # _bb987 _bb985
BEGIN _bb992
BUILTIN _bb993 "Assertion failed"
fail # _bb993
END
BUILTIN _bb995 Bfalse
BUILTIN _bb997 I3
BEGIN _bb999
list args A
END
call _bb998 _bb999 waslength
eq _bb996 _bb998 _bb997
eq _bb994 _bb996 _bb995
if # _bb994 _bb992
BEGIN _bb1000
BUILTIN _bb1001 "Assertion failed"
fail # _bb1001
END
BUILTIN _bb1003 Bfalse
BUILTIN _bb1005 I0
len _bb1006 A
eq _bb1004 _bb1006 _bb1005
eq _bb1002 _bb1004 _bb1003
if # _bb1002 _bb1000
return # #
END
try _bbmacro19 _bb978
BEGIN _bb1007
BEGIN _bb1009
str _bb1011 _bbmacro19
BUILTIN _bb1013 "\n"
BUILTIN _bb1014 "Move "
add _bb1012 _bb1014 _bb1013
add _bb1010 _bb1012 _bb1011
list args _bb1010
END
get _bb1016 bb logger
get _bb1015 _bb1016 fail
call _bb1008 _bb1009 _bb1015
END
BEGIN _bb1017
BEGIN _bb1019
BUILTIN _bb1020 "Move "
list args _bb1020
END
get _bb1022 bb logger
get _bb1021 _bb1022 ok
call _bb1018 _bb1019 _bb1021
END
catch # _bbmacro19 _bb1007 _bb1017
BEGIN _bb1025
BUILTIN _bb1026 I1
BUILTIN _bb1027 I2
BUILTIN _bb1028 I3
list A _bb1026 _bb1027 _bb1028
BEGIN _bb1031
list args A
END
BEGIN _bb1034
BUILTIN _bb1035 I4
list args _bb1035
END
get _bb1037 bb collection
get _bb1036 _bb1037 toback
call _bb1033 _bb1034 _bb1036
call _bb1030 _bb1031 _bb1033
IS A _bb1030
BEGIN _bb1038
BUILTIN _bb1039 "Assertion failed"
fail # _bb1039
END
BUILTIN _bb1041 Bfalse
BUILTIN _bb1043 I4
pop _bb1044 A
eq _bb1042 _bb1044 _bb1043
eq _bb1040 _bb1042 _bb1041
if # _bb1040 _bb1038
return # #
END
try _bbmacro20 _bb1025
BEGIN _bb1045
BEGIN _bb1047
str _bb1049 _bbmacro20
BUILTIN _bb1051 "\n"
BUILTIN _bb1052 "Collection"
add _bb1050 _bb1052 _bb1051
add _bb1048 _bb1050 _bb1049
list args _bb1048
END
get _bb1054 bb logger
get _bb1053 _bb1054 fail
call _bb1046 _bb1047 _bb1053
END
BEGIN _bb1055
BEGIN _bb1057
BUILTIN _bb1058 "Collection"
list args _bb1058
END
get _bb1060 bb logger
get _bb1059 _bb1060 ok
call _bb1056 _bb1057 _bb1059
END
catch # _bbmacro20 _bb1045 _bb1055
BEGIN _bb1063
BUILTIN A "I like banana!"
BEGIN _bb1065
BUILTIN _bb1066 "Assertion failed"
fail # _bb1066
END
BUILTIN _bb1068 Bfalse
BEGIN _bb1070
list args A
END
BEGIN _bb1073
BUILTIN _bb1074 "I like"
list args _bb1074
END
get _bb1076 bb string
get _bb1075 _bb1076 starts
call _bb1072 _bb1073 _bb1075
call _bb1069 _bb1070 _bb1072
eq _bb1067 _bb1069 _bb1068
if # _bb1067 _bb1065
BEGIN _bb1077
BUILTIN _bb1078 "Assertion failed"
fail # _bb1078
END
BUILTIN _bb1080 Bfalse
BEGIN _bb1082
list args A
END
BEGIN _bb1085
BUILTIN _bb1086 "banana!"
list args _bb1086
END
get _bb1088 bb string
get _bb1087 _bb1088 ends
call _bb1084 _bb1085 _bb1087
call _bb1081 _bb1082 _bb1084
eq _bb1079 _bb1081 _bb1080
if # _bb1079 _bb1077
BEGIN _bb1089
BUILTIN _bb1090 "Assertion failed"
fail # _bb1090
END
BUILTIN _bb1092 Bfalse
BUILTIN _bb1094 I3
BEGIN _bb1097
list args A
END
BEGIN _bb1100
BUILTIN _bb1101 " "
list args _bb1101
END
get _bb1103 bb string
get _bb1102 _bb1103 split
call _bb1099 _bb1100 _bb1102
call _bb1096 _bb1097 _bb1099
len _bb1095 _bb1096
eq _bb1093 _bb1095 _bb1094
eq _bb1091 _bb1093 _bb1092
if # _bb1091 _bb1089
BEGIN _bb1104
BUILTIN _bb1105 "Assertion failed"
fail # _bb1105
END
BUILTIN _bb1107 Bfalse
BUILTIN _bb1109 I2
BEGIN _bb1111
list args A
END
BEGIN _bb1114
BUILTIN _bb1115 "like"
list args _bb1115
END
get _bb1117 bb string
get _bb1116 _bb1117 index
call _bb1113 _bb1114 _bb1116
call _bb1110 _bb1111 _bb1113
eq _bb1108 _bb1110 _bb1109
eq _bb1106 _bb1108 _bb1107
if # _bb1106 _bb1104
BEGIN _bb1118
BUILTIN _bb1119 "Assertion failed"
fail # _bb1119
END
BUILTIN _bb1121 Bfalse
BUILTIN _bb1123 I10
BEGIN _bb1125
list args A
END
BEGIN _bb1128
BUILTIN _bb1129 "an"
list args _bb1129
BUILTIN pos I9
END
get _bb1132 bb string
get _bb1131 _bb1132 index
call _bb1127 _bb1128 _bb1131
call _bb1124 _bb1125 _bb1127
eq _bb1122 _bb1124 _bb1123
eq _bb1120 _bb1122 _bb1121
if # _bb1120 _bb1118
return # #
END
try _bbmacro21 _bb1063
BEGIN _bb1133
BEGIN _bb1135
str _bb1137 _bbmacro21
BUILTIN _bb1139 "\n"
BUILTIN _bb1140 "String"
add _bb1138 _bb1140 _bb1139
add _bb1136 _bb1138 _bb1137
list args _bb1136
END
get _bb1142 bb logger
get _bb1141 _bb1142 fail
call _bb1134 _bb1135 _bb1141
END
BEGIN _bb1143
BEGIN _bb1145
BUILTIN _bb1146 "String"
list args _bb1146
END
get _bb1148 bb logger
get _bb1147 _bb1148 ok
call _bb1144 _bb1145 _bb1147
END
catch # _bbmacro21 _bb1133 _bb1143
BEGIN _bb1151
BEGIN _bb1154
BUILTIN value I0
BEGIN _bb1156
next x args
get _bb1157 this value
add _bb1157 _bb1157 x
set # this value _bb1157
END
IS add _bb1156
return # this
END
new accum _bb1154
final # accum
BUILTIN _bb1159 I10
range _bb1158 _bb1159
iter _bbmacro23 _bb1158
BEGIN _bb1163
BEGIN _bb1164
next _bb1165 _bbmacro23
AS i _bb1165
exists _bb1166 i
END
BEGIN _bb1167
BEGIN _bb1169
list args i
END
get _bb1170 accum add
call _bb1168 _bb1169 _bb1170
END
while # _bb1164 _bb1167
END
try _bb1161 _bb1163
BEGIN _bb1171
BUILTIN _bb1172 "Assertion failed"
fail # _bb1172
END
BUILTIN _bb1174 Bfalse
BUILTIN _bb1176 I45
get _bb1177 accum value
eq _bb1175 _bb1177 _bb1176
eq _bb1173 _bb1175 _bb1174
if # _bb1173 _bb1171
return # #
END
try _bbmacro22 _bb1151
BEGIN _bb1178
BEGIN _bb1180
str _bb1182 _bbmacro22
BUILTIN _bb1184 "\n"
BUILTIN _bb1185 "Atomicity"
add _bb1183 _bb1185 _bb1184
add _bb1181 _bb1183 _bb1182
list args _bb1181
END
get _bb1187 bb logger
get _bb1186 _bb1187 fail
call _bb1179 _bb1180 _bb1186
END
BEGIN _bb1188
BEGIN _bb1190
BUILTIN _bb1191 "Atomicity"
list args _bb1191
END
get _bb1193 bb logger
get _bb1192 _bb1193 ok
call _bb1189 _bb1190 _bb1192
END
catch # _bbmacro22 _bb1178 _bb1188
BEGIN _bb1196
BEGIN _bb1199
BEGIN _bb1200
BEGIN _bb1202
list args B
END
call _bb1201 _bb1202 extern2
return # _bb1201
END
IS foo1 _bb1200
BEGIN _bb1203
BEGIN _bb1205
list args this
END
call _bb1204 _bb1205 extern3
return # _bb1204
END
IS foo2 _bb1203
BEGIN _bb1206
get _bb1208 B foo1
call _bb1207 # _bb1208
return # _bb1207
END
IS foo3 _bb1206
return # this
END
new A _bb1199
final # A
BEGIN _bb1211
BEGIN _bb1212
BEGIN _bb1214
list args A
END
call _bb1213 _bb1214 extern2
return # _bb1213
END
IS foo1 _bb1212
BEGIN _bb1215
BEGIN _bb1217
list args this
END
call _bb1216 _bb1217 extern3
return # _bb1216
END
IS foo2 _bb1215
BEGIN _bb1218
BUILTIN _bb1219 I1
return # _bb1219
END
IS foo3 _bb1218
return # this
END
new B _bb1211
final # B
BEGIN _bb1220
next obj args
get _bb1222 obj foo1
call _bb1221 # _bb1222
return # _bb1221
END
IS extern1 _bb1220
final # extern1
BEGIN _bb1223
next obj args
get _bb1225 obj foo2
call _bb1224 # _bb1225
return # _bb1224
END
IS extern2 _bb1223
final # extern2
BEGIN _bb1226
next obj args
get _bb1228 obj foo3
call _bb1227 # _bb1228
return # _bb1227
END
IS extern3 _bb1226
final # extern3
BEGIN _bb1229
BUILTIN _bb1230 "Assertion failed"
fail # _bb1230
END
BUILTIN _bb1232 Bfalse
BUILTIN _bb1234 I1
BEGIN _bb1236
list args A
END
call _bb1235 _bb1236 extern1
eq _bb1233 _bb1235 _bb1234
eq _bb1231 _bb1233 _bb1232
if # _bb1231 _bb1229
return # #
END
try _bbmacro24 _bb1196
BEGIN _bb1237
BEGIN _bb1239
str _bb1241 _bbmacro24
BUILTIN _bb1243 "\n"
BUILTIN _bb1244 "No deadlock"
add _bb1242 _bb1244 _bb1243
add _bb1240 _bb1242 _bb1241
list args _bb1240
END
get _bb1246 bb logger
get _bb1245 _bb1246 fail
call _bb1238 _bb1239 _bb1245
END
BEGIN _bb1247
BEGIN _bb1249
BUILTIN _bb1250 "No deadlock"
list args _bb1250
END
get _bb1252 bb logger
get _bb1251 _bb1252 ok
call _bb1248 _bb1249 _bb1251
END
catch # _bbmacro24 _bb1237 _bb1247
BEGIN _bb1255
BUILTIN _bb1256 "bb://.cache/database.db"
sqlite db _bb1256
BUILTIN _bb1259 "CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY, name TEXT, age INTEGER);"
at _bb1258 db _bb1259
BUILTIN n I100000
time start
BUILTIN _bb1263 "BEGIN TRANSACTION;"
at _bb1262 db _bb1263
range _bb1264 n
iter _bbmacro26 _bb1264
BEGIN _bb1266
next _bb1267 _bbmacro26
AS i _bb1267
exists _bb1268 i
END
BEGIN _bb1269
BUILTIN _bb1272 ");"
BUILTIN _bb1276 I10
mod _bb1275 i _bb1276
BUILTIN _bb1277 I20
add _bb1274 _bb1277 _bb1275
str _bb1278 _bb1274
BUILTIN _bb1280 "', "
str _bb1282 i
BUILTIN _bb1283 "INSERT INTO users (name, age) VALUES ('User"
add _bb1281 _bb1283 _bb1282
add _bb1279 _bb1281 _bb1280
add _bb1273 _bb1279 _bb1278
add _bb1271 _bb1273 _bb1272
at _bb1270 db _bb1271
BUILTIN _bb1286 ";"
str _bb1288 i
BUILTIN _bb1289 "SELECT * FROM users WHERE id = "
add _bb1287 _bb1289 _bb1288
add _bb1285 _bb1287 _bb1286
at _bb1284 db _bb1285
BUILTIN _bb1292 ";"
str _bb1294 i
BUILTIN _bb1295 "UPDATE users SET age = age + 1 WHERE id = "
add _bb1293 _bb1295 _bb1294
add _bb1291 _bb1293 _bb1292
at _bb1290 db _bb1291
END
while # _bb1266 _bb1269
BUILTIN _bb1297 "COMMIT;"
at _bb1296 db _bb1297
time _bb1299
sub eta _bb1299 start
BEGIN _bb1300
BUILTIN _bb1301 "Assertion failed"
fail # _bb1301
END
BUILTIN _bb1303 Bfalse
BUILTIN _bb1305 F1.5
lt _bb1304 eta _bb1305
eq _bb1302 _bb1304 _bb1303
if # _bb1302 _bb1300
BEGIN _bb1306
BUILTIN _bb1307 "Assertion failed"
fail # _bb1307
END
BUILTIN _bb1309 Bfalse
BUILTIN _bb1313 "SELECT * FROM users;"
at _bb1312 db _bb1313
len _bb1311 _bb1312
eq _bb1310 n _bb1311
eq _bb1308 _bb1310 _bb1309
if # _bb1308 _bb1306
BUILTIN _bb1315 "DELETE FROM users;"
at _bb1314 db _bb1315
return # #
END
try _bbmacro25 _bb1255
BEGIN _bb1316
BEGIN _bb1318
str _bb1320 _bbmacro25
BUILTIN _bb1322 "\n"
BUILTIN _bb1323 "Database"
add _bb1321 _bb1323 _bb1322
add _bb1319 _bb1321 _bb1320
list args _bb1319
END
get _bb1325 bb logger
get _bb1324 _bb1325 fail
call _bb1317 _bb1318 _bb1324
END
BEGIN _bb1326
BEGIN _bb1328
BUILTIN _bb1329 "Database"
list args _bb1329
END
get _bb1331 bb logger
get _bb1330 _bb1331 ok
call _bb1327 _bb1328 _bb1330
END
catch # _bbmacro25 _bb1316 _bb1326
