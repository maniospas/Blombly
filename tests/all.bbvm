BEGIN _bb16
BEGIN _bb19
BUILTIN red "\e[0;31m"
final # red
BUILTIN green "\e[0;32m"
final # green
BUILTIN reset "\e[0m"
final # reset
return # this
END
new ansi _bb19
final # ansi
BEGIN _bb39
BEGIN _bb40
next element args
BEGIN _bb43
get _bb44 this element
IS .element _bb44
BEGIN _bb45
next A args
get _bb46 this .element
IS ..element _bb46
push # A ..element
return # A
END
IS call _bb45
return # this
END
new _bb41 _bb43
return # _bb41
END
IS toback _bb40
final # toback
return # this
END
new collection _bb39
final # collection
BEGIN _bb64
BEGIN _bb65
next text args
str text text
BUILTIN _bb67 ""
str _bb69 text
BUILTIN _bb71 "  ] "
get _bb74 bb ansi
get _bb73 _bb74 reset
str _bb75 _bb73
BUILTIN _bb77 "ok"
get _bb80 bb ansi
get _bb79 _bb80 green
str _bb81 _bb79
BUILTIN _bb82 "[  "
add _bb78 _bb82 _bb81
add _bb76 _bb78 _bb77
add _bb72 _bb76 _bb75
add _bb70 _bb72 _bb71
add _bb68 _bb70 _bb69
add _bb66 _bb68 _bb67
print # _bb66
END
IS ok _bb65
final # ok
BEGIN _bb83
next text args
str text text
BUILTIN _bb85 ""
str _bb87 text
BUILTIN _bb89 " ] "
get _bb92 bb ansi
get _bb91 _bb92 reset
str _bb93 _bb91
BUILTIN _bb95 "fail"
get _bb98 bb ansi
get _bb97 _bb98 red
str _bb99 _bb97
BUILTIN _bb100 "[ "
add _bb96 _bb100 _bb99
add _bb94 _bb96 _bb95
add _bb90 _bb94 _bb93
add _bb88 _bb90 _bb89
add _bb86 _bb88 _bb87
add _bb84 _bb86 _bb85
print # _bb84
END
IS fail _bb83
final # fail
return # this
END
new logger _bb64
final # logger
BEGIN _bb171
BEGIN _bb172
next value args
str value value
return # value
END
IS call _bb172
BEGIN _bb218
next query args
str query query
BEGIN _bb221
get _bb222 this query
IS .query _bb222
BEGIN _bb223
BUILTIN _bb224 "Assertion failed"
fail # _bb224
END
BUILTIN _bb226 Bfalse
BUILTIN _bb228 I0
len _bb229 args
eq _bb227 _bb229 _bb228
eq _bb225 _bb227 _bb226
if # _bb225 _bb223
BEGIN _bb230
next search args
str search search
get _bb231 this .query
IS ..query _bb231
BEGIN _bb232
BUILTIN _bb233 "Assertion failed"
fail # _bb233
END
BUILTIN _bb235 Bfalse
BUILTIN _bb237 I0
len _bb238 args
eq _bb236 _bb238 _bb237
eq _bb234 _bb236 _bb235
if # _bb234 _bb232
IS query ..query
len nsearch search
len nquery query
BEGIN _bb241
BUILTIN _bb242 Bfalse
return # _bb242
END
lt _bb243 nsearch nquery
if # _bb243 _bb241
range _bb244 nquery
iter _bbmacro2 _bb244
BEGIN _bb246
next _bb247 _bbmacro2
AS i _bb247
exists _bb248 i
END
BEGIN _bb249
BEGIN _bb250
BUILTIN _bb251 Bfalse
return # _bb251
END
at _bb253 search i
at _bb254 query i
neq _bb252 _bb254 _bb253
if # _bb252 _bb250
END
while # _bb246 _bb249
BUILTIN _bb255 Btrue
return # _bb255
END
IS call _bb230
return # this
END
new _bb219 _bb221
return # _bb219
END
IS starts _bb218
final # starts
BEGIN _bb256
next query args
str query query
BEGIN _bb259
get _bb260 this query
IS .query _bb260
BEGIN _bb261
BUILTIN _bb262 "Assertion failed"
fail # _bb262
END
BUILTIN _bb264 Bfalse
BUILTIN _bb266 I0
len _bb267 args
eq _bb265 _bb267 _bb266
eq _bb263 _bb265 _bb264
if # _bb263 _bb261
BEGIN _bb268
next search args
str search search
get _bb269 this .query
IS ..query _bb269
BEGIN _bb270
BUILTIN _bb271 "Assertion failed"
fail # _bb271
END
BUILTIN _bb273 Bfalse
BUILTIN _bb275 I0
len _bb276 args
eq _bb274 _bb276 _bb275
eq _bb272 _bb274 _bb273
if # _bb272 _bb270
IS query ..query
len nsearch search
len nquery query
BEGIN _bb279
BUILTIN _bb280 Bfalse
return # _bb280
END
lt _bb281 nsearch nquery
if # _bb281 _bb279
range _bb282 nquery
iter _bbmacro3 _bb282
BEGIN _bb284
next _bb285 _bbmacro3
AS i _bb285
exists _bb286 i
END
BEGIN _bb287
BEGIN _bb288
BUILTIN _bb289 Bfalse
return # _bb289
END
sub _bb293 nsearch nquery
add _bb292 _bb293 i
at _bb291 search _bb292
at _bb294 query i
neq _bb290 _bb294 _bb291
if # _bb290 _bb288
END
while # _bb284 _bb287
BUILTIN _bb295 Btrue
return # _bb295
END
IS call _bb268
return # this
END
new _bb257 _bb259
return # _bb257
END
IS ends _bb256
final # ends
BEGIN _bb296
next query args
str query query
BEGIN _bb299
get _bb300 this query
IS .query _bb300
BEGIN _bb301
BUILTIN _bb302 "Assertion failed"
fail # _bb302
END
BUILTIN _bb304 Bfalse
BUILTIN _bb306 I0
len _bb307 args
eq _bb305 _bb307 _bb306
eq _bb303 _bb305 _bb304
if # _bb303 _bb301
BEGIN _bb308
BUILTIN pos I0
END
BEGIN _bb312
IS pos pos
return # #
END
try _bb310 _bb312
catch # _bb310 _bb308
BEGIN _bb313
next search args
str search search
get _bb314 this .query
IS ..query _bb314
BEGIN _bb315
BUILTIN _bb316 "Assertion failed"
fail # _bb316
END
BUILTIN _bb318 Bfalse
BUILTIN _bb320 I0
len _bb321 args
eq _bb319 _bb321 _bb320
eq _bb317 _bb319 _bb318
if # _bb317 _bb315
IS query ..query
get _bb322 this pos
IS pos _bb322
len nsearch search
len nquery query
BUILTIN _bb327 I1
sub _bb328 nsearch nquery
add _bb326 _bb328 _bb327
range _bb325 pos _bb326
iter _bbmacro4 _bb325
BEGIN _bb330
next _bb331 _bbmacro4
AS i _bb331
exists _bb332 i
END
BEGIN _bb333
range _bb334 nquery
iter _bbmacro5 _bb334
BEGIN _bb338
BEGIN _bb339
next _bb340 _bbmacro5
AS j _bb340
exists _bb341 j
END
BEGIN _bb342
BEGIN _bb343
BUILTIN _bb344 Btrue
return # _bb344
END
add _bb347 i j
at _bb346 search _bb347
at _bb348 query j
neq _bb345 _bb348 _bb346
if # _bb345 _bb343
END
while # _bb339 _bb342
END
try different _bb338
BEGIN _bb349
return # i
END
catch # different _bb349
END
while # _bb330 _bb333
return # nsearch
END
IS call _bb313
return # this
END
new _bb297 _bb299
return # _bb297
END
IS index _bb296
final # index
BEGIN _bb350
next query args
str query query
BEGIN _bb353
get _bb354 this query
IS .query _bb354
BEGIN _bb355
BUILTIN _bb356 "Assertion failed"
fail # _bb356
END
BUILTIN _bb358 Bfalse
BUILTIN _bb360 I0
len _bb361 args
eq _bb359 _bb361 _bb360
eq _bb357 _bb359 _bb358
if # _bb357 _bb355
BEGIN _bb363
END
default # _bb363
BEGIN _bb365
next search args
str search search
get _bb366 this .query
IS ..query _bb366
IS query ..query
len nsearch search
len nquery query
BEGIN _bb369
BUILTIN _bb370 "Cannot split on a zero-length string"
fail # _bb370
END
BUILTIN _bb372 I0
eq _bb371 nquery _bb372
if # _bb371 _bb369
list ret
BUILTIN pos I0
BEGIN _bb375
lt _bb376 pos nsearch
END
BEGIN _bb377
IS prev_pos pos
BEGIN _bb379
list args search
END
BEGIN _bb382
list args query
IS pos pos
END
get _bb384 bb string
get _bb383 _bb384 index
call _bb381 _bb382 _bb383
call _bb378 _bb379 _bb381
IS pos _bb378
range _bb386 prev_pos pos
at _bb385 search _bb386
IS s _bb385
push # ret s
add pos pos nquery
END
while # _bb375 _bb377
return # ret
END
IS call _bb365
return # this
END
new _bb351 _bb353
return # _bb351
END
IS split _bb350
final # split
return # this
END
new string _bb171
final # string
return # this
END
new bb _bb16
final # bb
BEGIN _bb389
BUILTIN _bb390 I1
BUILTIN _bb391 I2
BUILTIN _bb392 I3
BUILTIN _bb393 I4
list A _bb390 _bb391 _bb392 _bb393
BEGIN _bb395
BUILTIN _bb396 "Assertion failed"
fail # _bb396
END
BUILTIN _bb398 Bfalse
BUILTIN _bb400 I2
BUILTIN _bb402 I1
at _bb401 A _bb402
eq _bb399 _bb401 _bb400
eq _bb397 _bb399 _bb398
if # _bb397 _bb395
BEGIN _bb403
BUILTIN _bb404 "Assertion failed"
fail # _bb404
END
BUILTIN _bb406 Bfalse
BUILTIN _bb408 I1
next _bb409 A
eq _bb407 _bb409 _bb408
eq _bb405 _bb407 _bb406
if # _bb405 _bb403
BEGIN _bb410
BUILTIN _bb411 "Assertion failed"
fail # _bb411
END
BUILTIN _bb413 Bfalse
BUILTIN _bb415 I2
next _bb416 A
eq _bb414 _bb416 _bb415
eq _bb412 _bb414 _bb413
if # _bb412 _bb410
BEGIN _bb417
BUILTIN _bb418 "Assertion failed"
fail # _bb418
END
BUILTIN _bb420 Bfalse
BUILTIN _bb422 I4
pop _bb423 A
eq _bb421 _bb423 _bb422
eq _bb419 _bb421 _bb420
if # _bb419 _bb417
BEGIN _bb424
BUILTIN _bb425 "Assertion failed"
fail # _bb425
END
BUILTIN _bb427 Bfalse
BUILTIN _bb429 I3
pop _bb430 A
eq _bb428 _bb430 _bb429
eq _bb426 _bb428 _bb427
if # _bb426 _bb424
BEGIN _bb431
BUILTIN _bb432 "Assertion failed"
fail # _bb432
END
BUILTIN _bb434 Bfalse
BUILTIN _bb436 I0
len _bb437 A
eq _bb435 _bb437 _bb436
eq _bb433 _bb435 _bb434
if # _bb433 _bb431
BUILTIN _bb438 I5
push # A _bb438
BEGIN _bb439
BUILTIN _bb440 "Assertion failed"
fail # _bb440
END
BUILTIN _bb442 Bfalse
BUILTIN _bb444 I5
pop _bb445 A
eq _bb443 _bb445 _bb444
eq _bb441 _bb443 _bb442
if # _bb441 _bb439
return # #
END
try _bbmacro6 _bb389
BEGIN _bb446
BEGIN _bb448
str _bb450 _bbmacro6
BUILTIN _bb452 "\n"
BUILTIN _bb453 "List"
add _bb451 _bb453 _bb452
add _bb449 _bb451 _bb450
list args _bb449
END
get _bb455 bb logger
get _bb454 _bb455 fail
call _bb447 _bb448 _bb454
END
BEGIN _bb456
BEGIN _bb458
BUILTIN _bb459 "List"
list args _bb459
END
get _bb461 bb logger
get _bb460 _bb461 ok
call _bb457 _bb458 _bb460
END
catch # _bbmacro6 _bb446 _bb456
BEGIN _bb464
BUILTIN s I0
BUILTIN _bb467 I10
range _bb466 _bb467
iter _bbmacro8 _bb466
BEGIN _bb469
next _bb470 _bbmacro8
AS i _bb470
exists _bb471 i
END
BEGIN _bb472
add s s i
END
while # _bb469 _bb472
BEGIN _bb473
BUILTIN _bb474 "Assertion failed"
fail # _bb474
END
BUILTIN _bb476 Bfalse
BUILTIN _bb478 I45
eq _bb477 s _bb478
eq _bb475 _bb477 _bb476
if # _bb475 _bb473
return # #
END
try _bbmacro7 _bb464
BEGIN _bb479
BEGIN _bb481
str _bb483 _bbmacro7
BUILTIN _bb485 "\n"
BUILTIN _bb486 "Range"
add _bb484 _bb486 _bb485
add _bb482 _bb484 _bb483
list args _bb482
END
get _bb488 bb logger
get _bb487 _bb488 fail
call _bb480 _bb481 _bb487
END
BEGIN _bb489
BEGIN _bb491
BUILTIN _bb492 "Range"
list args _bb492
END
get _bb494 bb logger
get _bb493 _bb494 ok
call _bb490 _bb491 _bb493
END
catch # _bbmacro7 _bb479 _bb489
BEGIN _bb497
BUILTIN _bb498 I1
BUILTIN _bb499 I2
BUILTIN _bb500 I3
list A _bb498 _bb499 _bb500
BUILTIN s I0
iter _bbmacro10 A
BEGIN _bb504
next _bb505 _bbmacro10
AS x _bb505
exists _bb506 x
END
BEGIN _bb507
add s s x
END
while # _bb504 _bb507
iter it A
BEGIN _bb509
next _bb510 it
AS x _bb510
exists _bb511 x
END
BEGIN _bb512
sub s s x
END
while # _bb509 _bb512
BEGIN _bb513
BUILTIN _bb514 "Assertion failed"
fail # _bb514
END
BUILTIN _bb516 Bfalse
BUILTIN _bb518 I0
eq _bb517 s _bb518
eq _bb515 _bb517 _bb516
if # _bb515 _bb513
return # #
END
try _bbmacro9 _bb497
BEGIN _bb519
BEGIN _bb521
str _bb523 _bbmacro9
BUILTIN _bb525 "\n"
BUILTIN _bb526 "Iteration"
add _bb524 _bb526 _bb525
add _bb522 _bb524 _bb523
list args _bb522
END
get _bb528 bb logger
get _bb527 _bb528 fail
call _bb520 _bb521 _bb527
END
BEGIN _bb529
BEGIN _bb531
BUILTIN _bb532 "Iteration"
list args _bb532
END
get _bb534 bb logger
get _bb533 _bb534 ok
call _bb530 _bb531 _bb533
END
catch # _bbmacro9 _bb519 _bb529
BEGIN _bb537
BEGIN _bb538
get _bb539 this x
IS .x _bb539
BUILTIN x I0
BEGIN _bb541
get _bb542 this x
return # _bb542
END
IS xthis _bb541
BEGIN _bb543
get _bb544 this .x
IS ..x _bb544
return # ..x
END
IS xclosure _bb543
END
IS Struct _bb538
BUILTIN x I1
BEGIN _bb548
inline _bb549 Struct
return # this
END
new struct _bb548
BUILTIN x I2
BEGIN _bb551
BUILTIN _bb552 "Assertion failed"
fail # _bb552
END
BUILTIN _bb554 Bfalse
BUILTIN _bb556 I0
get _bb558 struct xthis
call _bb557 # _bb558
eq _bb555 _bb557 _bb556
eq _bb553 _bb555 _bb554
if # _bb553 _bb551
BEGIN _bb559
BUILTIN _bb560 "Assertion failed"
fail # _bb560
END
BUILTIN _bb562 Bfalse
BUILTIN _bb564 I1
get _bb566 struct xclosure
call _bb565 # _bb566
eq _bb563 _bb565 _bb564
eq _bb561 _bb563 _bb562
if # _bb561 _bb559
return # #
END
try _bbmacro11 _bb537
BEGIN _bb567
BEGIN _bb569
str _bb571 _bbmacro11
BUILTIN _bb573 "\n"
BUILTIN _bb574 "Closure"
add _bb572 _bb574 _bb573
add _bb570 _bb572 _bb571
list args _bb570
END
get _bb576 bb logger
get _bb575 _bb576 fail
call _bb568 _bb569 _bb575
END
BEGIN _bb577
BEGIN _bb579
BUILTIN _bb580 "Closure"
list args _bb580
END
get _bb582 bb logger
get _bb581 _bb582 ok
call _bb578 _bb579 _bb581
END
catch # _bbmacro11 _bb567 _bb577
BEGIN _bb585
BUILTIN _bb586 I1
BUILTIN _bb587 I2
BUILTIN _bb588 I3
list A _bb586 _bb587 _bb588
BEGIN _bb591
list args A
END
BEGIN _bb594
BUILTIN _bb595 I4
list args _bb595
END
get _bb597 bb collection
get _bb596 _bb597 toback
call _bb593 _bb594 _bb596
call _bb590 _bb591 _bb593
IS A _bb590
BEGIN _bb598
BUILTIN _bb599 "Assertion failed"
fail # _bb599
END
BUILTIN _bb601 Bfalse
BUILTIN _bb603 I4
pop _bb604 A
eq _bb602 _bb604 _bb603
eq _bb600 _bb602 _bb601
if # _bb600 _bb598
return # #
END
try _bbmacro12 _bb585
BEGIN _bb605
BEGIN _bb607
str _bb609 _bbmacro12
BUILTIN _bb611 "\n"
BUILTIN _bb612 "Collection"
add _bb610 _bb612 _bb611
add _bb608 _bb610 _bb609
list args _bb608
END
get _bb614 bb logger
get _bb613 _bb614 fail
call _bb606 _bb607 _bb613
END
BEGIN _bb615
BEGIN _bb617
BUILTIN _bb618 "Collection"
list args _bb618
END
get _bb620 bb logger
get _bb619 _bb620 ok
call _bb616 _bb617 _bb619
END
catch # _bbmacro12 _bb605 _bb615
BEGIN _bb623
BUILTIN A "I like banana!"
BEGIN _bb625
BUILTIN _bb626 "Assertion failed"
fail # _bb626
END
BUILTIN _bb628 Bfalse
BEGIN _bb630
list args A
END
BEGIN _bb633
BUILTIN _bb634 "I like"
list args _bb634
END
get _bb636 bb string
get _bb635 _bb636 starts
call _bb632 _bb633 _bb635
call _bb629 _bb630 _bb632
eq _bb627 _bb629 _bb628
if # _bb627 _bb625
BEGIN _bb637
BUILTIN _bb638 "Assertion failed"
fail # _bb638
END
BUILTIN _bb640 Bfalse
BEGIN _bb642
list args A
END
BEGIN _bb645
BUILTIN _bb646 "banana!"
list args _bb646
END
get _bb648 bb string
get _bb647 _bb648 ends
call _bb644 _bb645 _bb647
call _bb641 _bb642 _bb644
eq _bb639 _bb641 _bb640
if # _bb639 _bb637
BEGIN _bb649
BUILTIN _bb650 "Assertion failed"
fail # _bb650
END
BUILTIN _bb652 Bfalse
BUILTIN _bb654 I3
BEGIN _bb657
list args A
END
BEGIN _bb660
BUILTIN _bb661 " "
list args _bb661
END
get _bb663 bb string
get _bb662 _bb663 split
call _bb659 _bb660 _bb662
call _bb656 _bb657 _bb659
len _bb655 _bb656
eq _bb653 _bb655 _bb654
eq _bb651 _bb653 _bb652
if # _bb651 _bb649
BEGIN _bb664
BUILTIN _bb665 "Assertion failed"
fail # _bb665
END
BUILTIN _bb667 Bfalse
BUILTIN _bb669 I2
BEGIN _bb671
list args A
END
BEGIN _bb674
BUILTIN _bb675 "like"
list args _bb675
END
get _bb677 bb string
get _bb676 _bb677 index
call _bb673 _bb674 _bb676
call _bb670 _bb671 _bb673
eq _bb668 _bb670 _bb669
eq _bb666 _bb668 _bb667
if # _bb666 _bb664
BEGIN _bb678
BUILTIN _bb679 "Assertion failed"
fail # _bb679
END
BUILTIN _bb681 Bfalse
BUILTIN _bb683 I10
BEGIN _bb685
list args A
END
BEGIN _bb688
BUILTIN _bb689 "an"
list args _bb689
BUILTIN pos I9
END
get _bb692 bb string
get _bb691 _bb692 index
call _bb687 _bb688 _bb691
call _bb684 _bb685 _bb687
eq _bb682 _bb684 _bb683
eq _bb680 _bb682 _bb681
if # _bb680 _bb678
return # #
END
try _bbmacro13 _bb623
BEGIN _bb693
BEGIN _bb695
str _bb697 _bbmacro13
BUILTIN _bb699 "\n"
BUILTIN _bb700 "String"
add _bb698 _bb700 _bb699
add _bb696 _bb698 _bb697
list args _bb696
END
get _bb702 bb logger
get _bb701 _bb702 fail
call _bb694 _bb695 _bb701
END
BEGIN _bb703
BEGIN _bb705
BUILTIN _bb706 "String"
list args _bb706
END
get _bb708 bb logger
get _bb707 _bb708 ok
call _bb704 _bb705 _bb707
END
catch # _bbmacro13 _bb693 _bb703
