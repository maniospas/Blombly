BEGIN _bb30
BEGIN _bb33
BUILTIN lightred "\e[0;91m"
final # lightred
BUILTIN lightgreen "\e[0;92m"
final # lightgreen
BUILTIN reset "\e[0m"
final # reset
return # this
END
new ansi _bb33
final # ansi
BEGIN _bb53
BEGIN _bb54
next element args
BEGIN _bb57
get _bb58 this element
IS .element _bb58
BEGIN _bb59
next A args
get _bb60 this .element
IS ..element _bb60
push # A ..element
return # A
END
IS call _bb59
return # this
END
new _bb55 _bb57
return # _bb55
END
IS toback _bb54
final # toback
BEGIN _bb61
next func args
BEGIN _bb64
get _bb65 this func
IS .func _bb65
BEGIN _bb66
next A args
get _bb67 this .func
IS ..func _bb67
list ret
iter _bbmacro0 A
BEGIN _bb70
next _bb71 _bbmacro0
AS x _bb71
exists _bb72 x
END
BEGIN _bb73
BEGIN _bb75
list args x
END
call _bb74 _bb75 ..func
push # ret _bb74
END
while # _bb70 _bb73
return # ret
END
IS call _bb66
return # this
END
new _bb62 _bb64
return # _bb62
END
IS transform _bb61
final # transform
return # this
END
new collection _bb53
final # collection
BEGIN _bb76
next path args
str path path
BEGIN _bb79
sqlite connector path
return # this
END
new _bb77 _bb79
return # _bb77
END
IS db _bb76
final # db
BEGIN _bb190
BEGIN _bb191
next text args
str text text
BUILTIN _bb193 ""
str _bb195 text
BUILTIN _bb197 "  ] "
get _bb200 bb ansi
get _bb199 _bb200 reset
str _bb201 _bb199
BUILTIN _bb203 "ok"
get _bb206 bb ansi
get _bb205 _bb206 lightgreen
str _bb207 _bb205
BUILTIN _bb208 "[  "
add _bb204 _bb208 _bb207
add _bb202 _bb204 _bb203
add _bb198 _bb202 _bb201
add _bb196 _bb198 _bb197
add _bb194 _bb196 _bb195
add _bb192 _bb194 _bb193
print # _bb192
END
IS ok _bb191
final # ok
BEGIN _bb209
next text args
str text text
BUILTIN _bb211 ""
str _bb213 text
BUILTIN _bb215 " ] "
get _bb218 bb ansi
get _bb217 _bb218 reset
str _bb219 _bb217
BUILTIN _bb221 "fail"
get _bb224 bb ansi
get _bb223 _bb224 lightred
str _bb225 _bb223
BUILTIN _bb226 "[ "
add _bb222 _bb226 _bb225
add _bb220 _bb222 _bb221
add _bb216 _bb220 _bb219
add _bb214 _bb216 _bb215
add _bb212 _bb214 _bb213
add _bb210 _bb212 _bb211
print # _bb210
END
IS fail _bb209
final # fail
return # this
END
new logger _bb190
final # logger
BEGIN _bb282
BEGIN _bb283
next path args
str path path
file path path
return # path
END
IS call _bb283
BEGIN _bb291
next path args
str path path
file path path
BUILTIN ret ""
iter _bbmacro2 path
BEGIN _bb294
next _bb295 _bbmacro2
AS line _bb295
exists _bb296 line
END
BEGIN _bb297
BEGIN _bb298
BUILTIN _bb299 "\n"
add ret ret _bb299
END
len _bb301 ret
bool _bb300 _bb301
if # _bb300 _bb298
add ret ret line
END
while # _bb294 _bb297
return # ret
END
IS read _bb291
final # read
return # this
END
new os _bb282
final # os
BEGIN _bb350
BEGIN _bb351
next value args
str value value
return # value
END
IS call _bb351
BEGIN _bb414
next query args
str query query
BEGIN _bb417
get _bb418 this query
IS .query _bb418
BEGIN _bb419
BUILTIN _bb420 "Assertion failed"
fail # _bb420
END
BUILTIN _bb422 Bfalse
BUILTIN _bb424 I0
len _bb425 args
eq _bb423 _bb425 _bb424
eq _bb421 _bb423 _bb422
if # _bb421 _bb419
BEGIN _bb426
next search args
str search search
get _bb427 this .query
IS ..query _bb427
BEGIN _bb428
BUILTIN _bb429 "Assertion failed"
fail # _bb429
END
BUILTIN _bb431 Bfalse
BUILTIN _bb433 I0
len _bb434 args
eq _bb432 _bb434 _bb433
eq _bb430 _bb432 _bb431
if # _bb430 _bb428
IS query ..query
len nsearch search
len nquery query
BEGIN _bb437
BUILTIN _bb438 Bfalse
return # _bb438
END
lt _bb439 nsearch nquery
if # _bb439 _bb437
range _bb440 nquery
iter _bbmacro4 _bb440
BEGIN _bb442
next _bb443 _bbmacro4
AS i _bb443
exists _bb444 i
END
BEGIN _bb445
BEGIN _bb446
BUILTIN _bb447 Bfalse
return # _bb447
END
at _bb449 search i
at _bb450 query i
neq _bb448 _bb450 _bb449
if # _bb448 _bb446
END
while # _bb442 _bb445
BUILTIN _bb451 Btrue
return # _bb451
END
IS call _bb426
return # this
END
new _bb415 _bb417
return # _bb415
END
IS starts _bb414
final # starts
BEGIN _bb452
next query args
str query query
BEGIN _bb455
get _bb456 this query
IS .query _bb456
BEGIN _bb457
BUILTIN _bb458 "Assertion failed"
fail # _bb458
END
BUILTIN _bb460 Bfalse
BUILTIN _bb462 I0
len _bb463 args
eq _bb461 _bb463 _bb462
eq _bb459 _bb461 _bb460
if # _bb459 _bb457
BEGIN _bb464
next search args
str search search
get _bb465 this .query
IS ..query _bb465
BEGIN _bb466
BUILTIN _bb467 "Assertion failed"
fail # _bb467
END
BUILTIN _bb469 Bfalse
BUILTIN _bb471 I0
len _bb472 args
eq _bb470 _bb472 _bb471
eq _bb468 _bb470 _bb469
if # _bb468 _bb466
IS query ..query
len nsearch search
len nquery query
BEGIN _bb475
BUILTIN _bb476 Bfalse
return # _bb476
END
lt _bb477 nsearch nquery
if # _bb477 _bb475
range _bb478 nquery
iter _bbmacro5 _bb478
BEGIN _bb480
next _bb481 _bbmacro5
AS i _bb481
exists _bb482 i
END
BEGIN _bb483
BEGIN _bb484
BUILTIN _bb485 Bfalse
return # _bb485
END
sub _bb489 nsearch nquery
add _bb488 _bb489 i
at _bb487 search _bb488
at _bb490 query i
neq _bb486 _bb490 _bb487
if # _bb486 _bb484
END
while # _bb480 _bb483
BUILTIN _bb491 Btrue
return # _bb491
END
IS call _bb464
return # this
END
new _bb453 _bb455
return # _bb453
END
IS ends _bb452
final # ends
BEGIN _bb492
next query args
str query query
BEGIN _bb495
get _bb496 this query
IS .query _bb496
BEGIN _bb497
BUILTIN _bb498 "Assertion failed"
fail # _bb498
END
BUILTIN _bb500 Bfalse
BUILTIN _bb502 I0
len _bb503 args
eq _bb501 _bb503 _bb502
eq _bb499 _bb501 _bb500
if # _bb499 _bb497
BEGIN _bb504
BUILTIN pos I0
END
BEGIN _bb508
IS pos pos
return # #
END
try _bb506 _bb508
catch # _bb506 _bb504
BEGIN _bb509
next search args
str search search
get _bb510 this .query
IS ..query _bb510
BEGIN _bb511
BUILTIN _bb512 "Assertion failed"
fail # _bb512
END
BUILTIN _bb514 Bfalse
BUILTIN _bb516 I0
len _bb517 args
eq _bb515 _bb517 _bb516
eq _bb513 _bb515 _bb514
if # _bb513 _bb511
IS query ..query
get _bb518 this pos
IS pos _bb518
len nsearch search
len nquery query
BUILTIN _bb523 I1
sub _bb524 nsearch nquery
add _bb522 _bb524 _bb523
range _bb521 pos _bb522
iter _bbmacro6 _bb521
BEGIN _bb526
next _bb527 _bbmacro6
AS i _bb527
exists _bb528 i
END
BEGIN _bb529
range _bb530 nquery
iter _bbmacro7 _bb530
BEGIN _bb534
BEGIN _bb535
next _bb536 _bbmacro7
AS j _bb536
exists _bb537 j
END
BEGIN _bb538
BEGIN _bb539
BUILTIN _bb540 Btrue
return # _bb540
END
add _bb543 i j
at _bb542 search _bb543
at _bb544 query j
neq _bb541 _bb544 _bb542
if # _bb541 _bb539
END
while # _bb535 _bb538
END
try different _bb534
BEGIN _bb545
return # i
END
catch # different _bb545
END
while # _bb526 _bb529
return # nsearch
END
IS call _bb509
return # this
END
new _bb493 _bb495
return # _bb493
END
IS index _bb492
final # index
BEGIN _bb546
next query args
str query query
BEGIN _bb549
get _bb550 this query
IS .query _bb550
BEGIN _bb551
BUILTIN _bb552 "Assertion failed"
fail # _bb552
END
BUILTIN _bb554 Bfalse
BUILTIN _bb556 I0
len _bb557 args
eq _bb555 _bb557 _bb556
eq _bb553 _bb555 _bb554
if # _bb553 _bb551
BEGIN _bb559
END
default # _bb559
BEGIN _bb561
next search args
str search search
get _bb562 this .query
IS ..query _bb562
IS query ..query
len nsearch search
len nquery query
BEGIN _bb565
BUILTIN _bb566 "Cannot split on a zero-length string"
fail # _bb566
END
BUILTIN _bb568 I0
eq _bb567 nquery _bb568
if # _bb567 _bb565
list ret
BUILTIN pos I0
BEGIN _bb571
lt _bb572 pos nsearch
END
BEGIN _bb573
IS prev_pos pos
BEGIN _bb575
list args search
END
BEGIN _bb578
list args query
IS pos pos
END
get _bb580 bb string
get _bb579 _bb580 index
call _bb577 _bb578 _bb579
call _bb574 _bb575 _bb577
IS pos _bb574
range _bb582 prev_pos pos
at _bb581 search _bb582
IS s _bb581
push # ret s
add pos pos nquery
END
while # _bb571 _bb573
return # ret
END
IS call _bb561
return # this
END
new _bb547 _bb549
return # _bb547
END
IS split _bb546
final # split
return # this
END
new string _bb350
final # string
return # this
END
new bb _bb30
final # bb
BEGIN _bb585
BUILTIN A "0"
BUILTIN _bb587 "1"
add A A _bb587
BUILTIN _bb588 "2"
add A A _bb588
BUILTIN _bb589 "3"
add A A _bb589
BUILTIN _bb590 "4"
add A A _bb590
BUILTIN _bb591 "5"
add A A _bb591
BUILTIN _bb592 "6"
add A A _bb592
BUILTIN _bb593 "7"
add A A _bb593
BUILTIN _bb594 "8"
add A A _bb594
BUILTIN _bb595 "9"
add A A _bb595
BEGIN _bb596
BUILTIN _bb597 "Assertion failed"
fail # _bb597
END
BUILTIN _bb599 Bfalse
BUILTIN _bb601 "0123456789"
eq _bb600 A _bb601
eq _bb598 _bb600 _bb599
if # _bb598 _bb596
BEGIN _bb602
BUILTIN _bb603 "Assertion failed"
fail # _bb603
END
BUILTIN _bb605 Bfalse
BUILTIN _bb607 I10
len _bb608 A
eq _bb606 _bb608 _bb607
eq _bb604 _bb606 _bb605
if # _bb604 _bb602
return # #
END
try _bbmacro8 _bb585
BEGIN _bb609
BEGIN _bb611
str _bb613 _bbmacro8
BUILTIN _bb615 "\n"
BUILTIN _bb616 "String add"
add _bb614 _bb616 _bb615
add _bb612 _bb614 _bb613
list args _bb612
END
get _bb618 bb logger
get _bb617 _bb618 fail
call _bb610 _bb611 _bb617
END
BEGIN _bb619
BEGIN _bb621
BUILTIN _bb622 "String add"
list args _bb622
END
get _bb624 bb logger
get _bb623 _bb624 ok
call _bb620 _bb621 _bb623
END
catch # _bbmacro8 _bb609 _bb619
BEGIN _bb627
BUILTIN _bb628 I1
BUILTIN _bb629 I2
BUILTIN _bb630 I3
BUILTIN _bb631 I4
list A _bb628 _bb629 _bb630 _bb631
BEGIN _bb633
BUILTIN _bb634 "Assertion failed"
fail # _bb634
END
BUILTIN _bb636 Bfalse
BUILTIN _bb638 I2
BUILTIN _bb640 I1
at _bb639 A _bb640
eq _bb637 _bb639 _bb638
eq _bb635 _bb637 _bb636
if # _bb635 _bb633
BEGIN _bb641
BUILTIN _bb642 "Assertion failed"
fail # _bb642
END
BUILTIN _bb644 Bfalse
BUILTIN _bb646 I1
next _bb647 A
eq _bb645 _bb647 _bb646
eq _bb643 _bb645 _bb644
if # _bb643 _bb641
BEGIN _bb648
BUILTIN _bb649 "Assertion failed"
fail # _bb649
END
BUILTIN _bb651 Bfalse
BUILTIN _bb653 I2
next _bb654 A
eq _bb652 _bb654 _bb653
eq _bb650 _bb652 _bb651
if # _bb650 _bb648
BEGIN _bb655
BUILTIN _bb656 "Assertion failed"
fail # _bb656
END
BUILTIN _bb658 Bfalse
BUILTIN _bb660 I4
pop _bb661 A
eq _bb659 _bb661 _bb660
eq _bb657 _bb659 _bb658
if # _bb657 _bb655
BEGIN _bb662
BUILTIN _bb663 "Assertion failed"
fail # _bb663
END
BUILTIN _bb665 Bfalse
BUILTIN _bb667 I3
pop _bb668 A
eq _bb666 _bb668 _bb667
eq _bb664 _bb666 _bb665
if # _bb664 _bb662
BEGIN _bb669
BUILTIN _bb670 "Assertion failed"
fail # _bb670
END
BUILTIN _bb672 Bfalse
BUILTIN _bb674 I0
len _bb675 A
eq _bb673 _bb675 _bb674
eq _bb671 _bb673 _bb672
if # _bb671 _bb669
BUILTIN _bb676 I5
push # A _bb676
BEGIN _bb677
BUILTIN _bb678 "Assertion failed"
fail # _bb678
END
BUILTIN _bb680 Bfalse
BUILTIN _bb682 I5
pop _bb683 A
eq _bb681 _bb683 _bb682
eq _bb679 _bb681 _bb680
if # _bb679 _bb677
return # #
END
try _bbmacro9 _bb627
BEGIN _bb684
BEGIN _bb686
str _bb688 _bbmacro9
BUILTIN _bb690 "\n"
BUILTIN _bb691 "List"
add _bb689 _bb691 _bb690
add _bb687 _bb689 _bb688
list args _bb687
END
get _bb693 bb logger
get _bb692 _bb693 fail
call _bb685 _bb686 _bb692
END
BEGIN _bb694
BEGIN _bb696
BUILTIN _bb697 "List"
list args _bb697
END
get _bb699 bb logger
get _bb698 _bb699 ok
call _bb695 _bb696 _bb698
END
catch # _bbmacro9 _bb684 _bb694
BEGIN _bb702
BUILTIN s I0
BUILTIN _bb705 I10
range _bb704 _bb705
iter _bbmacro11 _bb704
BEGIN _bb707
next _bb708 _bbmacro11
AS i _bb708
exists _bb709 i
END
BEGIN _bb710
add s s i
END
while # _bb707 _bb710
BEGIN _bb711
BUILTIN _bb712 "Assertion failed"
fail # _bb712
END
BUILTIN _bb714 Bfalse
BUILTIN _bb716 I45
eq _bb715 s _bb716
eq _bb713 _bb715 _bb714
if # _bb713 _bb711
return # #
END
try _bbmacro10 _bb702
BEGIN _bb717
BEGIN _bb719
str _bb721 _bbmacro10
BUILTIN _bb723 "\n"
BUILTIN _bb724 "Range"
add _bb722 _bb724 _bb723
add _bb720 _bb722 _bb721
list args _bb720
END
get _bb726 bb logger
get _bb725 _bb726 fail
call _bb718 _bb719 _bb725
END
BEGIN _bb727
BEGIN _bb729
BUILTIN _bb730 "Range"
list args _bb730
END
get _bb732 bb logger
get _bb731 _bb732 ok
call _bb728 _bb729 _bb731
END
catch # _bbmacro10 _bb717 _bb727
BEGIN _bb735
BUILTIN _bb736 I1
BUILTIN _bb737 I2
BUILTIN _bb738 I3
list A _bb736 _bb737 _bb738
BUILTIN s I0
iter _bbmacro13 A
BEGIN _bb742
next _bb743 _bbmacro13
AS x _bb743
exists _bb744 x
END
BEGIN _bb745
add s s x
END
while # _bb742 _bb745
iter it A
BEGIN _bb747
next _bb748 it
AS x _bb748
exists _bb749 x
END
BEGIN _bb750
sub s s x
END
while # _bb747 _bb750
BEGIN _bb751
BUILTIN _bb752 "Assertion failed"
fail # _bb752
END
BUILTIN _bb754 Bfalse
BUILTIN _bb756 I0
eq _bb755 s _bb756
eq _bb753 _bb755 _bb754
if # _bb753 _bb751
return # #
END
try _bbmacro12 _bb735
BEGIN _bb757
BEGIN _bb759
str _bb761 _bbmacro12
BUILTIN _bb763 "\n"
BUILTIN _bb764 "Iteration"
add _bb762 _bb764 _bb763
add _bb760 _bb762 _bb761
list args _bb760
END
get _bb766 bb logger
get _bb765 _bb766 fail
call _bb758 _bb759 _bb765
END
BEGIN _bb767
BEGIN _bb769
BUILTIN _bb770 "Iteration"
list args _bb770
END
get _bb772 bb logger
get _bb771 _bb772 ok
call _bb768 _bb769 _bb771
END
catch # _bbmacro12 _bb757 _bb767
BEGIN _bb775
BEGIN _bb776
BEGIN _bb777
get _bb778 this value
return # _bb778
END
IS int _bb777
BEGIN _bb779
next other args
get _bb781 other value
get _bb782 this value
lt _bb780 _bb782 _bb781
return # _bb780
END
IS lt _bb779
BEGIN _bb783
BUILTIN _bb785 ""
get _bb787 this value
str _bb788 _bb787
BUILTIN _bb789 "num "
add _bb786 _bb789 _bb788
add _bb784 _bb786 _bb785
return # _bb784
END
IS str _bb783
END
IS Num _bb776
final # Num
BEGIN _bb790
next x args
BEGIN _bb793
inline _bb794 Num
IS value x
return # this
END
new _bb791 _bb793
return # _bb791
END
IS num _bb790
BUILTIN _bb795 I5
BUILTIN _bb796 I2
BUILTIN _bb797 I3
BUILTIN _bb798 I4
BUILTIN _bb799 I1
list A _bb795 _bb796 _bb797 _bb798 _bb799
BEGIN _bb802
list args A
END
BEGIN _bb805
list args num
END
get _bb807 bb collection
get _bb806 _bb807 transform
call _bb804 _bb805 _bb806
call _bb801 _bb802 _bb804
IS A _bb801
len n A
range _bb809 n
iter _bbmacro15 _bb809
BEGIN _bb811
next _bb812 _bbmacro15
AS i _bb812
exists _bb813 i
END
BEGIN _bb814
BUILTIN _bb817 I1
add _bb816 i _bb817
range _bb815 _bb816 n
iter _bbmacro16 _bb815
BEGIN _bb819
next _bb820 _bbmacro16
AS j _bb820
exists _bb821 j
END
BEGIN _bb822
BEGIN _bb823
at _bb824 A i
IS tmp _bb824
at _bb825 A j
put # A i _bb825
put # A j tmp
END
at _bb827 A i
at _bb828 A j
lt _bb826 _bb828 _bb827
if # _bb826 _bb823
END
while # _bb819 _bb822
END
while # _bb811 _bb814
BEGIN _bb829
BUILTIN _bb830 "Assertion failed"
fail # _bb830
END
BUILTIN _bb832 Bfalse
BUILTIN _bb834 I1
BUILTIN _bb837 I0
at _bb836 A _bb837
int _bb835 _bb836
eq _bb833 _bb835 _bb834
eq _bb831 _bb833 _bb832
if # _bb831 _bb829
return # #
END
try _bbmacro14 _bb775
BEGIN _bb838
BEGIN _bb840
str _bb842 _bbmacro14
BUILTIN _bb844 "\n"
BUILTIN _bb845 "Overload"
add _bb843 _bb845 _bb844
add _bb841 _bb843 _bb842
list args _bb841
END
get _bb847 bb logger
get _bb846 _bb847 fail
call _bb839 _bb840 _bb846
END
BEGIN _bb848
BEGIN _bb850
BUILTIN _bb851 "Overload"
list args _bb851
END
get _bb853 bb logger
get _bb852 _bb853 ok
call _bb849 _bb850 _bb852
END
catch # _bbmacro14 _bb838 _bb848
BEGIN _bb856
BEGIN _bb857
get _bb858 this x
IS .x _bb858
BUILTIN x I0
BEGIN _bb860
get _bb861 this x
return # _bb861
END
IS xthis _bb860
BEGIN _bb862
get _bb863 this .x
IS ..x _bb863
return # ..x
END
IS xclosure _bb862
END
IS Struct _bb857
BUILTIN x I1
BEGIN _bb867
inline _bb868 Struct
return # this
END
new struct _bb867
BUILTIN x I2
BEGIN _bb870
BUILTIN _bb871 "Assertion failed"
fail # _bb871
END
BUILTIN _bb873 Bfalse
BUILTIN _bb875 I0
get _bb877 struct xthis
call _bb876 # _bb877
eq _bb874 _bb876 _bb875
eq _bb872 _bb874 _bb873
if # _bb872 _bb870
BEGIN _bb878
BUILTIN _bb879 "Assertion failed"
fail # _bb879
END
BUILTIN _bb881 Bfalse
BUILTIN _bb883 I1
get _bb885 struct xclosure
call _bb884 # _bb885
eq _bb882 _bb884 _bb883
eq _bb880 _bb882 _bb881
if # _bb880 _bb878
return # #
END
try _bbmacro17 _bb856
BEGIN _bb886
BEGIN _bb888
str _bb890 _bbmacro17
BUILTIN _bb892 "\n"
BUILTIN _bb893 "Closure"
add _bb891 _bb893 _bb892
add _bb889 _bb891 _bb890
list args _bb889
END
get _bb895 bb logger
get _bb894 _bb895 fail
call _bb887 _bb888 _bb894
END
BEGIN _bb896
BEGIN _bb898
BUILTIN _bb899 "Closure"
list args _bb899
END
get _bb901 bb logger
get _bb900 _bb901 ok
call _bb897 _bb898 _bb900
END
catch # _bbmacro17 _bb886 _bb896
BEGIN _bb904
BEGIN _bb907
BUILTIN x I1
return # this
END
new A _bb907
BEGIN _bb910
BUILTIN _bb911 "Assertion failed"
fail # _bb911
END
BUILTIN _bb913 Bfalse
BUILTIN _bb915 I1
get _bb916 A x
eq _bb914 _bb916 _bb915
eq _bb912 _bb914 _bb913
if # _bb912 _bb910
clear # A
BEGIN _bb920
get _bb921 A x
print # _bb921
END
try err _bb920
BEGIN _bb922
BUILTIN _bb923 "Assertion failed"
fail # _bb923
END
BUILTIN _bb925 Bfalse
BEGIN _bb928
BEGIN _bb929
BUILTIN _bb930 Btrue
return # _bb930
END
BEGIN _bb931
BUILTIN _bb932 Bfalse
return # _bb932
END
catch # err _bb929 _bb931
END
try _bb926 _bb928
eq _bb924 _bb926 _bb925
if # _bb924 _bb922
BEGIN _bb935
BUILTIN x I1
return # this
END
new B _bb935
move C B
BEGIN _bb941
get _bb942 B x
print # _bb942
END
try err _bb941
BEGIN _bb943
BUILTIN _bb944 "Assertion failed"
fail # _bb944
END
BUILTIN _bb946 Bfalse
BEGIN _bb949
BEGIN _bb950
BUILTIN _bb951 Btrue
return # _bb951
END
BEGIN _bb952
BUILTIN _bb953 Bfalse
return # _bb953
END
catch # err _bb950 _bb952
END
try _bb947 _bb949
eq _bb945 _bb947 _bb946
if # _bb945 _bb943
BEGIN _bb954
BUILTIN _bb955 "Assertion failed"
fail # _bb955
END
BUILTIN _bb957 Bfalse
BUILTIN _bb959 I1
get _bb960 C x
eq _bb958 _bb960 _bb959
eq _bb956 _bb958 _bb957
if # _bb956 _bb954
return # #
END
try _bbmacro18 _bb904
BEGIN _bb961
BEGIN _bb963
str _bb965 _bbmacro18
BUILTIN _bb967 "\n"
BUILTIN _bb968 "Clear"
add _bb966 _bb968 _bb967
add _bb964 _bb966 _bb965
list args _bb964
END
get _bb970 bb logger
get _bb969 _bb970 fail
call _bb962 _bb963 _bb969
END
BEGIN _bb971
BEGIN _bb973
BUILTIN _bb974 "Clear"
list args _bb974
END
get _bb976 bb logger
get _bb975 _bb976 ok
call _bb972 _bb973 _bb975
END
catch # _bbmacro18 _bb961 _bb971
BEGIN _bb979
BEGIN _bb980
next A args
move A A
len _bb981 A
return # _bb981
END
IS waslength _bb980
BUILTIN _bb982 I1
BUILTIN _bb983 I2
BUILTIN _bb984 I3
list A _bb982 _bb983 _bb984
BEGIN _bb986
BUILTIN _bb987 "Assertion failed"
fail # _bb987
END
BUILTIN _bb989 Bfalse
BUILTIN _bb991 I3
len _bb992 A
eq _bb990 _bb992 _bb991
eq _bb988 _bb990 _bb989
if # _bb988 _bb986
BEGIN _bb993
BUILTIN _bb994 "Assertion failed"
fail # _bb994
END
BUILTIN _bb996 Bfalse
BUILTIN _bb998 I3
BEGIN _bb1000
list args A
END
call _bb999 _bb1000 waslength
eq _bb997 _bb999 _bb998
eq _bb995 _bb997 _bb996
if # _bb995 _bb993
BEGIN _bb1001
BUILTIN _bb1002 "Assertion failed"
fail # _bb1002
END
BUILTIN _bb1004 Bfalse
BUILTIN _bb1006 I0
len _bb1007 A
eq _bb1005 _bb1007 _bb1006
eq _bb1003 _bb1005 _bb1004
if # _bb1003 _bb1001
return # #
END
try _bbmacro19 _bb979
BEGIN _bb1008
BEGIN _bb1010
str _bb1012 _bbmacro19
BUILTIN _bb1014 "\n"
BUILTIN _bb1015 "Move "
add _bb1013 _bb1015 _bb1014
add _bb1011 _bb1013 _bb1012
list args _bb1011
END
get _bb1017 bb logger
get _bb1016 _bb1017 fail
call _bb1009 _bb1010 _bb1016
END
BEGIN _bb1018
BEGIN _bb1020
BUILTIN _bb1021 "Move "
list args _bb1021
END
get _bb1023 bb logger
get _bb1022 _bb1023 ok
call _bb1019 _bb1020 _bb1022
END
catch # _bbmacro19 _bb1008 _bb1018
BEGIN _bb1026
BUILTIN _bb1027 I1
BUILTIN _bb1028 I2
BUILTIN _bb1029 I3
list A _bb1027 _bb1028 _bb1029
BEGIN _bb1032
list args A
END
BEGIN _bb1035
BUILTIN _bb1036 I4
list args _bb1036
END
get _bb1038 bb collection
get _bb1037 _bb1038 toback
call _bb1034 _bb1035 _bb1037
call _bb1031 _bb1032 _bb1034
IS A _bb1031
BEGIN _bb1039
BUILTIN _bb1040 "Assertion failed"
fail # _bb1040
END
BUILTIN _bb1042 Bfalse
BUILTIN _bb1044 I4
pop _bb1045 A
eq _bb1043 _bb1045 _bb1044
eq _bb1041 _bb1043 _bb1042
if # _bb1041 _bb1039
return # #
END
try _bbmacro20 _bb1026
BEGIN _bb1046
BEGIN _bb1048
str _bb1050 _bbmacro20
BUILTIN _bb1052 "\n"
BUILTIN _bb1053 "Collection"
add _bb1051 _bb1053 _bb1052
add _bb1049 _bb1051 _bb1050
list args _bb1049
END
get _bb1055 bb logger
get _bb1054 _bb1055 fail
call _bb1047 _bb1048 _bb1054
END
BEGIN _bb1056
BEGIN _bb1058
BUILTIN _bb1059 "Collection"
list args _bb1059
END
get _bb1061 bb logger
get _bb1060 _bb1061 ok
call _bb1057 _bb1058 _bb1060
END
catch # _bbmacro20 _bb1046 _bb1056
BEGIN _bb1064
BUILTIN A "I like banana!"
BEGIN _bb1066
BUILTIN _bb1067 "Assertion failed"
fail # _bb1067
END
BUILTIN _bb1069 Bfalse
BEGIN _bb1071
list args A
END
BEGIN _bb1074
BUILTIN _bb1075 "I like"
list args _bb1075
END
get _bb1077 bb string
get _bb1076 _bb1077 starts
call _bb1073 _bb1074 _bb1076
call _bb1070 _bb1071 _bb1073
eq _bb1068 _bb1070 _bb1069
if # _bb1068 _bb1066
BEGIN _bb1078
BUILTIN _bb1079 "Assertion failed"
fail # _bb1079
END
BUILTIN _bb1081 Bfalse
BEGIN _bb1083
list args A
END
BEGIN _bb1086
BUILTIN _bb1087 "banana!"
list args _bb1087
END
get _bb1089 bb string
get _bb1088 _bb1089 ends
call _bb1085 _bb1086 _bb1088
call _bb1082 _bb1083 _bb1085
eq _bb1080 _bb1082 _bb1081
if # _bb1080 _bb1078
BEGIN _bb1090
BUILTIN _bb1091 "Assertion failed"
fail # _bb1091
END
BUILTIN _bb1093 Bfalse
BUILTIN _bb1095 I3
BEGIN _bb1098
list args A
END
BEGIN _bb1101
BUILTIN _bb1102 " "
list args _bb1102
END
get _bb1104 bb string
get _bb1103 _bb1104 split
call _bb1100 _bb1101 _bb1103
call _bb1097 _bb1098 _bb1100
len _bb1096 _bb1097
eq _bb1094 _bb1096 _bb1095
eq _bb1092 _bb1094 _bb1093
if # _bb1092 _bb1090
BEGIN _bb1105
BUILTIN _bb1106 "Assertion failed"
fail # _bb1106
END
BUILTIN _bb1108 Bfalse
BUILTIN _bb1110 I2
BEGIN _bb1112
list args A
END
BEGIN _bb1115
BUILTIN _bb1116 "like"
list args _bb1116
END
get _bb1118 bb string
get _bb1117 _bb1118 index
call _bb1114 _bb1115 _bb1117
call _bb1111 _bb1112 _bb1114
eq _bb1109 _bb1111 _bb1110
eq _bb1107 _bb1109 _bb1108
if # _bb1107 _bb1105
BEGIN _bb1119
BUILTIN _bb1120 "Assertion failed"
fail # _bb1120
END
BUILTIN _bb1122 Bfalse
BUILTIN _bb1124 I10
BEGIN _bb1126
list args A
END
BEGIN _bb1129
BUILTIN _bb1130 "an"
list args _bb1130
BUILTIN pos I9
END
get _bb1133 bb string
get _bb1132 _bb1133 index
call _bb1128 _bb1129 _bb1132
call _bb1125 _bb1126 _bb1128
eq _bb1123 _bb1125 _bb1124
eq _bb1121 _bb1123 _bb1122
if # _bb1121 _bb1119
return # #
END
try _bbmacro21 _bb1064
BEGIN _bb1134
BEGIN _bb1136
str _bb1138 _bbmacro21
BUILTIN _bb1140 "\n"
BUILTIN _bb1141 "String"
add _bb1139 _bb1141 _bb1140
add _bb1137 _bb1139 _bb1138
list args _bb1137
END
get _bb1143 bb logger
get _bb1142 _bb1143 fail
call _bb1135 _bb1136 _bb1142
END
BEGIN _bb1144
BEGIN _bb1146
BUILTIN _bb1147 "String"
list args _bb1147
END
get _bb1149 bb logger
get _bb1148 _bb1149 ok
call _bb1145 _bb1146 _bb1148
END
catch # _bbmacro21 _bb1134 _bb1144
BEGIN _bb1152
BEGIN _bb1155
BUILTIN value I0
BEGIN _bb1157
next x args
get _bb1158 this value
add _bb1158 _bb1158 x
set # this value _bb1158
END
IS add _bb1157
return # this
END
new accum _bb1155
final # accum
BUILTIN _bb1160 I10
range _bb1159 _bb1160
iter _bbmacro23 _bb1159
BEGIN _bb1164
BEGIN _bb1165
next _bb1166 _bbmacro23
AS i _bb1166
exists _bb1167 i
END
BEGIN _bb1168
BEGIN _bb1170
list args i
END
get _bb1171 accum add
call _bb1169 _bb1170 _bb1171
END
while # _bb1165 _bb1168
END
try _bb1162 _bb1164
BEGIN _bb1172
BUILTIN _bb1173 "Assertion failed"
fail # _bb1173
END
BUILTIN _bb1175 Bfalse
BUILTIN _bb1177 I45
get _bb1178 accum value
eq _bb1176 _bb1178 _bb1177
eq _bb1174 _bb1176 _bb1175
if # _bb1174 _bb1172
return # #
END
try _bbmacro22 _bb1152
BEGIN _bb1179
BEGIN _bb1181
str _bb1183 _bbmacro22
BUILTIN _bb1185 "\n"
BUILTIN _bb1186 "Atomicity"
add _bb1184 _bb1186 _bb1185
add _bb1182 _bb1184 _bb1183
list args _bb1182
END
get _bb1188 bb logger
get _bb1187 _bb1188 fail
call _bb1180 _bb1181 _bb1187
END
BEGIN _bb1189
BEGIN _bb1191
BUILTIN _bb1192 "Atomicity"
list args _bb1192
END
get _bb1194 bb logger
get _bb1193 _bb1194 ok
call _bb1190 _bb1191 _bb1193
END
catch # _bbmacro22 _bb1179 _bb1189
BEGIN _bb1197
BEGIN _bb1200
BEGIN _bb1201
BEGIN _bb1203
list args B
END
call _bb1202 _bb1203 extern2
return # _bb1202
END
IS foo1 _bb1201
BEGIN _bb1204
BEGIN _bb1206
list args this
END
call _bb1205 _bb1206 extern3
return # _bb1205
END
IS foo2 _bb1204
BEGIN _bb1207
get _bb1209 B foo1
call _bb1208 # _bb1209
return # _bb1208
END
IS foo3 _bb1207
return # this
END
new A _bb1200
final # A
BEGIN _bb1212
BEGIN _bb1213
BEGIN _bb1215
list args A
END
call _bb1214 _bb1215 extern2
return # _bb1214
END
IS foo1 _bb1213
BEGIN _bb1216
BEGIN _bb1218
list args this
END
call _bb1217 _bb1218 extern3
return # _bb1217
END
IS foo2 _bb1216
BEGIN _bb1219
BUILTIN _bb1220 I1
return # _bb1220
END
IS foo3 _bb1219
return # this
END
new B _bb1212
final # B
BEGIN _bb1221
next obj args
get _bb1223 obj foo1
call _bb1222 # _bb1223
return # _bb1222
END
IS extern1 _bb1221
final # extern1
BEGIN _bb1224
next obj args
get _bb1226 obj foo2
call _bb1225 # _bb1226
return # _bb1225
END
IS extern2 _bb1224
final # extern2
BEGIN _bb1227
next obj args
get _bb1229 obj foo3
call _bb1228 # _bb1229
return # _bb1228
END
IS extern3 _bb1227
final # extern3
BEGIN _bb1230
BUILTIN _bb1231 "Assertion failed"
fail # _bb1231
END
BUILTIN _bb1233 Bfalse
BUILTIN _bb1235 I1
BEGIN _bb1237
list args A
END
call _bb1236 _bb1237 extern1
eq _bb1234 _bb1236 _bb1235
eq _bb1232 _bb1234 _bb1233
if # _bb1232 _bb1230
return # #
END
try _bbmacro24 _bb1197
BEGIN _bb1238
BEGIN _bb1240
str _bb1242 _bbmacro24
BUILTIN _bb1244 "\n"
BUILTIN _bb1245 "No deadlock"
add _bb1243 _bb1245 _bb1244
add _bb1241 _bb1243 _bb1242
list args _bb1241
END
get _bb1247 bb logger
get _bb1246 _bb1247 fail
call _bb1239 _bb1240 _bb1246
END
BEGIN _bb1248
BEGIN _bb1250
BUILTIN _bb1251 "No deadlock"
list args _bb1251
END
get _bb1253 bb logger
get _bb1252 _bb1253 ok
call _bb1249 _bb1250 _bb1252
END
catch # _bbmacro24 _bb1238 _bb1248
BEGIN _bb1256
BUILTIN _bb1258 "vfs://test.txt"
file f1 _bb1258
BUILTIN _bb1259 "Virtual data."
push # f1 _bb1259
BUILTIN _bb1261 "vfs://test.txt"
file f2 _bb1261
BEGIN _bb1262
BUILTIN _bb1263 "Assertion failed"
fail # _bb1263
END
BUILTIN _bb1265 Bfalse
BUILTIN _bb1267 "Virtual data."
BEGIN _bb1269
list args f2
END
get _bb1271 bb os
get _bb1270 _bb1271 read
call _bb1268 _bb1269 _bb1270
eq _bb1266 _bb1268 _bb1267
eq _bb1264 _bb1266 _bb1265
if # _bb1264 _bb1262
return # #
END
try _bbmacro25 _bb1256
BEGIN _bb1272
BEGIN _bb1274
str _bb1276 _bbmacro25
BUILTIN _bb1278 "\n"
BUILTIN _bb1279 "VFS"
add _bb1277 _bb1279 _bb1278
add _bb1275 _bb1277 _bb1276
list args _bb1275
END
get _bb1281 bb logger
get _bb1280 _bb1281 fail
call _bb1273 _bb1274 _bb1280
END
BEGIN _bb1282
BEGIN _bb1284
BUILTIN _bb1285 "VFS"
list args _bb1285
END
get _bb1287 bb logger
get _bb1286 _bb1287 ok
call _bb1283 _bb1284 _bb1286
END
catch # _bbmacro25 _bb1272 _bb1282
BEGIN _bb1290
BUILTIN _bb1291 "bb://.cache/database.db"
sqlite db _bb1291
BUILTIN _bb1294 "CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY, name TEXT, age INTEGER);"
at _bb1293 db _bb1294
BUILTIN n I100000
time start
BUILTIN _bb1298 "BEGIN TRANSACTION;"
at _bb1297 db _bb1298
range _bb1299 n
iter _bbmacro27 _bb1299
BEGIN _bb1301
next _bb1302 _bbmacro27
AS i _bb1302
exists _bb1303 i
END
BEGIN _bb1304
BUILTIN _bb1307 ");"
BUILTIN _bb1311 I10
mod _bb1310 i _bb1311
BUILTIN _bb1312 I20
add _bb1309 _bb1312 _bb1310
str _bb1313 _bb1309
BUILTIN _bb1315 "', "
str _bb1317 i
BUILTIN _bb1318 "INSERT INTO users (name, age) VALUES ('User"
add _bb1316 _bb1318 _bb1317
add _bb1314 _bb1316 _bb1315
add _bb1308 _bb1314 _bb1313
add _bb1306 _bb1308 _bb1307
at _bb1305 db _bb1306
BUILTIN _bb1321 ";"
str _bb1323 i
BUILTIN _bb1324 "SELECT * FROM users WHERE id = "
add _bb1322 _bb1324 _bb1323
add _bb1320 _bb1322 _bb1321
at _bb1319 db _bb1320
BUILTIN _bb1327 ";"
str _bb1329 i
BUILTIN _bb1330 "UPDATE users SET age = age + 1 WHERE id = "
add _bb1328 _bb1330 _bb1329
add _bb1326 _bb1328 _bb1327
at _bb1325 db _bb1326
END
while # _bb1301 _bb1304
BUILTIN _bb1332 "COMMIT;"
at _bb1331 db _bb1332
time _bb1334
sub eta _bb1334 start
BEGIN _bb1335
BUILTIN _bb1336 "Assertion failed"
fail # _bb1336
END
BUILTIN _bb1338 Bfalse
BUILTIN _bb1340 F1.5
lt _bb1339 eta _bb1340
eq _bb1337 _bb1339 _bb1338
if # _bb1337 _bb1335
BEGIN _bb1341
BUILTIN _bb1342 "Assertion failed"
fail # _bb1342
END
BUILTIN _bb1344 Bfalse
BUILTIN _bb1348 "SELECT * FROM users;"
at _bb1347 db _bb1348
len _bb1346 _bb1347
eq _bb1345 n _bb1346
eq _bb1343 _bb1345 _bb1344
if # _bb1343 _bb1341
BUILTIN _bb1350 "DELETE FROM users;"
at _bb1349 db _bb1350
return # #
END
try _bbmacro26 _bb1290
BEGIN _bb1351
BEGIN _bb1353
str _bb1355 _bbmacro26
BUILTIN _bb1357 "\n"
BUILTIN _bb1358 "Database"
add _bb1356 _bb1358 _bb1357
add _bb1354 _bb1356 _bb1355
list args _bb1354
END
get _bb1360 bb logger
get _bb1359 _bb1360 fail
call _bb1352 _bb1353 _bb1359
END
BEGIN _bb1361
BEGIN _bb1363
BUILTIN _bb1364 "Database"
list args _bb1364
END
get _bb1366 bb logger
get _bb1365 _bb1366 ok
call _bb1362 _bb1363 _bb1365
END
catch # _bbmacro26 _bb1351 _bb1361
