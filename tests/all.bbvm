BEGIN _bb39
BEGIN _bb42
BUILTIN lightred "\e[0;91m"
final # lightred
BUILTIN lightgreen "\e[0;92m"
final # lightgreen
BUILTIN reset "\e[0m"
final # reset
return # this
END
new ansi _bb42
final # ansi
BEGIN _bb62
BEGIN _bb63
next element args
BEGIN _bb66
get _bb67 this element
IS .element _bb67
BEGIN _bb68
next A args
get _bb69 this .element
IS ..element _bb69
push _bb70 A ..element
return # A
END
IS call _bb68
return # this
END
new _bb64 _bb66
return # _bb64
END
IS toback _bb63
final # toback
BEGIN _bb71
next func args
BEGIN _bb74
get _bb75 this func
IS .func _bb75
BEGIN _bb76
next A args
get _bb77 this .func
IS ..func _bb77
list ret
iter _bbmacro0 A
BEGIN _bb80
next _bb81 _bbmacro0
AS x _bb81
exists _bb82 x
END
BEGIN _bb83
BEGIN _bb86
list args x
END
call _bb85 _bb86 ..func
push _bb84 ret _bb85
END
while # _bb80 _bb83
return # ret
END
IS call _bb76
return # this
END
new _bb72 _bb74
return # _bb72
END
IS transform _bb71
final # transform
return # this
END
new collection _bb62
final # collection
BEGIN _bb87
next path args
str path path
BEGIN _bb90
sqlite connector path
return # this
END
new _bb88 _bb90
return # _bb88
END
IS db _bb87
final # db
BEGIN _bb203
BEGIN _bb204
next text args
str text text
BUILTIN _bb206 ""
str _bb208 text
BUILTIN _bb210 "  ] "
get _bb213 bb ansi
get _bb212 _bb213 reset
str _bb214 _bb212
BUILTIN _bb216 "ok"
get _bb219 bb ansi
get _bb218 _bb219 lightgreen
str _bb220 _bb218
BUILTIN _bb221 "[  "
add _bb217 _bb221 _bb220
add _bb215 _bb217 _bb216
add _bb211 _bb215 _bb214
add _bb209 _bb211 _bb210
add _bb207 _bb209 _bb208
add _bb205 _bb207 _bb206
print # _bb205
END
IS ok _bb204
final # ok
BEGIN _bb222
next text args
str text text
BUILTIN _bb224 ""
str _bb226 text
BUILTIN _bb228 " ] "
get _bb231 bb ansi
get _bb230 _bb231 reset
str _bb232 _bb230
BUILTIN _bb234 "fail"
get _bb237 bb ansi
get _bb236 _bb237 lightred
str _bb238 _bb236
BUILTIN _bb239 "[ "
add _bb235 _bb239 _bb238
add _bb233 _bb235 _bb234
add _bb229 _bb233 _bb232
add _bb227 _bb229 _bb228
add _bb225 _bb227 _bb226
add _bb223 _bb225 _bb224
print # _bb223
END
IS fail _bb222
final # fail
return # this
END
new logger _bb203
final # logger
BEGIN _bb296
BEGIN _bb297
next path args
str path path
file path path
return # path
END
IS call _bb297
BEGIN _bb305
next path args
str path path
file path path
BUILTIN ret ""
iter _bbmacro2 path
BEGIN _bb308
next _bb309 _bbmacro2
AS line _bb309
exists _bb310 line
END
BEGIN _bb311
BEGIN _bb312
BUILTIN _bb313 "\n"
add ret ret _bb313
END
len _bb315 ret
bool _bb314 _bb315
if # _bb314 _bb312
add ret ret line
END
while # _bb308 _bb311
return # ret
END
IS read _bb305
final # read
return # this
END
new os _bb296
final # os
BEGIN _bb364
BEGIN _bb365
next value args
str value value
return # value
END
IS call _bb365
BEGIN _bb428
next query args
str query query
BEGIN _bb431
get _bb432 this query
IS .query _bb432
BEGIN _bb433
BUILTIN _bb434 "Assertion failed"
fail # _bb434
END
BUILTIN _bb436 Bfalse
BUILTIN _bb438 I0
len _bb439 args
eq _bb437 _bb439 _bb438
eq _bb435 _bb437 _bb436
if # _bb435 _bb433
BEGIN _bb440
next search args
str search search
get _bb441 this .query
IS ..query _bb441
BEGIN _bb442
BUILTIN _bb443 "Assertion failed"
fail # _bb443
END
BUILTIN _bb445 Bfalse
BUILTIN _bb447 I0
len _bb448 args
eq _bb446 _bb448 _bb447
eq _bb444 _bb446 _bb445
if # _bb444 _bb442
IS query ..query
len nsearch search
len nquery query
BEGIN _bb451
BUILTIN _bb452 Bfalse
return # _bb452
END
lt _bb453 nsearch nquery
if # _bb453 _bb451
range _bb454 nquery
iter _bbmacro4 _bb454
BEGIN _bb456
next _bb457 _bbmacro4
AS i _bb457
exists _bb458 i
END
BEGIN _bb459
BEGIN _bb460
BUILTIN _bb461 Bfalse
return # _bb461
END
at _bb463 search i
at _bb464 query i
neq _bb462 _bb464 _bb463
if # _bb462 _bb460
END
while # _bb456 _bb459
BUILTIN _bb465 Btrue
return # _bb465
END
IS call _bb440
return # this
END
new _bb429 _bb431
return # _bb429
END
IS starts _bb428
final # starts
BEGIN _bb466
next query args
str query query
BEGIN _bb469
get _bb470 this query
IS .query _bb470
BEGIN _bb471
BUILTIN _bb472 "Assertion failed"
fail # _bb472
END
BUILTIN _bb474 Bfalse
BUILTIN _bb476 I0
len _bb477 args
eq _bb475 _bb477 _bb476
eq _bb473 _bb475 _bb474
if # _bb473 _bb471
BEGIN _bb478
next search args
str search search
get _bb479 this .query
IS ..query _bb479
BEGIN _bb480
BUILTIN _bb481 "Assertion failed"
fail # _bb481
END
BUILTIN _bb483 Bfalse
BUILTIN _bb485 I0
len _bb486 args
eq _bb484 _bb486 _bb485
eq _bb482 _bb484 _bb483
if # _bb482 _bb480
IS query ..query
len nsearch search
len nquery query
BEGIN _bb489
BUILTIN _bb490 Bfalse
return # _bb490
END
lt _bb491 nsearch nquery
if # _bb491 _bb489
range _bb492 nquery
iter _bbmacro5 _bb492
BEGIN _bb494
next _bb495 _bbmacro5
AS i _bb495
exists _bb496 i
END
BEGIN _bb497
BEGIN _bb498
BUILTIN _bb499 Bfalse
return # _bb499
END
sub _bb503 nsearch nquery
add _bb502 _bb503 i
at _bb501 search _bb502
at _bb504 query i
neq _bb500 _bb504 _bb501
if # _bb500 _bb498
END
while # _bb494 _bb497
BUILTIN _bb505 Btrue
return # _bb505
END
IS call _bb478
return # this
END
new _bb467 _bb469
return # _bb467
END
IS ends _bb466
final # ends
BEGIN _bb506
next query args
str query query
BEGIN _bb509
get _bb510 this query
IS .query _bb510
BEGIN _bb511
BUILTIN _bb512 "Assertion failed"
fail # _bb512
END
BUILTIN _bb514 Bfalse
BUILTIN _bb516 I0
len _bb517 args
eq _bb515 _bb517 _bb516
eq _bb513 _bb515 _bb514
if # _bb513 _bb511
BEGIN _bb518
BUILTIN pos I0
END
catch # pos _bb518
BEGIN _bb520
next search args
str search search
get _bb521 this .query
IS ..query _bb521
BEGIN _bb522
BUILTIN _bb523 "Assertion failed"
fail # _bb523
END
BUILTIN _bb525 Bfalse
BUILTIN _bb527 I0
len _bb528 args
eq _bb526 _bb528 _bb527
eq _bb524 _bb526 _bb525
if # _bb524 _bb522
IS query ..query
get _bb529 this pos
IS pos _bb529
len nsearch search
len nquery query
BUILTIN _bb534 I1
sub _bb535 nsearch nquery
add _bb533 _bb535 _bb534
range _bb532 pos _bb533
iter _bbmacro6 _bb532
BEGIN _bb537
next _bb538 _bbmacro6
AS i _bb538
exists _bb539 i
END
BEGIN _bb540
range _bb541 nquery
iter _bbmacro7 _bb541
BEGIN _bb545
BEGIN _bb546
next _bb547 _bbmacro7
AS j _bb547
exists _bb548 j
END
BEGIN _bb549
BEGIN _bb550
BUILTIN _bb551 Btrue
return # _bb551
END
add _bb554 i j
at _bb553 search _bb554
at _bb555 query j
neq _bb552 _bb555 _bb553
if # _bb552 _bb550
END
while # _bb546 _bb549
END
try different _bb545
print # i
BEGIN _bb556
return # i
END
catch # different _bb556
END
while # _bb537 _bb540
return # nsearch
END
IS call _bb520
return # this
END
new _bb507 _bb509
return # _bb507
END
IS index _bb506
final # index
BEGIN _bb557
next query args
str query query
BEGIN _bb560
get _bb561 this query
IS .query _bb561
BEGIN _bb562
BUILTIN _bb563 "Assertion failed"
fail # _bb563
END
BUILTIN _bb565 Bfalse
BUILTIN _bb567 I0
len _bb568 args
eq _bb566 _bb568 _bb567
eq _bb564 _bb566 _bb565
if # _bb564 _bb562
BEGIN _bb569
BUILTIN maxsplits I0
END
catch # maxsplits _bb569
BEGIN _bb571
next search args
str search search
get _bb572 this .query
IS ..query _bb572
IS query ..query
len nsearch search
len nquery query
BEGIN _bb575
BUILTIN _bb576 "Cannot split on a zero-length string"
fail # _bb576
END
BUILTIN _bb578 I0
eq _bb577 nquery _bb578
if # _bb577 _bb575
list ret
BUILTIN pos I0
BEGIN _bb581
lt _bb582 pos nsearch
END
BEGIN _bb583
IS prev_pos pos
BEGIN _bb585
list args search
END
BEGIN _bb588
list args query
IS pos pos
END
get _bb590 bb string
get _bb589 _bb590 index
call _bb587 _bb588 _bb589
call _bb584 _bb585 _bb587
IS pos _bb584
range _bb592 prev_pos pos
at _bb591 search _bb592
IS s _bb591
push _bb593 ret s
add pos pos nquery
END
while # _bb581 _bb583
return # ret
END
IS call _bb571
return # this
END
new _bb558 _bb560
return # _bb558
END
IS split _bb557
final # split
return # this
END
new string _bb364
final # string
return # this
END
new bb _bb39
final # bb
BEGIN _bb829
BEGIN _bb830
next x args
BEGIN _bb831
BUILTIN bias I1
END
catch # bias _bb831
add _bb833 x bias
return # _bb833
END
IS inc _bb830
BEGIN _bb834
BUILTIN _bb835 "Assertion failed"
fail # _bb835
END
BUILTIN _bb837 Bfalse
BUILTIN _bb839 I1
BEGIN _bb841
BUILTIN _bb842 I0
list args _bb842
END
call _bb840 _bb841 inc
eq _bb838 _bb840 _bb839
eq _bb836 _bb838 _bb837
if # _bb836 _bb834
BEGIN _bb843
BUILTIN _bb844 "Assertion failed"
fail # _bb844
END
BUILTIN _bb846 Bfalse
BUILTIN _bb848 I2
BEGIN _bb850
BUILTIN _bb851 I0
list args _bb851
BUILTIN bias I2
END
call _bb849 _bb850 inc
eq _bb847 _bb849 _bb848
eq _bb845 _bb847 _bb846
if # _bb845 _bb843
BUILTIN _bb853 Btrue
return # _bb853
END
try _bbmacro13 _bb829
BEGIN _bb854
BEGIN _bb856
str _bb858 _bbmacro13
BUILTIN _bb860 "\n"
BUILTIN _bb861 "Default"
add _bb859 _bb861 _bb860
add _bb857 _bb859 _bb858
list args _bb857
END
get _bb863 bb logger
get _bb862 _bb863 fail
call _bb855 _bb856 _bb862
END
BEGIN _bb864
BEGIN _bb866
BUILTIN _bb867 "Default"
list args _bb867
END
get _bb869 bb logger
get _bb868 _bb869 ok
call _bb865 _bb866 _bb868
END
catch # _bbmacro13 _bb854 _bb864
BEGIN _bb872
BUILTIN A "0"
BUILTIN _bb874 "1"
add A A _bb874
BUILTIN _bb875 "2"
add A A _bb875
BUILTIN _bb876 "3"
add A A _bb876
BUILTIN _bb877 "4"
add A A _bb877
BUILTIN _bb878 "5"
add A A _bb878
BUILTIN _bb879 "6"
add A A _bb879
BUILTIN _bb880 "7"
add A A _bb880
BUILTIN _bb881 "8"
add A A _bb881
BUILTIN _bb882 "9"
add A A _bb882
BEGIN _bb883
BUILTIN _bb884 "Assertion failed"
fail # _bb884
END
BUILTIN _bb886 Bfalse
BUILTIN _bb888 "0123456789"
eq _bb887 A _bb888
eq _bb885 _bb887 _bb886
if # _bb885 _bb883
BEGIN _bb889
BUILTIN _bb890 "Assertion failed"
fail # _bb890
END
BUILTIN _bb892 Bfalse
BUILTIN _bb894 I10
len _bb895 A
eq _bb893 _bb895 _bb894
eq _bb891 _bb893 _bb892
if # _bb891 _bb889
BUILTIN _bb896 Btrue
return # _bb896
END
try _bbmacro14 _bb872
BEGIN _bb897
BEGIN _bb899
str _bb901 _bbmacro14
BUILTIN _bb903 "\n"
BUILTIN _bb904 "String add"
add _bb902 _bb904 _bb903
add _bb900 _bb902 _bb901
list args _bb900
END
get _bb906 bb logger
get _bb905 _bb906 fail
call _bb898 _bb899 _bb905
END
BEGIN _bb907
BEGIN _bb909
BUILTIN _bb910 "String add"
list args _bb910
END
get _bb912 bb logger
get _bb911 _bb912 ok
call _bb908 _bb909 _bb911
END
catch # _bbmacro14 _bb897 _bb907
BEGIN _bb915
BUILTIN _bb916 I1
BUILTIN _bb917 I2
BUILTIN _bb918 I3
BUILTIN _bb919 I4
list A _bb916 _bb917 _bb918 _bb919
BEGIN _bb921
BUILTIN _bb922 "Assertion failed"
fail # _bb922
END
BUILTIN _bb924 Bfalse
BUILTIN _bb926 I2
BUILTIN _bb928 I1
at _bb927 A _bb928
eq _bb925 _bb927 _bb926
eq _bb923 _bb925 _bb924
if # _bb923 _bb921
BEGIN _bb929
BUILTIN _bb930 "Assertion failed"
fail # _bb930
END
BUILTIN _bb932 Bfalse
BUILTIN _bb934 I1
next _bb935 A
eq _bb933 _bb935 _bb934
eq _bb931 _bb933 _bb932
if # _bb931 _bb929
BEGIN _bb936
BUILTIN _bb937 "Assertion failed"
fail # _bb937
END
BUILTIN _bb939 Bfalse
BUILTIN _bb941 I2
next _bb942 A
eq _bb940 _bb942 _bb941
eq _bb938 _bb940 _bb939
if # _bb938 _bb936
BEGIN _bb943
BUILTIN _bb944 "Assertion failed"
fail # _bb944
END
BUILTIN _bb946 Bfalse
BUILTIN _bb948 I4
pop _bb949 A
eq _bb947 _bb949 _bb948
eq _bb945 _bb947 _bb946
if # _bb945 _bb943
BEGIN _bb950
BUILTIN _bb951 "Assertion failed"
fail # _bb951
END
BUILTIN _bb953 Bfalse
BUILTIN _bb955 I3
pop _bb956 A
eq _bb954 _bb956 _bb955
eq _bb952 _bb954 _bb953
if # _bb952 _bb950
BEGIN _bb957
BUILTIN _bb958 "Assertion failed"
fail # _bb958
END
BUILTIN _bb960 Bfalse
BUILTIN _bb962 I0
len _bb963 A
eq _bb961 _bb963 _bb962
eq _bb959 _bb961 _bb960
if # _bb959 _bb957
BUILTIN _bb964 I5
push # A _bb964
BEGIN _bb965
BUILTIN _bb966 "Assertion failed"
fail # _bb966
END
BUILTIN _bb968 Bfalse
BUILTIN _bb970 I5
pop _bb971 A
eq _bb969 _bb971 _bb970
eq _bb967 _bb969 _bb968
if # _bb967 _bb965
BUILTIN _bb972 Btrue
return # _bb972
END
try _bbmacro15 _bb915
BEGIN _bb973
BEGIN _bb975
str _bb977 _bbmacro15
BUILTIN _bb979 "\n"
BUILTIN _bb980 "List"
add _bb978 _bb980 _bb979
add _bb976 _bb978 _bb977
list args _bb976
END
get _bb982 bb logger
get _bb981 _bb982 fail
call _bb974 _bb975 _bb981
END
BEGIN _bb983
BEGIN _bb985
BUILTIN _bb986 "List"
list args _bb986
END
get _bb988 bb logger
get _bb987 _bb988 ok
call _bb984 _bb985 _bb987
END
catch # _bbmacro15 _bb973 _bb983
BEGIN _bb991
BUILTIN s I0
BUILTIN _bb994 I10
range _bb993 _bb994
iter _bbmacro17 _bb993
BEGIN _bb996
next _bb997 _bbmacro17
AS i _bb997
exists _bb998 i
END
BEGIN _bb999
add s s i
END
while # _bb996 _bb999
BEGIN _bb1000
BUILTIN _bb1001 "Assertion failed"
fail # _bb1001
END
BUILTIN _bb1003 Bfalse
BUILTIN _bb1005 I45
eq _bb1004 s _bb1005
eq _bb1002 _bb1004 _bb1003
if # _bb1002 _bb1000
BUILTIN _bb1006 Btrue
return # _bb1006
END
try _bbmacro16 _bb991
BEGIN _bb1007
BEGIN _bb1009
str _bb1011 _bbmacro16
BUILTIN _bb1013 "\n"
BUILTIN _bb1014 "Range"
add _bb1012 _bb1014 _bb1013
add _bb1010 _bb1012 _bb1011
list args _bb1010
END
get _bb1016 bb logger
get _bb1015 _bb1016 fail
call _bb1008 _bb1009 _bb1015
END
BEGIN _bb1017
BEGIN _bb1019
BUILTIN _bb1020 "Range"
list args _bb1020
END
get _bb1022 bb logger
get _bb1021 _bb1022 ok
call _bb1018 _bb1019 _bb1021
END
catch # _bbmacro16 _bb1007 _bb1017
BEGIN _bb1025
BUILTIN _bb1026 I1
BUILTIN _bb1027 I2
BUILTIN _bb1028 I3
list A _bb1026 _bb1027 _bb1028
BUILTIN s I0
iter _bbmacro19 A
BEGIN _bb1032
next _bb1033 _bbmacro19
AS x _bb1033
exists _bb1034 x
END
BEGIN _bb1035
add s s x
END
while # _bb1032 _bb1035
iter it A
BEGIN _bb1037
next _bb1038 it
AS x _bb1038
exists _bb1039 x
END
BEGIN _bb1040
sub s s x
END
while # _bb1037 _bb1040
BEGIN _bb1041
BUILTIN _bb1042 "Assertion failed"
fail # _bb1042
END
BUILTIN _bb1044 Bfalse
BUILTIN _bb1046 I0
eq _bb1045 s _bb1046
eq _bb1043 _bb1045 _bb1044
if # _bb1043 _bb1041
BUILTIN _bb1047 Btrue
return # _bb1047
END
try _bbmacro18 _bb1025
BEGIN _bb1048
BEGIN _bb1050
str _bb1052 _bbmacro18
BUILTIN _bb1054 "\n"
BUILTIN _bb1055 "Iteration"
add _bb1053 _bb1055 _bb1054
add _bb1051 _bb1053 _bb1052
list args _bb1051
END
get _bb1057 bb logger
get _bb1056 _bb1057 fail
call _bb1049 _bb1050 _bb1056
END
BEGIN _bb1058
BEGIN _bb1060
BUILTIN _bb1061 "Iteration"
list args _bb1061
END
get _bb1063 bb logger
get _bb1062 _bb1063 ok
call _bb1059 _bb1060 _bb1062
END
catch # _bbmacro18 _bb1048 _bb1058
BEGIN _bb1066
map A
BUILTIN _bb1068 I1
BUILTIN _bb1069 "test"
put # A _bb1069 _bb1068
BEGIN _bb1070
BUILTIN _bb1071 "Assertion failed"
fail # _bb1071
END
BUILTIN _bb1073 Bfalse
BUILTIN _bb1075 I1
BUILTIN _bb1077 "test"
at _bb1076 A _bb1077
eq _bb1074 _bb1076 _bb1075
eq _bb1072 _bb1074 _bb1073
if # _bb1072 _bb1070
clear # A
BUILTIN _bb1079 "a"
BUILTIN _bb1080 I1
list _bb1081 _bb1079 _bb1080
BUILTIN _bb1082 "b"
BUILTIN _bb1083 I2
list _bb1084 _bb1082 _bb1083
BUILTIN _bb1085 "c"
BUILTIN _bb1086 I3
list _bb1087 _bb1085 _bb1086
list _bb1088 _bb1081 _bb1084 _bb1087
map A _bb1088
BEGIN _bb1090
BUILTIN _bb1091 "Assertion failed"
fail # _bb1091
END
BUILTIN _bb1093 Bfalse
BUILTIN _bb1095 I1
BUILTIN _bb1097 "a"
at _bb1096 A _bb1097
eq _bb1094 _bb1096 _bb1095
eq _bb1092 _bb1094 _bb1093
if # _bb1092 _bb1090
BEGIN _bb1098
BUILTIN _bb1099 "Assertion failed"
fail # _bb1099
END
BUILTIN _bb1101 Bfalse
BUILTIN _bb1103 I2
BUILTIN _bb1105 "b"
at _bb1104 A _bb1105
eq _bb1102 _bb1104 _bb1103
eq _bb1100 _bb1102 _bb1101
if # _bb1100 _bb1098
BEGIN _bb1106
BUILTIN _bb1107 "Assertion failed"
fail # _bb1107
END
BUILTIN _bb1109 Bfalse
BUILTIN _bb1111 I3
BUILTIN _bb1113 "c"
at _bb1112 A _bb1113
eq _bb1110 _bb1112 _bb1111
eq _bb1108 _bb1110 _bb1109
if # _bb1108 _bb1106
BUILTIN _bb1114 Btrue
return # _bb1114
END
try _bbmacro20 _bb1066
BEGIN _bb1115
BEGIN _bb1117
str _bb1119 _bbmacro20
BUILTIN _bb1121 "\n"
BUILTIN _bb1122 "Map"
add _bb1120 _bb1122 _bb1121
add _bb1118 _bb1120 _bb1119
list args _bb1118
END
get _bb1124 bb logger
get _bb1123 _bb1124 fail
call _bb1116 _bb1117 _bb1123
END
BEGIN _bb1125
BEGIN _bb1127
BUILTIN _bb1128 "Map"
list args _bb1128
END
get _bb1130 bb logger
get _bb1129 _bb1130 ok
call _bb1126 _bb1127 _bb1129
END
catch # _bbmacro20 _bb1115 _bb1125
BEGIN _bb1133
BUILTIN _bb1134 I0
BUILTIN _bb1135 I1
list _bb1136 _bb1134 _bb1135
vector A _bb1136
BUILTIN _bb1138 I2
BUILTIN _bb1139 I3
list _bb1140 _bb1138 _bb1139
vector B _bb1140
BEGIN _bb1142
BUILTIN _bb1143 "Assertion failed"
fail # _bb1143
END
BUILTIN _bb1145 Bfalse
BUILTIN _bb1147 I2
min _bb1148 B
eq _bb1146 _bb1148 _bb1147
eq _bb1144 _bb1146 _bb1145
if # _bb1144 _bb1142
BEGIN _bb1149
BUILTIN _bb1150 "Assertion failed"
fail # _bb1150
END
BUILTIN _bb1152 Bfalse
BUILTIN _bb1154 I3
max _bb1155 B
eq _bb1153 _bb1155 _bb1154
eq _bb1151 _bb1153 _bb1152
if # _bb1151 _bb1149
BEGIN _bb1156
BUILTIN _bb1157 "Assertion failed"
fail # _bb1157
END
BUILTIN _bb1159 Bfalse
BUILTIN _bb1161 I1
sum _bb1162 A
eq _bb1160 _bb1162 _bb1161
eq _bb1158 _bb1160 _bb1159
if # _bb1158 _bb1156
BEGIN _bb1163
BUILTIN _bb1164 "Assertion failed"
fail # _bb1164
END
BUILTIN _bb1166 Bfalse
BUILTIN _bb1168 I2
BUILTIN _bb1170 I0
add _bb1171 A B
at _bb1169 _bb1171 _bb1170
eq _bb1167 _bb1169 _bb1168
eq _bb1165 _bb1167 _bb1166
if # _bb1165 _bb1163
BEGIN _bb1172
BUILTIN _bb1173 "Assertion failed"
fail # _bb1173
END
BUILTIN _bb1175 Bfalse
BUILTIN _bb1177 I4
BUILTIN _bb1179 I1
add _bb1180 A B
at _bb1178 _bb1180 _bb1179
eq _bb1176 _bb1178 _bb1177
eq _bb1174 _bb1176 _bb1175
if # _bb1174 _bb1172
BEGIN _bb1181
BUILTIN _bb1182 "Assertion failed"
fail # _bb1182
END
BUILTIN _bb1184 Bfalse
BUILTIN _bb1186 I0
BUILTIN _bb1188 I0
mul _bb1189 A B
at _bb1187 _bb1189 _bb1188
eq _bb1185 _bb1187 _bb1186
eq _bb1183 _bb1185 _bb1184
if # _bb1183 _bb1181
BEGIN _bb1190
BUILTIN _bb1191 "Assertion failed"
fail # _bb1191
END
BUILTIN _bb1193 Bfalse
BUILTIN _bb1195 I3
BUILTIN _bb1197 I1
mul _bb1198 A B
at _bb1196 _bb1198 _bb1197
eq _bb1194 _bb1196 _bb1195
eq _bb1192 _bb1194 _bb1193
if # _bb1192 _bb1190
BEGIN _bb1199
BUILTIN _bb1200 "Assertion failed"
fail # _bb1200
END
BUILTIN _bb1202 Bfalse
BUILTIN _bb1204 I0
BUILTIN _bb1206 I0
div _bb1207 A B
at _bb1205 _bb1207 _bb1206
eq _bb1203 _bb1205 _bb1204
eq _bb1201 _bb1203 _bb1202
if # _bb1201 _bb1199
BEGIN _bb1208
BUILTIN _bb1209 "Assertion failed"
fail # _bb1209
END
BUILTIN _bb1211 Bfalse
BUILTIN _bb1214 I3
BUILTIN _bb1215 I1
div _bb1213 _bb1215 _bb1214
BUILTIN _bb1217 I1
div _bb1218 A B
at _bb1216 _bb1218 _bb1217
eq _bb1212 _bb1216 _bb1213
eq _bb1210 _bb1212 _bb1211
if # _bb1210 _bb1208
BEGIN _bb1219
BUILTIN _bb1220 "Assertion failed"
fail # _bb1220
END
BUILTIN _bb1222 Bfalse
BUILTIN _bb1224 I0
BUILTIN _bb1226 I0
pow _bb1227 A B
at _bb1225 _bb1227 _bb1226
eq _bb1223 _bb1225 _bb1224
eq _bb1221 _bb1223 _bb1222
if # _bb1221 _bb1219
BEGIN _bb1228
BUILTIN _bb1229 "Assertion failed"
fail # _bb1229
END
BUILTIN _bb1231 Bfalse
BUILTIN _bb1233 I1
BUILTIN _bb1235 I1
pow _bb1236 A B
at _bb1234 _bb1236 _bb1235
eq _bb1232 _bb1234 _bb1233
eq _bb1230 _bb1232 _bb1231
if # _bb1230 _bb1228
BEGIN _bb1237
BUILTIN _bb1238 "Assertion failed"
fail # _bb1238
END
BUILTIN _bb1240 Bfalse
BUILTIN _bb1242 I1
BUILTIN _bb1244 I0
lt _bb1245 A B
at _bb1243 _bb1245 _bb1244
eq _bb1241 _bb1243 _bb1242
eq _bb1239 _bb1241 _bb1240
if # _bb1239 _bb1237
BEGIN _bb1246
BUILTIN _bb1247 "Assertion failed"
fail # _bb1247
END
BUILTIN _bb1249 Bfalse
BUILTIN _bb1251 I1
BUILTIN _bb1253 I1
lt _bb1254 A B
at _bb1252 _bb1254 _bb1253
eq _bb1250 _bb1252 _bb1251
eq _bb1248 _bb1250 _bb1249
if # _bb1248 _bb1246
BEGIN _bb1255
BUILTIN _bb1256 "Assertion failed"
fail # _bb1256
END
BUILTIN _bb1258 Bfalse
BUILTIN _bb1260 I0
BUILTIN _bb1262 I0
gt _bb1263 A B
at _bb1261 _bb1263 _bb1262
eq _bb1259 _bb1261 _bb1260
eq _bb1257 _bb1259 _bb1258
if # _bb1257 _bb1255
BEGIN _bb1264
BUILTIN _bb1265 "Assertion failed"
fail # _bb1265
END
BUILTIN _bb1267 Bfalse
BUILTIN _bb1269 I0
BUILTIN _bb1271 I1
gt _bb1272 A B
at _bb1270 _bb1272 _bb1271
eq _bb1268 _bb1270 _bb1269
eq _bb1266 _bb1268 _bb1267
if # _bb1266 _bb1264
BEGIN _bb1273
BUILTIN _bb1274 "Assertion failed"
fail # _bb1274
END
BUILTIN _bb1276 Bfalse
BUILTIN _bb1278 I1
BUILTIN _bb1280 I0
le _bb1281 A B
at _bb1279 _bb1281 _bb1280
eq _bb1277 _bb1279 _bb1278
eq _bb1275 _bb1277 _bb1276
if # _bb1275 _bb1273
BEGIN _bb1282
BUILTIN _bb1283 "Assertion failed"
fail # _bb1283
END
BUILTIN _bb1285 Bfalse
BUILTIN _bb1287 I1
BUILTIN _bb1289 I1
le _bb1290 A B
at _bb1288 _bb1290 _bb1289
eq _bb1286 _bb1288 _bb1287
eq _bb1284 _bb1286 _bb1285
if # _bb1284 _bb1282
BEGIN _bb1291
BUILTIN _bb1292 "Assertion failed"
fail # _bb1292
END
BUILTIN _bb1294 Bfalse
BUILTIN _bb1296 I0
BUILTIN _bb1298 I0
ge _bb1299 A B
at _bb1297 _bb1299 _bb1298
eq _bb1295 _bb1297 _bb1296
eq _bb1293 _bb1295 _bb1294
if # _bb1293 _bb1291
BEGIN _bb1300
BUILTIN _bb1301 "Assertion failed"
fail # _bb1301
END
BUILTIN _bb1303 Bfalse
BUILTIN _bb1305 I0
BUILTIN _bb1307 I1
ge _bb1308 A B
at _bb1306 _bb1308 _bb1307
eq _bb1304 _bb1306 _bb1305
eq _bb1302 _bb1304 _bb1303
if # _bb1302 _bb1300
BEGIN _bb1309
BUILTIN _bb1310 "Assertion failed"
fail # _bb1310
END
BUILTIN _bb1312 Bfalse
BUILTIN _bb1314 I0
BUILTIN _bb1316 I0
BUILTIN _bb1319 I3
add _bb1318 A _bb1319
le _bb1317 _bb1318 B
at _bb1315 _bb1317 _bb1316
eq _bb1313 _bb1315 _bb1314
eq _bb1311 _bb1313 _bb1312
if # _bb1311 _bb1309
BEGIN _bb1320
BUILTIN _bb1321 "Assertion failed"
fail # _bb1321
END
BUILTIN _bb1323 Bfalse
BUILTIN _bb1325 I1
BUILTIN _bb1327 I0
BUILTIN _bb1330 I3
add _bb1329 A _bb1330
ge _bb1328 _bb1329 B
at _bb1326 _bb1328 _bb1327
eq _bb1324 _bb1326 _bb1325
eq _bb1322 _bb1324 _bb1323
if # _bb1322 _bb1320
BEGIN _bb1331
BUILTIN _bb1332 "Assertion failed"
fail # _bb1332
END
BUILTIN _bb1334 Bfalse
BUILTIN _bb1336 I1
BUILTIN _bb1338 I1
BUILTIN _bb1341 I3
mul _bb1340 A _bb1341
eq _bb1339 _bb1340 B
at _bb1337 _bb1339 _bb1338
eq _bb1335 _bb1337 _bb1336
eq _bb1333 _bb1335 _bb1334
if # _bb1333 _bb1331
BUILTIN _bb1342 Btrue
return # _bb1342
END
try _bbmacro21 _bb1133
BEGIN _bb1343
BEGIN _bb1345
str _bb1347 _bbmacro21
BUILTIN _bb1349 "\n"
BUILTIN _bb1350 "Vector"
add _bb1348 _bb1350 _bb1349
add _bb1346 _bb1348 _bb1347
list args _bb1346
END
get _bb1352 bb logger
get _bb1351 _bb1352 fail
call _bb1344 _bb1345 _bb1351
END
BEGIN _bb1353
BEGIN _bb1355
BUILTIN _bb1356 "Vector"
list args _bb1356
END
get _bb1358 bb logger
get _bb1357 _bb1358 ok
call _bb1354 _bb1355 _bb1357
END
catch # _bbmacro21 _bb1343 _bb1353
BEGIN _bb1361
BEGIN _bb1362
BEGIN _bb1363
get _bb1364 this value
return # _bb1364
END
IS int _bb1363
BEGIN _bb1365
next other args
get _bb1367 other value
get _bb1368 this value
lt _bb1366 _bb1368 _bb1367
return # _bb1366
END
IS lt _bb1365
BEGIN _bb1369
BUILTIN _bb1371 ""
get _bb1373 this value
str _bb1374 _bb1373
BUILTIN _bb1375 "num "
add _bb1372 _bb1375 _bb1374
add _bb1370 _bb1372 _bb1371
return # _bb1370
END
IS str _bb1369
END
IS Num _bb1362
final # Num
BEGIN _bb1376
next x args
BEGIN _bb1379
inline _bb1380 Num
IS value x
return # this
END
new _bb1377 _bb1379
return # _bb1377
END
IS num _bb1376
BUILTIN _bb1381 I5
BUILTIN _bb1382 I2
BUILTIN _bb1383 I3
BUILTIN _bb1384 I4
BUILTIN _bb1385 I1
list A _bb1381 _bb1382 _bb1383 _bb1384 _bb1385
BEGIN _bb1388
list args A
END
BEGIN _bb1391
list args num
END
get _bb1393 bb collection
get _bb1392 _bb1393 transform
call _bb1390 _bb1391 _bb1392
call _bb1387 _bb1388 _bb1390
IS A _bb1387
len n A
range _bb1395 n
iter _bbmacro23 _bb1395
BEGIN _bb1397
next _bb1398 _bbmacro23
AS i _bb1398
exists _bb1399 i
END
BEGIN _bb1400
BUILTIN _bb1403 I1
add _bb1402 i _bb1403
range _bb1401 _bb1402 n
iter _bbmacro24 _bb1401
BEGIN _bb1405
next _bb1406 _bbmacro24
AS j _bb1406
exists _bb1407 j
END
BEGIN _bb1408
BEGIN _bb1409
at _bb1410 A i
IS tmp _bb1410
at _bb1411 A j
put # A i _bb1411
put # A j tmp
END
at _bb1413 A i
at _bb1414 A j
lt _bb1412 _bb1414 _bb1413
if # _bb1412 _bb1409
END
while # _bb1405 _bb1408
END
while # _bb1397 _bb1400
BEGIN _bb1415
BUILTIN _bb1416 "Assertion failed"
fail # _bb1416
END
BUILTIN _bb1418 Bfalse
BUILTIN _bb1420 I1
BUILTIN _bb1423 I0
at _bb1422 A _bb1423
int _bb1421 _bb1422
eq _bb1419 _bb1421 _bb1420
eq _bb1417 _bb1419 _bb1418
if # _bb1417 _bb1415
BUILTIN _bb1424 Btrue
return # _bb1424
END
try _bbmacro22 _bb1361
BEGIN _bb1425
BEGIN _bb1427
str _bb1429 _bbmacro22
BUILTIN _bb1431 "\n"
BUILTIN _bb1432 "Overload"
add _bb1430 _bb1432 _bb1431
add _bb1428 _bb1430 _bb1429
list args _bb1428
END
get _bb1434 bb logger
get _bb1433 _bb1434 fail
call _bb1426 _bb1427 _bb1433
END
BEGIN _bb1435
BEGIN _bb1437
BUILTIN _bb1438 "Overload"
list args _bb1438
END
get _bb1440 bb logger
get _bb1439 _bb1440 ok
call _bb1436 _bb1437 _bb1439
END
catch # _bbmacro22 _bb1425 _bb1435
BEGIN _bb1443
BEGIN _bb1444
next x args
next y args
BEGIN _bb1445
BUILTIN bias I0
END
catch # bias _bb1445
add _bb1448 x y
add _bb1447 _bb1448 bias
return # _bb1447
END
IS foo _bb1444
BEGIN _bb1449
BUILTIN _bb1450 "Assertion failed"
fail # _bb1450
END
BUILTIN _bb1452 Bfalse
BUILTIN _bb1454 I6
BEGIN _bb1456
BUILTIN _bb1457 I1
BUILTIN _bb1458 I2
list args _bb1457 _bb1458
BUILTIN bias I3
END
call _bb1455 _bb1456 foo
eq _bb1453 _bb1455 _bb1454
eq _bb1451 _bb1453 _bb1452
if # _bb1451 _bb1449
BUILTIN _bb1461 Btrue
return # _bb1461
END
try _bbmacro25 _bb1443
BEGIN _bb1462
BEGIN _bb1464
str _bb1466 _bbmacro25
BUILTIN _bb1468 "\n"
BUILTIN _bb1469 "Func call"
add _bb1467 _bb1469 _bb1468
add _bb1465 _bb1467 _bb1466
list args _bb1465
END
get _bb1471 bb logger
get _bb1470 _bb1471 fail
call _bb1463 _bb1464 _bb1470
END
BEGIN _bb1472
BEGIN _bb1474
BUILTIN _bb1475 "Func call"
list args _bb1475
END
get _bb1477 bb logger
get _bb1476 _bb1477 ok
call _bb1473 _bb1474 _bb1476
END
catch # _bbmacro25 _bb1462 _bb1472
BEGIN _bb1480
BEGIN _bb1481
get _bb1482 this x
IS .x _bb1482
BUILTIN x I0
BEGIN _bb1484
get _bb1485 this x
return # _bb1485
END
IS xthis _bb1484
BEGIN _bb1486
get _bb1487 this .x
IS ..x _bb1487
return # ..x
END
IS xclosure _bb1486
END
IS Struct _bb1481
BUILTIN x I1
BEGIN _bb1491
inline _bb1492 Struct
return # this
END
new struct _bb1491
BUILTIN x I2
BEGIN _bb1494
BUILTIN _bb1495 "Assertion failed"
fail # _bb1495
END
BUILTIN _bb1497 Bfalse
BUILTIN _bb1499 I0
get _bb1501 struct xthis
call _bb1500 # _bb1501
eq _bb1498 _bb1500 _bb1499
eq _bb1496 _bb1498 _bb1497
if # _bb1496 _bb1494
BEGIN _bb1502
BUILTIN _bb1503 "Assertion failed"
fail # _bb1503
END
BUILTIN _bb1505 Bfalse
BUILTIN _bb1507 I1
get _bb1509 struct xclosure
call _bb1508 # _bb1509
eq _bb1506 _bb1508 _bb1507
eq _bb1504 _bb1506 _bb1505
if # _bb1504 _bb1502
BUILTIN _bb1510 Btrue
return # _bb1510
END
try _bbmacro26 _bb1480
BEGIN _bb1511
BEGIN _bb1513
str _bb1515 _bbmacro26
BUILTIN _bb1517 "\n"
BUILTIN _bb1518 "Closure"
add _bb1516 _bb1518 _bb1517
add _bb1514 _bb1516 _bb1515
list args _bb1514
END
get _bb1520 bb logger
get _bb1519 _bb1520 fail
call _bb1512 _bb1513 _bb1519
END
BEGIN _bb1521
BEGIN _bb1523
BUILTIN _bb1524 "Closure"
list args _bb1524
END
get _bb1526 bb logger
get _bb1525 _bb1526 ok
call _bb1522 _bb1523 _bb1525
END
catch # _bbmacro26 _bb1511 _bb1521
BEGIN _bb1529
BEGIN _bb1532
BUILTIN x I1
BUILTIN y I2
return # this
END
new A _bb1532
BEGIN _bb1535
BUILTIN _bb1536 "Assertion failed"
fail # _bb1536
END
BUILTIN _bb1538 Bfalse
BUILTIN _bb1540 I1
get _bb1541 A x
eq _bb1539 _bb1541 _bb1540
eq _bb1537 _bb1539 _bb1538
if # _bb1537 _bb1535
clear # A
BEGIN _bb1543
BUILTIN _bb1544 "Assertion failed"
fail # _bb1544
END
BUILTIN _bb1546 Bfalse
BEGIN _bb1549
BEGIN _bb1550
BUILTIN _bb1551 Btrue
return # _bb1551
END
BEGIN _bb1552
BUILTIN _bb1553 Bfalse
return # _bb1553
END
get _bb1554 A x
catch # _bb1554 _bb1550 _bb1552
END
try _bb1547 _bb1549
eq _bb1545 _bb1547 _bb1546
if # _bb1545 _bb1543
BEGIN _bb1557
BUILTIN x I1
BUILTIN y I2
return # this
END
new B _bb1557
move C B
BEGIN _bb1561
BUILTIN _bb1562 "Assertion failed"
fail # _bb1562
END
BUILTIN _bb1564 Bfalse
BEGIN _bb1567
BEGIN _bb1568
BUILTIN _bb1569 Btrue
return # _bb1569
END
BEGIN _bb1570
BUILTIN _bb1571 Bfalse
return # _bb1571
END
get _bb1572 B x
catch # _bb1572 _bb1568 _bb1570
END
try _bb1565 _bb1567
eq _bb1563 _bb1565 _bb1564
if # _bb1563 _bb1561
BEGIN _bb1573
BUILTIN _bb1574 "Assertion failed"
fail # _bb1574
END
BUILTIN _bb1576 Bfalse
BUILTIN _bb1578 I1
get _bb1579 C x
eq _bb1577 _bb1579 _bb1578
eq _bb1575 _bb1577 _bb1576
if # _bb1575 _bb1573
BUILTIN _bb1580 Btrue
return # _bb1580
END
try _bbmacro27 _bb1529
BEGIN _bb1581
BEGIN _bb1583
str _bb1585 _bbmacro27
BUILTIN _bb1587 "\n"
BUILTIN _bb1588 "Clear"
add _bb1586 _bb1588 _bb1587
add _bb1584 _bb1586 _bb1585
list args _bb1584
END
get _bb1590 bb logger
get _bb1589 _bb1590 fail
call _bb1582 _bb1583 _bb1589
END
BEGIN _bb1591
BEGIN _bb1593
BUILTIN _bb1594 "Clear"
list args _bb1594
END
get _bb1596 bb logger
get _bb1595 _bb1596 ok
call _bb1592 _bb1593 _bb1595
END
catch # _bbmacro27 _bb1581 _bb1591
BEGIN _bb1599
BEGIN _bb1600
next A args
move A A
len _bb1601 A
return # _bb1601
END
IS waslength _bb1600
BUILTIN _bb1602 I1
BUILTIN _bb1603 I2
BUILTIN _bb1604 I3
list A _bb1602 _bb1603 _bb1604
BEGIN _bb1606
BUILTIN _bb1607 "Assertion failed"
fail # _bb1607
END
BUILTIN _bb1609 Bfalse
BUILTIN _bb1611 I3
len _bb1612 A
eq _bb1610 _bb1612 _bb1611
eq _bb1608 _bb1610 _bb1609
if # _bb1608 _bb1606
BEGIN _bb1613
BUILTIN _bb1614 "Assertion failed"
fail # _bb1614
END
BUILTIN _bb1616 Bfalse
BUILTIN _bb1618 I3
BEGIN _bb1620
list args A
END
call _bb1619 _bb1620 waslength
eq _bb1617 _bb1619 _bb1618
eq _bb1615 _bb1617 _bb1616
if # _bb1615 _bb1613
BEGIN _bb1621
BUILTIN _bb1622 "Assertion failed"
fail # _bb1622
END
BUILTIN _bb1624 Bfalse
BUILTIN _bb1626 I0
len _bb1627 A
eq _bb1625 _bb1627 _bb1626
eq _bb1623 _bb1625 _bb1624
if # _bb1623 _bb1621
BUILTIN _bb1628 Btrue
return # _bb1628
END
try _bbmacro28 _bb1599
BEGIN _bb1629
BEGIN _bb1631
str _bb1633 _bbmacro28
BUILTIN _bb1635 "\n"
BUILTIN _bb1636 "Move "
add _bb1634 _bb1636 _bb1635
add _bb1632 _bb1634 _bb1633
list args _bb1632
END
get _bb1638 bb logger
get _bb1637 _bb1638 fail
call _bb1630 _bb1631 _bb1637
END
BEGIN _bb1639
BEGIN _bb1641
BUILTIN _bb1642 "Move "
list args _bb1642
END
get _bb1644 bb logger
get _bb1643 _bb1644 ok
call _bb1640 _bb1641 _bb1643
END
catch # _bbmacro28 _bb1629 _bb1639
BEGIN _bb1647
BUILTIN _bb1648 I1
BUILTIN _bb1649 I2
BUILTIN _bb1650 I3
list A _bb1648 _bb1649 _bb1650
BEGIN _bb1653
list args A
END
BEGIN _bb1656
BUILTIN _bb1657 I4
list args _bb1657
END
get _bb1659 bb collection
get _bb1658 _bb1659 toback
call _bb1655 _bb1656 _bb1658
call _bb1652 _bb1653 _bb1655
IS A _bb1652
BEGIN _bb1660
BUILTIN _bb1661 "Assertion failed"
fail # _bb1661
END
BUILTIN _bb1663 Bfalse
BUILTIN _bb1665 I4
pop _bb1666 A
eq _bb1664 _bb1666 _bb1665
eq _bb1662 _bb1664 _bb1663
if # _bb1662 _bb1660
BUILTIN _bb1667 Btrue
return # _bb1667
END
try _bbmacro29 _bb1647
BEGIN _bb1668
BEGIN _bb1670
str _bb1672 _bbmacro29
BUILTIN _bb1674 "\n"
BUILTIN _bb1675 "Collection"
add _bb1673 _bb1675 _bb1674
add _bb1671 _bb1673 _bb1672
list args _bb1671
END
get _bb1677 bb logger
get _bb1676 _bb1677 fail
call _bb1669 _bb1670 _bb1676
END
BEGIN _bb1678
BEGIN _bb1680
BUILTIN _bb1681 "Collection"
list args _bb1681
END
get _bb1683 bb logger
get _bb1682 _bb1683 ok
call _bb1679 _bb1680 _bb1682
END
catch # _bbmacro29 _bb1668 _bb1678
BEGIN _bb1686
BUILTIN A "I like banana!"
BEGIN _bb1688
BUILTIN _bb1689 "Assertion failed"
fail # _bb1689
END
BUILTIN _bb1691 Bfalse
BEGIN _bb1693
list args A
END
BEGIN _bb1696
BUILTIN _bb1697 "I like"
list args _bb1697
END
get _bb1699 bb string
get _bb1698 _bb1699 starts
call _bb1695 _bb1696 _bb1698
call _bb1692 _bb1693 _bb1695
eq _bb1690 _bb1692 _bb1691
if # _bb1690 _bb1688
BEGIN _bb1700
BUILTIN _bb1701 "Assertion failed"
fail # _bb1701
END
BUILTIN _bb1703 Bfalse
BEGIN _bb1705
list args A
END
BEGIN _bb1708
BUILTIN _bb1709 "banana!"
list args _bb1709
END
get _bb1711 bb string
get _bb1710 _bb1711 ends
call _bb1707 _bb1708 _bb1710
call _bb1704 _bb1705 _bb1707
eq _bb1702 _bb1704 _bb1703
if # _bb1702 _bb1700
BEGIN _bb1712
BUILTIN _bb1713 "Assertion failed"
fail # _bb1713
END
BUILTIN _bb1715 Bfalse
BUILTIN _bb1717 Bfalse
BEGIN _bb1719
list args A
END
BEGIN _bb1722
BUILTIN _bb1723 "w"
list args _bb1723
END
get _bb1725 bb string
get _bb1724 _bb1725 ends
call _bb1721 _bb1722 _bb1724
call _bb1718 _bb1719 _bb1721
eq _bb1716 _bb1718 _bb1717
eq _bb1714 _bb1716 _bb1715
if # _bb1714 _bb1712
BEGIN _bb1726
BUILTIN _bb1727 "Assertion failed"
fail # _bb1727
END
BUILTIN _bb1729 Bfalse
BUILTIN _bb1731 I2
BEGIN _bb1733
list args A
END
BEGIN _bb1736
BUILTIN _bb1737 "like"
list args _bb1737
END
get _bb1739 bb string
get _bb1738 _bb1739 index
call _bb1735 _bb1736 _bb1738
call _bb1732 _bb1733 _bb1735
eq _bb1730 _bb1732 _bb1731
eq _bb1728 _bb1730 _bb1729
if # _bb1728 _bb1726
BEGIN _bb1740
BUILTIN _bb1741 "Assertion failed"
fail # _bb1741
END
BUILTIN _bb1743 Bfalse
BUILTIN _bb1745 I10
BEGIN _bb1747
list args A
END
BEGIN _bb1750
BUILTIN _bb1751 "an"
list args _bb1751
BUILTIN pos I9
END
get _bb1754 bb string
get _bb1753 _bb1754 index
call _bb1749 _bb1750 _bb1753
call _bb1746 _bb1747 _bb1749
eq _bb1744 _bb1746 _bb1745
eq _bb1742 _bb1744 _bb1743
if # _bb1742 _bb1740
BEGIN _bb1755
BUILTIN _bb1756 "Assertion failed"
fail # _bb1756
END
BUILTIN _bb1758 Bfalse
BUILTIN _bb1760 I3
BEGIN _bb1763
list args A
END
BEGIN _bb1766
BUILTIN _bb1767 " "
list args _bb1767
END
get _bb1769 bb string
get _bb1768 _bb1769 split
call _bb1765 _bb1766 _bb1768
call _bb1762 _bb1763 _bb1765
len _bb1761 _bb1762
eq _bb1759 _bb1761 _bb1760
eq _bb1757 _bb1759 _bb1758
if # _bb1757 _bb1755
BUILTIN _bb1770 Btrue
return # _bb1770
END
try _bbmacro30 _bb1686
BEGIN _bb1771
BEGIN _bb1773
str _bb1775 _bbmacro30
BUILTIN _bb1777 "\n"
BUILTIN _bb1778 "Stringutil"
add _bb1776 _bb1778 _bb1777
add _bb1774 _bb1776 _bb1775
list args _bb1774
END
get _bb1780 bb logger
get _bb1779 _bb1780 fail
call _bb1772 _bb1773 _bb1779
END
BEGIN _bb1781
BEGIN _bb1783
BUILTIN _bb1784 "Stringutil"
list args _bb1784
END
get _bb1786 bb logger
get _bb1785 _bb1786 ok
call _bb1782 _bb1783 _bb1785
END
catch # _bbmacro30 _bb1771 _bb1781
BEGIN _bb1789
BEGIN _bb1792
BUILTIN value I0
BEGIN _bb1794
next x args
get _bb1795 this value
add _bb1795 _bb1795 x
set # this value _bb1795
END
IS add _bb1794
return # this
END
new accum _bb1792
final # accum
BUILTIN _bb1797 I10
range _bb1796 _bb1797
iter _bbmacro32 _bb1796
BEGIN _bb1801
BEGIN _bb1802
next _bb1803 _bbmacro32
AS i _bb1803
exists _bb1804 i
END
BEGIN _bb1805
BEGIN _bb1807
list args i
END
get _bb1808 accum add
call _bb1806 _bb1807 _bb1808
END
while # _bb1802 _bb1805
END
try _bb1799 _bb1801
BEGIN _bb1809
BUILTIN _bb1810 "Assertion failed"
fail # _bb1810
END
BUILTIN _bb1812 Bfalse
BUILTIN _bb1814 I45
get _bb1815 accum value
eq _bb1813 _bb1815 _bb1814
eq _bb1811 _bb1813 _bb1812
if # _bb1811 _bb1809
BUILTIN _bb1816 Btrue
return # _bb1816
END
try _bbmacro31 _bb1789
BEGIN _bb1817
BEGIN _bb1819
str _bb1821 _bbmacro31
BUILTIN _bb1823 "\n"
BUILTIN _bb1824 "Atomicity"
add _bb1822 _bb1824 _bb1823
add _bb1820 _bb1822 _bb1821
list args _bb1820
END
get _bb1826 bb logger
get _bb1825 _bb1826 fail
call _bb1818 _bb1819 _bb1825
END
BEGIN _bb1827
BEGIN _bb1829
BUILTIN _bb1830 "Atomicity"
list args _bb1830
END
get _bb1832 bb logger
get _bb1831 _bb1832 ok
call _bb1828 _bb1829 _bb1831
END
catch # _bbmacro31 _bb1817 _bb1827
BEGIN _bb1835
BEGIN _bb1838
BEGIN _bb1839
BEGIN _bb1841
list args B
END
call _bb1840 _bb1841 extern2
return # _bb1840
END
IS foo1 _bb1839
BEGIN _bb1842
BEGIN _bb1844
list args this
END
call _bb1843 _bb1844 extern3
return # _bb1843
END
IS foo2 _bb1842
BEGIN _bb1845
get _bb1847 B foo1
call _bb1846 # _bb1847
return # _bb1846
END
IS foo3 _bb1845
return # this
END
new A _bb1838
final # A
BEGIN _bb1850
BEGIN _bb1851
BEGIN _bb1853
list args A
END
call _bb1852 _bb1853 extern2
return # _bb1852
END
IS foo1 _bb1851
BEGIN _bb1854
BEGIN _bb1856
list args this
END
call _bb1855 _bb1856 extern3
return # _bb1855
END
IS foo2 _bb1854
BEGIN _bb1857
BUILTIN _bb1858 I1
return # _bb1858
END
IS foo3 _bb1857
return # this
END
new B _bb1850
final # B
BEGIN _bb1859
next obj args
get _bb1861 obj foo1
call _bb1860 # _bb1861
return # _bb1860
END
IS extern1 _bb1859
final # extern1
BEGIN _bb1862
next obj args
get _bb1864 obj foo2
call _bb1863 # _bb1864
return # _bb1863
END
IS extern2 _bb1862
final # extern2
BEGIN _bb1865
next obj args
get _bb1867 obj foo3
call _bb1866 # _bb1867
return # _bb1866
END
IS extern3 _bb1865
final # extern3
BEGIN _bb1868
BUILTIN _bb1869 "Assertion failed"
fail # _bb1869
END
BUILTIN _bb1871 Bfalse
BUILTIN _bb1873 I1
BEGIN _bb1875
list args A
END
call _bb1874 _bb1875 extern1
eq _bb1872 _bb1874 _bb1873
eq _bb1870 _bb1872 _bb1871
if # _bb1870 _bb1868
BUILTIN _bb1876 Btrue
return # _bb1876
END
try _bbmacro33 _bb1835
BEGIN _bb1877
BEGIN _bb1879
str _bb1881 _bbmacro33
BUILTIN _bb1883 "\n"
BUILTIN _bb1884 "No deadlock"
add _bb1882 _bb1884 _bb1883
add _bb1880 _bb1882 _bb1881
list args _bb1880
END
get _bb1886 bb logger
get _bb1885 _bb1886 fail
call _bb1878 _bb1879 _bb1885
END
BEGIN _bb1887
BEGIN _bb1889
BUILTIN _bb1890 "No deadlock"
list args _bb1890
END
get _bb1892 bb logger
get _bb1891 _bb1892 ok
call _bb1888 _bb1889 _bb1891
END
catch # _bbmacro33 _bb1877 _bb1887
BEGIN _bb1895
BUILTIN _bb1897 "vfs://test.txt"
file f1 _bb1897
BUILTIN _bb1898 "Virtual data."
push # f1 _bb1898
BUILTIN _bb1900 "vfs://test.txt"
file f2 _bb1900
BEGIN _bb1901
BUILTIN _bb1902 "Assertion failed"
fail # _bb1902
END
BUILTIN _bb1904 Bfalse
BUILTIN _bb1906 "Virtual data."
BEGIN _bb1908
list args f2
END
get _bb1910 bb os
get _bb1909 _bb1910 read
call _bb1907 _bb1908 _bb1909
eq _bb1905 _bb1907 _bb1906
eq _bb1903 _bb1905 _bb1904
if # _bb1903 _bb1901
BUILTIN _bb1911 Btrue
return # _bb1911
END
try _bbmacro34 _bb1895
BEGIN _bb1912
BEGIN _bb1914
str _bb1916 _bbmacro34
BUILTIN _bb1918 "\n"
BUILTIN _bb1919 "VFS"
add _bb1917 _bb1919 _bb1918
add _bb1915 _bb1917 _bb1916
list args _bb1915
END
get _bb1921 bb logger
get _bb1920 _bb1921 fail
call _bb1913 _bb1914 _bb1920
END
BEGIN _bb1922
BEGIN _bb1924
BUILTIN _bb1925 "VFS"
list args _bb1925
END
get _bb1927 bb logger
get _bb1926 _bb1927 ok
call _bb1923 _bb1924 _bb1926
END
catch # _bbmacro34 _bb1912 _bb1922
BEGIN _bb1930
BUILTIN _bb1931 "bb://.cache/database.db"
sqlite db _bb1931
BUILTIN _bb1934 "CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY, name TEXT, age INTEGER);"
push _bb1933 db _bb1934
BUILTIN n I10000
time start
BUILTIN _bb1938 "BEGIN TRANSACTION;"
push _bb1937 db _bb1938
range _bb1939 n
iter _bbmacro36 _bb1939
BEGIN _bb1941
next _bb1942 _bbmacro36
AS i _bb1942
exists _bb1943 i
END
BEGIN _bb1944
BUILTIN _bb1947 ");"
BUILTIN _bb1951 I10
mod _bb1950 i _bb1951
BUILTIN _bb1952 I20
add _bb1949 _bb1952 _bb1950
str _bb1953 _bb1949
BUILTIN _bb1955 "', "
str _bb1957 i
BUILTIN _bb1958 "INSERT INTO users (name, age) VALUES ('User"
add _bb1956 _bb1958 _bb1957
add _bb1954 _bb1956 _bb1955
add _bb1948 _bb1954 _bb1953
add _bb1946 _bb1948 _bb1947
push _bb1945 db _bb1946
BUILTIN _bb1961 ";"
str _bb1963 i
BUILTIN _bb1964 "SELECT * FROM users WHERE id = "
add _bb1962 _bb1964 _bb1963
add _bb1960 _bb1962 _bb1961
push _bb1959 db _bb1960
BUILTIN _bb1967 ";"
str _bb1969 i
BUILTIN _bb1970 "UPDATE users SET age = age + 1 WHERE id = "
add _bb1968 _bb1970 _bb1969
add _bb1966 _bb1968 _bb1967
push _bb1965 db _bb1966
END
while # _bb1941 _bb1944
BUILTIN _bb1972 "COMMIT;"
push _bb1971 db _bb1972
time _bb1974
sub eta _bb1974 start
BEGIN _bb1975
BUILTIN _bb1976 "Assertion failed"
fail # _bb1976
END
BUILTIN _bb1978 Bfalse
BUILTIN _bb1980 I1
lt _bb1979 eta _bb1980
eq _bb1977 _bb1979 _bb1978
if # _bb1977 _bb1975
BEGIN _bb1981
BUILTIN _bb1982 "Assertion failed"
fail # _bb1982
END
BUILTIN _bb1984 Bfalse
BUILTIN _bb1988 "SELECT * FROM users;"
push _bb1987 db _bb1988
len _bb1986 _bb1987
eq _bb1985 n _bb1986
eq _bb1983 _bb1985 _bb1984
if # _bb1983 _bb1981
BUILTIN _bb1990 "DELETE FROM users;"
push _bb1989 db _bb1990
BUILTIN _bb1991 Btrue
return # _bb1991
END
try _bbmacro35 _bb1930
BEGIN _bb1992
BEGIN _bb1994
str _bb1996 _bbmacro35
BUILTIN _bb1998 "\n"
BUILTIN _bb1999 "Database"
add _bb1997 _bb1999 _bb1998
add _bb1995 _bb1997 _bb1996
list args _bb1995
END
get _bb2001 bb logger
get _bb2000 _bb2001 fail
call _bb1993 _bb1994 _bb2000
END
BEGIN _bb2002
BEGIN _bb2004
BUILTIN _bb2005 "Database"
list args _bb2005
END
get _bb2007 bb logger
get _bb2006 _bb2007 ok
call _bb2003 _bb2004 _bb2006
END
catch # _bbmacro35 _bb1992 _bb2002
