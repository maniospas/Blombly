BEGIN _bb40
BEGIN _bb43
BUILTIN lightred "\e[0;91m"
final # lightred
BUILTIN lightgreen "\e[0;92m"
final # lightgreen
BUILTIN reset "\e[0m"
final # reset
return # this
END
new ansi _bb43
final # ansi
BEGIN _bb63
BEGIN _bb64
next element args
BEGIN _bb67
get _bb68 this element
IS .element _bb68
BEGIN _bb69
next A args
get _bb70 this .element
IS ..element _bb70
push _bb71 A ..element
return # A
END
IS call _bb69
return # this
END
new _bb65 _bb67
return # _bb65
END
IS toback _bb64
final # toback
BEGIN _bb72
next func args
BEGIN _bb75
get _bb76 this func
IS .func _bb76
BEGIN _bb77
next A args
get _bb78 this .func
IS ..func _bb78
list ret
iter _bbmacro0 A
BEGIN _bb81
next _bb82 _bbmacro0
AS x _bb82
exists _bb83 x
END
BEGIN _bb84
BEGIN _bb87
list args x
END
call _bb86 _bb87 ..func
push _bb85 ret _bb86
END
while # _bb81 _bb84
return # ret
END
IS call _bb77
return # this
END
new _bb73 _bb75
return # _bb73
END
IS transform _bb72
final # transform
return # this
END
new collection _bb63
final # collection
BEGIN _bb88
next path args
str path path
BEGIN _bb91
sqlite connector path
return # this
END
new _bb89 _bb91
return # _bb89
END
IS db _bb88
final # db
BEGIN _bb204
BEGIN _bb205
next text args
str text text
BUILTIN _bb207 ""
str _bb209 text
BUILTIN _bb211 "  ] "
get _bb214 bb ansi
get _bb213 _bb214 reset
str _bb215 _bb213
BUILTIN _bb217 "ok"
get _bb220 bb ansi
get _bb219 _bb220 lightgreen
str _bb221 _bb219
BUILTIN _bb222 "[  "
add _bb218 _bb222 _bb221
add _bb216 _bb218 _bb217
add _bb212 _bb216 _bb215
add _bb210 _bb212 _bb211
add _bb208 _bb210 _bb209
add _bb206 _bb208 _bb207
print # _bb206
END
IS ok _bb205
final # ok
BEGIN _bb223
next text args
str text text
BUILTIN _bb225 ""
str _bb227 text
BUILTIN _bb229 " ] "
get _bb232 bb ansi
get _bb231 _bb232 reset
str _bb233 _bb231
BUILTIN _bb235 "fail"
get _bb238 bb ansi
get _bb237 _bb238 lightred
str _bb239 _bb237
BUILTIN _bb240 "[ "
add _bb236 _bb240 _bb239
add _bb234 _bb236 _bb235
add _bb230 _bb234 _bb233
add _bb228 _bb230 _bb229
add _bb226 _bb228 _bb227
add _bb224 _bb226 _bb225
print # _bb224
END
IS fail _bb223
final # fail
return # this
END
new logger _bb204
final # logger
BEGIN _bb297
BEGIN _bb298
next path args
str path path
file path path
return # path
END
IS call _bb298
BEGIN _bb306
next path args
str path path
file path path
BUILTIN ret ""
iter _bbmacro2 path
BEGIN _bb309
next _bb310 _bbmacro2
AS line _bb310
exists _bb311 line
END
BEGIN _bb312
BEGIN _bb313
BUILTIN _bb314 "\n"
add ret ret _bb314
END
len _bb316 ret
bool _bb315 _bb316
if # _bb315 _bb313
add ret ret line
END
while # _bb309 _bb312
return # ret
END
IS read _bb306
final # read
return # this
END
new os _bb297
final # os
BEGIN _bb365
BEGIN _bb366
next value args
str value value
return # value
END
IS call _bb366
BEGIN _bb429
next query args
str query query
BEGIN _bb432
get _bb433 this query
IS .query _bb433
BEGIN _bb434
BUILTIN _bb435 "Assertion failed"
fail # _bb435
END
BUILTIN _bb437 Bfalse
BUILTIN _bb439 I0
len _bb440 args
eq _bb438 _bb440 _bb439
eq _bb436 _bb438 _bb437
if # _bb436 _bb434
BEGIN _bb441
next search args
str search search
get _bb442 this .query
IS ..query _bb442
BEGIN _bb443
BUILTIN _bb444 "Assertion failed"
fail # _bb444
END
BUILTIN _bb446 Bfalse
BUILTIN _bb448 I0
len _bb449 args
eq _bb447 _bb449 _bb448
eq _bb445 _bb447 _bb446
if # _bb445 _bb443
IS query ..query
len nsearch search
len nquery query
BEGIN _bb452
BUILTIN _bb453 Bfalse
return # _bb453
END
lt _bb454 nsearch nquery
if # _bb454 _bb452
range _bb455 nquery
iter _bbmacro4 _bb455
BEGIN _bb457
next _bb458 _bbmacro4
AS i _bb458
exists _bb459 i
END
BEGIN _bb460
BEGIN _bb461
BUILTIN _bb462 Bfalse
return # _bb462
END
at _bb464 search i
at _bb465 query i
neq _bb463 _bb465 _bb464
if # _bb463 _bb461
END
while # _bb457 _bb460
BUILTIN _bb466 Btrue
return # _bb466
END
IS call _bb441
return # this
END
new _bb430 _bb432
return # _bb430
END
IS starts _bb429
final # starts
BEGIN _bb467
next query args
str query query
BEGIN _bb470
get _bb471 this query
IS .query _bb471
BEGIN _bb472
BUILTIN _bb473 "Assertion failed"
fail # _bb473
END
BUILTIN _bb475 Bfalse
BUILTIN _bb477 I0
len _bb478 args
eq _bb476 _bb478 _bb477
eq _bb474 _bb476 _bb475
if # _bb474 _bb472
BEGIN _bb479
next search args
str search search
get _bb480 this .query
IS ..query _bb480
BEGIN _bb481
BUILTIN _bb482 "Assertion failed"
fail # _bb482
END
BUILTIN _bb484 Bfalse
BUILTIN _bb486 I0
len _bb487 args
eq _bb485 _bb487 _bb486
eq _bb483 _bb485 _bb484
if # _bb483 _bb481
IS query ..query
len nsearch search
len nquery query
BEGIN _bb490
BUILTIN _bb491 Bfalse
return # _bb491
END
lt _bb492 nsearch nquery
if # _bb492 _bb490
range _bb493 nquery
iter _bbmacro5 _bb493
BEGIN _bb495
next _bb496 _bbmacro5
AS i _bb496
exists _bb497 i
END
BEGIN _bb498
BEGIN _bb499
BUILTIN _bb500 Bfalse
return # _bb500
END
sub _bb504 nsearch nquery
add _bb503 _bb504 i
at _bb502 search _bb503
at _bb505 query i
neq _bb501 _bb505 _bb502
if # _bb501 _bb499
END
while # _bb495 _bb498
BUILTIN _bb506 Btrue
return # _bb506
END
IS call _bb479
return # this
END
new _bb468 _bb470
return # _bb468
END
IS ends _bb467
final # ends
BEGIN _bb507
next query args
str query query
BEGIN _bb510
get _bb511 this query
IS .query _bb511
BEGIN _bb512
BUILTIN _bb513 "Assertion failed"
fail # _bb513
END
BUILTIN _bb515 Bfalse
BUILTIN _bb517 I0
len _bb518 args
eq _bb516 _bb518 _bb517
eq _bb514 _bb516 _bb515
if # _bb514 _bb512
BEGIN _bb519
BUILTIN pos I0
END
BEGIN _bb521
int pos pos
END
catch # pos _bb519 _bb521
BEGIN _bb523
next search args
str search search
get _bb524 this .query
IS ..query _bb524
BEGIN _bb525
BUILTIN _bb526 "Assertion failed"
fail # _bb526
END
BUILTIN _bb528 Bfalse
BUILTIN _bb530 I0
len _bb531 args
eq _bb529 _bb531 _bb530
eq _bb527 _bb529 _bb528
if # _bb527 _bb525
IS query ..query
get _bb532 this pos
IS pos _bb532
len nsearch search
len nquery query
BUILTIN _bb537 I1
sub _bb538 nsearch nquery
add _bb536 _bb538 _bb537
range _bb535 pos _bb536
iter _bbmacro6 _bb535
BEGIN _bb540
next _bb541 _bbmacro6
AS i _bb541
exists _bb542 i
END
BEGIN _bb543
range _bb544 nquery
iter _bbmacro7 _bb544
BEGIN _bb548
BEGIN _bb549
next _bb550 _bbmacro7
AS j _bb550
exists _bb551 j
END
BEGIN _bb552
BEGIN _bb553
BUILTIN _bb554 Btrue
return # _bb554
END
add _bb557 i j
at _bb556 search _bb557
at _bb558 query j
neq _bb555 _bb558 _bb556
if # _bb555 _bb553
END
while # _bb549 _bb552
END
do different _bb548
BEGIN _bb559
return # i
END
catch # different _bb559
END
while # _bb540 _bb543
return # nsearch
END
IS call _bb523
return # this
END
new _bb508 _bb510
return # _bb508
END
IS index _bb507
final # index
BEGIN _bb560
next query args
str query query
BEGIN _bb563
get _bb564 this query
IS .query _bb564
BEGIN _bb565
BUILTIN _bb566 "Assertion failed"
fail # _bb566
END
BUILTIN _bb568 Bfalse
BUILTIN _bb570 I0
len _bb571 args
eq _bb569 _bb571 _bb570
eq _bb567 _bb569 _bb568
if # _bb567 _bb565
BEGIN _bb572
BUILTIN maxsplits I0
END
catch # maxsplits _bb572
BEGIN _bb574
next search args
str search search
get _bb575 this .query
IS ..query _bb575
IS query ..query
len nsearch search
len nquery query
BEGIN _bb578
BUILTIN _bb579 "Cannot split on a zero-length string"
fail # _bb579
END
BUILTIN _bb581 I0
eq _bb580 nquery _bb581
if # _bb580 _bb578
list ret
BUILTIN pos I0
BEGIN _bb584
lt _bb585 pos nsearch
END
BEGIN _bb586
IS prev_pos pos
BEGIN _bb588
list args search
END
BEGIN _bb591
list args query
IS pos pos
END
get _bb593 bb string
get _bb592 _bb593 index
call _bb590 _bb591 _bb592
call _bb587 _bb588 _bb590
IS pos _bb587
range _bb595 prev_pos pos
at _bb594 search _bb595
IS s _bb594
push _bb596 ret s
add pos pos nquery
END
while # _bb584 _bb586
return # ret
END
IS call _bb574
return # this
END
new _bb561 _bb563
return # _bb561
END
IS split _bb560
final # split
return # this
END
new string _bb365
final # string
return # this
END
new bb _bb40
final # bb
BEGIN _bb832
BEGIN _bb833
next x args
BEGIN _bb834
BUILTIN bias I1
END
catch # bias _bb834
add _bb836 x bias
return # _bb836
END
IS inc _bb833
BEGIN _bb837
BUILTIN _bb838 "Assertion failed"
fail # _bb838
END
BUILTIN _bb840 Bfalse
BUILTIN _bb842 I1
BEGIN _bb844
BUILTIN _bb845 I0
list args _bb845
END
call _bb843 _bb844 inc
eq _bb841 _bb843 _bb842
eq _bb839 _bb841 _bb840
if # _bb839 _bb837
BEGIN _bb846
BUILTIN _bb847 "Assertion failed"
fail # _bb847
END
BUILTIN _bb849 Bfalse
BUILTIN _bb851 I2
BEGIN _bb853
BUILTIN _bb854 I0
list args _bb854
BUILTIN bias I2
END
call _bb852 _bb853 inc
eq _bb850 _bb852 _bb851
eq _bb848 _bb850 _bb849
if # _bb848 _bb846
BUILTIN _bb856 Btrue
return # _bb856
END
do _bbmacro13 _bb832
BEGIN _bb857
BEGIN _bb859
str _bb861 _bbmacro13
BUILTIN _bb863 "\n"
BUILTIN _bb864 "Default"
add _bb862 _bb864 _bb863
add _bb860 _bb862 _bb861
list args _bb860
END
get _bb866 bb logger
get _bb865 _bb866 fail
call _bb858 _bb859 _bb865
END
BEGIN _bb867
BEGIN _bb869
BUILTIN _bb870 "Default"
list args _bb870
END
get _bb872 bb logger
get _bb871 _bb872 ok
call _bb868 _bb869 _bb871
END
catch # _bbmacro13 _bb857 _bb867
BEGIN _bb875
BUILTIN A "0"
BUILTIN _bb877 "1"
add A A _bb877
BUILTIN _bb878 "2"
add A A _bb878
BUILTIN _bb879 "3"
add A A _bb879
BUILTIN _bb880 "4"
add A A _bb880
BUILTIN _bb881 "5"
add A A _bb881
BUILTIN _bb882 "6"
add A A _bb882
BUILTIN _bb883 "7"
add A A _bb883
BUILTIN _bb884 "8"
add A A _bb884
BUILTIN _bb885 "9"
add A A _bb885
BEGIN _bb886
BUILTIN _bb887 "Assertion failed"
fail # _bb887
END
BUILTIN _bb889 Bfalse
BUILTIN _bb891 "0123456789"
eq _bb890 A _bb891
eq _bb888 _bb890 _bb889
if # _bb888 _bb886
BEGIN _bb892
BUILTIN _bb893 "Assertion failed"
fail # _bb893
END
BUILTIN _bb895 Bfalse
BUILTIN _bb897 I10
len _bb898 A
eq _bb896 _bb898 _bb897
eq _bb894 _bb896 _bb895
if # _bb894 _bb892
BUILTIN _bb899 Btrue
return # _bb899
END
do _bbmacro14 _bb875
BEGIN _bb900
BEGIN _bb902
str _bb904 _bbmacro14
BUILTIN _bb906 "\n"
BUILTIN _bb907 "String add"
add _bb905 _bb907 _bb906
add _bb903 _bb905 _bb904
list args _bb903
END
get _bb909 bb logger
get _bb908 _bb909 fail
call _bb901 _bb902 _bb908
END
BEGIN _bb910
BEGIN _bb912
BUILTIN _bb913 "String add"
list args _bb913
END
get _bb915 bb logger
get _bb914 _bb915 ok
call _bb911 _bb912 _bb914
END
catch # _bbmacro14 _bb900 _bb910
BEGIN _bb918
BUILTIN _bb919 I1
BUILTIN _bb920 I2
BUILTIN _bb921 I3
BUILTIN _bb922 I4
list A _bb919 _bb920 _bb921 _bb922
BEGIN _bb924
BUILTIN _bb925 "Assertion failed"
fail # _bb925
END
BUILTIN _bb927 Bfalse
BUILTIN _bb929 I2
BUILTIN _bb931 I1
at _bb930 A _bb931
eq _bb928 _bb930 _bb929
eq _bb926 _bb928 _bb927
if # _bb926 _bb924
BEGIN _bb932
BUILTIN _bb933 "Assertion failed"
fail # _bb933
END
BUILTIN _bb935 Bfalse
BUILTIN _bb937 I1
next _bb938 A
eq _bb936 _bb938 _bb937
eq _bb934 _bb936 _bb935
if # _bb934 _bb932
BEGIN _bb939
BUILTIN _bb940 "Assertion failed"
fail # _bb940
END
BUILTIN _bb942 Bfalse
BUILTIN _bb944 I2
next _bb945 A
eq _bb943 _bb945 _bb944
eq _bb941 _bb943 _bb942
if # _bb941 _bb939
BEGIN _bb946
BUILTIN _bb947 "Assertion failed"
fail # _bb947
END
BUILTIN _bb949 Bfalse
BUILTIN _bb951 I4
pop _bb952 A
eq _bb950 _bb952 _bb951
eq _bb948 _bb950 _bb949
if # _bb948 _bb946
BEGIN _bb953
BUILTIN _bb954 "Assertion failed"
fail # _bb954
END
BUILTIN _bb956 Bfalse
BUILTIN _bb958 I3
pop _bb959 A
eq _bb957 _bb959 _bb958
eq _bb955 _bb957 _bb956
if # _bb955 _bb953
BEGIN _bb960
BUILTIN _bb961 "Assertion failed"
fail # _bb961
END
BUILTIN _bb963 Bfalse
BUILTIN _bb965 I0
len _bb966 A
eq _bb964 _bb966 _bb965
eq _bb962 _bb964 _bb963
if # _bb962 _bb960
BUILTIN _bb967 I5
push # A _bb967
BEGIN _bb968
BUILTIN _bb969 "Assertion failed"
fail # _bb969
END
BUILTIN _bb971 Bfalse
BUILTIN _bb973 I5
pop _bb974 A
eq _bb972 _bb974 _bb973
eq _bb970 _bb972 _bb971
if # _bb970 _bb968
BUILTIN _bb975 Btrue
return # _bb975
END
do _bbmacro15 _bb918
BEGIN _bb976
BEGIN _bb978
str _bb980 _bbmacro15
BUILTIN _bb982 "\n"
BUILTIN _bb983 "List"
add _bb981 _bb983 _bb982
add _bb979 _bb981 _bb980
list args _bb979
END
get _bb985 bb logger
get _bb984 _bb985 fail
call _bb977 _bb978 _bb984
END
BEGIN _bb986
BEGIN _bb988
BUILTIN _bb989 "List"
list args _bb989
END
get _bb991 bb logger
get _bb990 _bb991 ok
call _bb987 _bb988 _bb990
END
catch # _bbmacro15 _bb976 _bb986
BEGIN _bb994
BUILTIN s I0
BUILTIN _bb997 I10
range _bb996 _bb997
iter _bbmacro17 _bb996
BEGIN _bb999
next _bb1000 _bbmacro17
AS i _bb1000
exists _bb1001 i
END
BEGIN _bb1002
add s s i
END
while # _bb999 _bb1002
BEGIN _bb1003
BUILTIN _bb1004 "Assertion failed"
fail # _bb1004
END
BUILTIN _bb1006 Bfalse
BUILTIN _bb1008 I45
eq _bb1007 s _bb1008
eq _bb1005 _bb1007 _bb1006
if # _bb1005 _bb1003
BUILTIN _bb1009 Btrue
return # _bb1009
END
do _bbmacro16 _bb994
BEGIN _bb1010
BEGIN _bb1012
str _bb1014 _bbmacro16
BUILTIN _bb1016 "\n"
BUILTIN _bb1017 "Range"
add _bb1015 _bb1017 _bb1016
add _bb1013 _bb1015 _bb1014
list args _bb1013
END
get _bb1019 bb logger
get _bb1018 _bb1019 fail
call _bb1011 _bb1012 _bb1018
END
BEGIN _bb1020
BEGIN _bb1022
BUILTIN _bb1023 "Range"
list args _bb1023
END
get _bb1025 bb logger
get _bb1024 _bb1025 ok
call _bb1021 _bb1022 _bb1024
END
catch # _bbmacro16 _bb1010 _bb1020
BEGIN _bb1028
BUILTIN _bb1029 I1
BUILTIN _bb1030 I2
BUILTIN _bb1031 I3
list A _bb1029 _bb1030 _bb1031
BUILTIN s I0
iter _bbmacro19 A
BEGIN _bb1035
next _bb1036 _bbmacro19
AS x _bb1036
exists _bb1037 x
END
BEGIN _bb1038
add s s x
END
while # _bb1035 _bb1038
iter it A
BEGIN _bb1040
next _bb1041 it
AS x _bb1041
exists _bb1042 x
END
BEGIN _bb1043
sub s s x
END
while # _bb1040 _bb1043
BEGIN _bb1044
BUILTIN _bb1045 "Assertion failed"
fail # _bb1045
END
BUILTIN _bb1047 Bfalse
BUILTIN _bb1049 I0
eq _bb1048 s _bb1049
eq _bb1046 _bb1048 _bb1047
if # _bb1046 _bb1044
BUILTIN _bb1050 Btrue
return # _bb1050
END
do _bbmacro18 _bb1028
BEGIN _bb1051
BEGIN _bb1053
str _bb1055 _bbmacro18
BUILTIN _bb1057 "\n"
BUILTIN _bb1058 "Iteration"
add _bb1056 _bb1058 _bb1057
add _bb1054 _bb1056 _bb1055
list args _bb1054
END
get _bb1060 bb logger
get _bb1059 _bb1060 fail
call _bb1052 _bb1053 _bb1059
END
BEGIN _bb1061
BEGIN _bb1063
BUILTIN _bb1064 "Iteration"
list args _bb1064
END
get _bb1066 bb logger
get _bb1065 _bb1066 ok
call _bb1062 _bb1063 _bb1065
END
catch # _bbmacro18 _bb1051 _bb1061
BEGIN _bb1069
map A
BUILTIN _bb1071 I1
BUILTIN _bb1072 "test"
put # A _bb1072 _bb1071
BEGIN _bb1073
BUILTIN _bb1074 "Assertion failed"
fail # _bb1074
END
BUILTIN _bb1076 Bfalse
BUILTIN _bb1078 I1
BUILTIN _bb1080 "test"
at _bb1079 A _bb1080
eq _bb1077 _bb1079 _bb1078
eq _bb1075 _bb1077 _bb1076
if # _bb1075 _bb1073
clear # A
BUILTIN _bb1082 "a"
BUILTIN _bb1083 I1
list _bb1084 _bb1082 _bb1083
BUILTIN _bb1085 "b"
BUILTIN _bb1086 I2
list _bb1087 _bb1085 _bb1086
BUILTIN _bb1088 "c"
BUILTIN _bb1089 I3
list _bb1090 _bb1088 _bb1089
list _bb1091 _bb1084 _bb1087 _bb1090
map A _bb1091
BEGIN _bb1093
BUILTIN _bb1094 "Assertion failed"
fail # _bb1094
END
BUILTIN _bb1096 Bfalse
BUILTIN _bb1098 I1
BUILTIN _bb1100 "a"
at _bb1099 A _bb1100
eq _bb1097 _bb1099 _bb1098
eq _bb1095 _bb1097 _bb1096
if # _bb1095 _bb1093
BEGIN _bb1101
BUILTIN _bb1102 "Assertion failed"
fail # _bb1102
END
BUILTIN _bb1104 Bfalse
BUILTIN _bb1106 I2
BUILTIN _bb1108 "b"
at _bb1107 A _bb1108
eq _bb1105 _bb1107 _bb1106
eq _bb1103 _bb1105 _bb1104
if # _bb1103 _bb1101
BEGIN _bb1109
BUILTIN _bb1110 "Assertion failed"
fail # _bb1110
END
BUILTIN _bb1112 Bfalse
BUILTIN _bb1114 I3
BUILTIN _bb1116 "c"
at _bb1115 A _bb1116
eq _bb1113 _bb1115 _bb1114
eq _bb1111 _bb1113 _bb1112
if # _bb1111 _bb1109
BUILTIN _bb1117 Btrue
return # _bb1117
END
do _bbmacro20 _bb1069
BEGIN _bb1118
BEGIN _bb1120
str _bb1122 _bbmacro20
BUILTIN _bb1124 "\n"
BUILTIN _bb1125 "Map"
add _bb1123 _bb1125 _bb1124
add _bb1121 _bb1123 _bb1122
list args _bb1121
END
get _bb1127 bb logger
get _bb1126 _bb1127 fail
call _bb1119 _bb1120 _bb1126
END
BEGIN _bb1128
BEGIN _bb1130
BUILTIN _bb1131 "Map"
list args _bb1131
END
get _bb1133 bb logger
get _bb1132 _bb1133 ok
call _bb1129 _bb1130 _bb1132
END
catch # _bbmacro20 _bb1118 _bb1128
BEGIN _bb1136
BUILTIN _bb1137 I0
BUILTIN _bb1138 I1
list _bb1139 _bb1137 _bb1138
vector A _bb1139
BUILTIN _bb1141 I2
BUILTIN _bb1142 I3
list _bb1143 _bb1141 _bb1142
vector B _bb1143
BEGIN _bb1145
BUILTIN _bb1146 "Assertion failed"
fail # _bb1146
END
BUILTIN _bb1148 Bfalse
BUILTIN _bb1150 I2
min _bb1151 B
eq _bb1149 _bb1151 _bb1150
eq _bb1147 _bb1149 _bb1148
if # _bb1147 _bb1145
BEGIN _bb1152
BUILTIN _bb1153 "Assertion failed"
fail # _bb1153
END
BUILTIN _bb1155 Bfalse
BUILTIN _bb1157 I3
max _bb1158 B
eq _bb1156 _bb1158 _bb1157
eq _bb1154 _bb1156 _bb1155
if # _bb1154 _bb1152
BEGIN _bb1159
BUILTIN _bb1160 "Assertion failed"
fail # _bb1160
END
BUILTIN _bb1162 Bfalse
BUILTIN _bb1164 I1
sum _bb1165 A
eq _bb1163 _bb1165 _bb1164
eq _bb1161 _bb1163 _bb1162
if # _bb1161 _bb1159
BEGIN _bb1166
BUILTIN _bb1167 "Assertion failed"
fail # _bb1167
END
BUILTIN _bb1169 Bfalse
BUILTIN _bb1171 I2
BUILTIN _bb1173 I0
add _bb1174 A B
at _bb1172 _bb1174 _bb1173
eq _bb1170 _bb1172 _bb1171
eq _bb1168 _bb1170 _bb1169
if # _bb1168 _bb1166
BEGIN _bb1175
BUILTIN _bb1176 "Assertion failed"
fail # _bb1176
END
BUILTIN _bb1178 Bfalse
BUILTIN _bb1180 I4
BUILTIN _bb1182 I1
add _bb1183 A B
at _bb1181 _bb1183 _bb1182
eq _bb1179 _bb1181 _bb1180
eq _bb1177 _bb1179 _bb1178
if # _bb1177 _bb1175
BEGIN _bb1184
BUILTIN _bb1185 "Assertion failed"
fail # _bb1185
END
BUILTIN _bb1187 Bfalse
BUILTIN _bb1189 I0
BUILTIN _bb1191 I0
mul _bb1192 A B
at _bb1190 _bb1192 _bb1191
eq _bb1188 _bb1190 _bb1189
eq _bb1186 _bb1188 _bb1187
if # _bb1186 _bb1184
BEGIN _bb1193
BUILTIN _bb1194 "Assertion failed"
fail # _bb1194
END
BUILTIN _bb1196 Bfalse
BUILTIN _bb1198 I3
BUILTIN _bb1200 I1
mul _bb1201 A B
at _bb1199 _bb1201 _bb1200
eq _bb1197 _bb1199 _bb1198
eq _bb1195 _bb1197 _bb1196
if # _bb1195 _bb1193
BEGIN _bb1202
BUILTIN _bb1203 "Assertion failed"
fail # _bb1203
END
BUILTIN _bb1205 Bfalse
BUILTIN _bb1207 I0
BUILTIN _bb1209 I0
div _bb1210 A B
at _bb1208 _bb1210 _bb1209
eq _bb1206 _bb1208 _bb1207
eq _bb1204 _bb1206 _bb1205
if # _bb1204 _bb1202
BEGIN _bb1211
BUILTIN _bb1212 "Assertion failed"
fail # _bb1212
END
BUILTIN _bb1214 Bfalse
BUILTIN _bb1217 I3
BUILTIN _bb1218 I1
div _bb1216 _bb1218 _bb1217
BUILTIN _bb1220 I1
div _bb1221 A B
at _bb1219 _bb1221 _bb1220
eq _bb1215 _bb1219 _bb1216
eq _bb1213 _bb1215 _bb1214
if # _bb1213 _bb1211
BEGIN _bb1222
BUILTIN _bb1223 "Assertion failed"
fail # _bb1223
END
BUILTIN _bb1225 Bfalse
BUILTIN _bb1227 I0
BUILTIN _bb1229 I0
pow _bb1230 A B
at _bb1228 _bb1230 _bb1229
eq _bb1226 _bb1228 _bb1227
eq _bb1224 _bb1226 _bb1225
if # _bb1224 _bb1222
BEGIN _bb1231
BUILTIN _bb1232 "Assertion failed"
fail # _bb1232
END
BUILTIN _bb1234 Bfalse
BUILTIN _bb1236 I1
BUILTIN _bb1238 I1
pow _bb1239 A B
at _bb1237 _bb1239 _bb1238
eq _bb1235 _bb1237 _bb1236
eq _bb1233 _bb1235 _bb1234
if # _bb1233 _bb1231
BEGIN _bb1240
BUILTIN _bb1241 "Assertion failed"
fail # _bb1241
END
BUILTIN _bb1243 Bfalse
BUILTIN _bb1245 I1
BUILTIN _bb1247 I0
lt _bb1248 A B
at _bb1246 _bb1248 _bb1247
eq _bb1244 _bb1246 _bb1245
eq _bb1242 _bb1244 _bb1243
if # _bb1242 _bb1240
BEGIN _bb1249
BUILTIN _bb1250 "Assertion failed"
fail # _bb1250
END
BUILTIN _bb1252 Bfalse
BUILTIN _bb1254 I1
BUILTIN _bb1256 I1
lt _bb1257 A B
at _bb1255 _bb1257 _bb1256
eq _bb1253 _bb1255 _bb1254
eq _bb1251 _bb1253 _bb1252
if # _bb1251 _bb1249
BEGIN _bb1258
BUILTIN _bb1259 "Assertion failed"
fail # _bb1259
END
BUILTIN _bb1261 Bfalse
BUILTIN _bb1263 I0
BUILTIN _bb1265 I0
gt _bb1266 A B
at _bb1264 _bb1266 _bb1265
eq _bb1262 _bb1264 _bb1263
eq _bb1260 _bb1262 _bb1261
if # _bb1260 _bb1258
BEGIN _bb1267
BUILTIN _bb1268 "Assertion failed"
fail # _bb1268
END
BUILTIN _bb1270 Bfalse
BUILTIN _bb1272 I0
BUILTIN _bb1274 I1
gt _bb1275 A B
at _bb1273 _bb1275 _bb1274
eq _bb1271 _bb1273 _bb1272
eq _bb1269 _bb1271 _bb1270
if # _bb1269 _bb1267
BEGIN _bb1276
BUILTIN _bb1277 "Assertion failed"
fail # _bb1277
END
BUILTIN _bb1279 Bfalse
BUILTIN _bb1281 I1
BUILTIN _bb1283 I0
le _bb1284 A B
at _bb1282 _bb1284 _bb1283
eq _bb1280 _bb1282 _bb1281
eq _bb1278 _bb1280 _bb1279
if # _bb1278 _bb1276
BEGIN _bb1285
BUILTIN _bb1286 "Assertion failed"
fail # _bb1286
END
BUILTIN _bb1288 Bfalse
BUILTIN _bb1290 I1
BUILTIN _bb1292 I1
le _bb1293 A B
at _bb1291 _bb1293 _bb1292
eq _bb1289 _bb1291 _bb1290
eq _bb1287 _bb1289 _bb1288
if # _bb1287 _bb1285
BEGIN _bb1294
BUILTIN _bb1295 "Assertion failed"
fail # _bb1295
END
BUILTIN _bb1297 Bfalse
BUILTIN _bb1299 I0
BUILTIN _bb1301 I0
ge _bb1302 A B
at _bb1300 _bb1302 _bb1301
eq _bb1298 _bb1300 _bb1299
eq _bb1296 _bb1298 _bb1297
if # _bb1296 _bb1294
BEGIN _bb1303
BUILTIN _bb1304 "Assertion failed"
fail # _bb1304
END
BUILTIN _bb1306 Bfalse
BUILTIN _bb1308 I0
BUILTIN _bb1310 I1
ge _bb1311 A B
at _bb1309 _bb1311 _bb1310
eq _bb1307 _bb1309 _bb1308
eq _bb1305 _bb1307 _bb1306
if # _bb1305 _bb1303
BEGIN _bb1312
BUILTIN _bb1313 "Assertion failed"
fail # _bb1313
END
BUILTIN _bb1315 Bfalse
BUILTIN _bb1317 I0
BUILTIN _bb1319 I0
BUILTIN _bb1322 I3
add _bb1321 A _bb1322
le _bb1320 _bb1321 B
at _bb1318 _bb1320 _bb1319
eq _bb1316 _bb1318 _bb1317
eq _bb1314 _bb1316 _bb1315
if # _bb1314 _bb1312
BEGIN _bb1323
BUILTIN _bb1324 "Assertion failed"
fail # _bb1324
END
BUILTIN _bb1326 Bfalse
BUILTIN _bb1328 I1
BUILTIN _bb1330 I0
BUILTIN _bb1333 I3
add _bb1332 A _bb1333
ge _bb1331 _bb1332 B
at _bb1329 _bb1331 _bb1330
eq _bb1327 _bb1329 _bb1328
eq _bb1325 _bb1327 _bb1326
if # _bb1325 _bb1323
BEGIN _bb1334
BUILTIN _bb1335 "Assertion failed"
fail # _bb1335
END
BUILTIN _bb1337 Bfalse
BUILTIN _bb1339 I1
BUILTIN _bb1341 I1
BUILTIN _bb1344 I3
mul _bb1343 A _bb1344
eq _bb1342 _bb1343 B
at _bb1340 _bb1342 _bb1341
eq _bb1338 _bb1340 _bb1339
eq _bb1336 _bb1338 _bb1337
if # _bb1336 _bb1334
BUILTIN _bb1345 Btrue
return # _bb1345
END
do _bbmacro21 _bb1136
BEGIN _bb1346
BEGIN _bb1348
str _bb1350 _bbmacro21
BUILTIN _bb1352 "\n"
BUILTIN _bb1353 "Vector"
add _bb1351 _bb1353 _bb1352
add _bb1349 _bb1351 _bb1350
list args _bb1349
END
get _bb1355 bb logger
get _bb1354 _bb1355 fail
call _bb1347 _bb1348 _bb1354
END
BEGIN _bb1356
BEGIN _bb1358
BUILTIN _bb1359 "Vector"
list args _bb1359
END
get _bb1361 bb logger
get _bb1360 _bb1361 ok
call _bb1357 _bb1358 _bb1360
END
catch # _bbmacro21 _bb1346 _bb1356
BEGIN _bb1364
BEGIN _bb1365
BEGIN _bb1366
get _bb1367 this value
return # _bb1367
END
IS int _bb1366
BEGIN _bb1368
next other args
get _bb1370 other value
get _bb1371 this value
lt _bb1369 _bb1371 _bb1370
return # _bb1369
END
IS lt _bb1368
BEGIN _bb1372
BUILTIN _bb1374 ""
get _bb1376 this value
str _bb1377 _bb1376
BUILTIN _bb1378 "num "
add _bb1375 _bb1378 _bb1377
add _bb1373 _bb1375 _bb1374
return # _bb1373
END
IS str _bb1372
END
IS Num _bb1365
final # Num
BEGIN _bb1379
next x args
BEGIN _bb1382
inline _bb1383 Num
IS value x
return # this
END
new _bb1380 _bb1382
return # _bb1380
END
IS num _bb1379
BUILTIN _bb1384 I5
BUILTIN _bb1385 I2
BUILTIN _bb1386 I3
BUILTIN _bb1387 I4
BUILTIN _bb1388 I1
list A _bb1384 _bb1385 _bb1386 _bb1387 _bb1388
BEGIN _bb1391
list args A
END
BEGIN _bb1394
list args num
END
get _bb1396 bb collection
get _bb1395 _bb1396 transform
call _bb1393 _bb1394 _bb1395
call _bb1390 _bb1391 _bb1393
IS A _bb1390
len n A
range _bb1398 n
iter _bbmacro23 _bb1398
BEGIN _bb1400
next _bb1401 _bbmacro23
AS i _bb1401
exists _bb1402 i
END
BEGIN _bb1403
BUILTIN _bb1406 I1
add _bb1405 i _bb1406
range _bb1404 _bb1405 n
iter _bbmacro24 _bb1404
BEGIN _bb1408
next _bb1409 _bbmacro24
AS j _bb1409
exists _bb1410 j
END
BEGIN _bb1411
BEGIN _bb1412
at _bb1413 A i
IS tmp _bb1413
at _bb1414 A j
put # A i _bb1414
put # A j tmp
END
at _bb1416 A i
at _bb1417 A j
lt _bb1415 _bb1417 _bb1416
if # _bb1415 _bb1412
END
while # _bb1408 _bb1411
END
while # _bb1400 _bb1403
BEGIN _bb1418
BUILTIN _bb1419 "Assertion failed"
fail # _bb1419
END
BUILTIN _bb1421 Bfalse
BUILTIN _bb1423 I1
BUILTIN _bb1426 I0
at _bb1425 A _bb1426
int _bb1424 _bb1425
eq _bb1422 _bb1424 _bb1423
eq _bb1420 _bb1422 _bb1421
if # _bb1420 _bb1418
BUILTIN _bb1427 Btrue
return # _bb1427
END
do _bbmacro22 _bb1364
BEGIN _bb1428
BEGIN _bb1430
str _bb1432 _bbmacro22
BUILTIN _bb1434 "\n"
BUILTIN _bb1435 "Overload"
add _bb1433 _bb1435 _bb1434
add _bb1431 _bb1433 _bb1432
list args _bb1431
END
get _bb1437 bb logger
get _bb1436 _bb1437 fail
call _bb1429 _bb1430 _bb1436
END
BEGIN _bb1438
BEGIN _bb1440
BUILTIN _bb1441 "Overload"
list args _bb1441
END
get _bb1443 bb logger
get _bb1442 _bb1443 ok
call _bb1439 _bb1440 _bb1442
END
catch # _bbmacro22 _bb1428 _bb1438
BEGIN _bb1446
BEGIN _bb1447
next x args
next y args
BEGIN _bb1448
BUILTIN bias I0
END
catch # bias _bb1448
add _bb1451 x y
add _bb1450 _bb1451 bias
return # _bb1450
END
IS foo _bb1447
BEGIN _bb1452
BUILTIN _bb1453 "Assertion failed"
fail # _bb1453
END
BUILTIN _bb1455 Bfalse
BUILTIN _bb1457 I6
BEGIN _bb1459
BUILTIN _bb1460 I1
BUILTIN _bb1461 I2
list args _bb1460 _bb1461
BUILTIN bias I3
END
call _bb1458 _bb1459 foo
eq _bb1456 _bb1458 _bb1457
eq _bb1454 _bb1456 _bb1455
if # _bb1454 _bb1452
BUILTIN _bb1464 Btrue
return # _bb1464
END
do _bbmacro25 _bb1446
BEGIN _bb1465
BEGIN _bb1467
str _bb1469 _bbmacro25
BUILTIN _bb1471 "\n"
BUILTIN _bb1472 "Func call"
add _bb1470 _bb1472 _bb1471
add _bb1468 _bb1470 _bb1469
list args _bb1468
END
get _bb1474 bb logger
get _bb1473 _bb1474 fail
call _bb1466 _bb1467 _bb1473
END
BEGIN _bb1475
BEGIN _bb1477
BUILTIN _bb1478 "Func call"
list args _bb1478
END
get _bb1480 bb logger
get _bb1479 _bb1480 ok
call _bb1476 _bb1477 _bb1479
END
catch # _bbmacro25 _bb1465 _bb1475
BEGIN _bb1483
BEGIN _bb1486
BUILTIN x I0
return # this
END
new surface _bb1486
final # surface
BEGIN _bb1490
BUILTIN y I0
return # this
END
new surface2 _bb1490
final # surface2
BEGIN _bb1492
next a args
next b args
BEGIN _bb1494
BUILTIN _bb1495 I1
set # surface2 y _bb1495
END
defer # _bb1494
float a a
float b b
set # surface x b
BUILTIN _bb1498 I0
return # _bb1498
END
IS add _bb1492
BEGIN _bb1500
BUILTIN _bb1501 I0
BUILTIN _bb1502 "foo"
list args _bb1501 _bb1502
END
call _bb1499 _bb1500 add
IS result _bb1499
BEGIN _bb1504
BUILTIN _bb1505 "Assertion failed"
fail # _bb1505
END
BUILTIN _bb1507 Bfalse
BUILTIN _bb1509 I0
get _bb1510 surface x
eq _bb1508 _bb1510 _bb1509
eq _bb1506 _bb1508 _bb1507
if # _bb1506 _bb1504
BEGIN _bb1511
BUILTIN _bb1512 "Assertion failed"
fail # _bb1512
END
BUILTIN _bb1514 Bfalse
BUILTIN _bb1516 I1
get _bb1517 surface2 y
eq _bb1515 _bb1517 _bb1516
eq _bb1513 _bb1515 _bb1514
if # _bb1513 _bb1511
BEGIN _bb1518
BUILTIN _bb1519 "Assertion failed"
fail # _bb1519
END
BUILTIN _bb1521 Bfalse
BEGIN _bb1524
BEGIN _bb1525
BUILTIN _bb1526 Btrue
return # _bb1526
END
BEGIN _bb1527
BUILTIN _bb1528 Bfalse
return # _bb1528
END
catch # result _bb1525 _bb1527
END
do _bb1522 _bb1524
eq _bb1520 _bb1522 _bb1521
if # _bb1520 _bb1518
BUILTIN _bb1529 Btrue
return # _bb1529
END
do _bbmacro26 _bb1483
BEGIN _bb1530
BEGIN _bb1532
str _bb1534 _bbmacro26
BUILTIN _bb1536 "\n"
BUILTIN _bb1537 "Sideerrors"
add _bb1535 _bb1537 _bb1536
add _bb1533 _bb1535 _bb1534
list args _bb1533
END
get _bb1539 bb logger
get _bb1538 _bb1539 fail
call _bb1531 _bb1532 _bb1538
END
BEGIN _bb1540
BEGIN _bb1542
BUILTIN _bb1543 "Sideerrors"
list args _bb1543
END
get _bb1545 bb logger
get _bb1544 _bb1545 ok
call _bb1541 _bb1542 _bb1544
END
catch # _bbmacro26 _bb1530 _bb1540
BEGIN _bb1548
BEGIN _bb1549
get _bb1550 this x
IS .x _bb1550
BUILTIN x I0
BEGIN _bb1552
get _bb1553 this x
return # _bb1553
END
IS xthis _bb1552
BEGIN _bb1554
get _bb1555 this .x
IS ..x _bb1555
return # ..x
END
IS xclosure _bb1554
END
IS Struct _bb1549
BUILTIN x I1
BEGIN _bb1559
inline _bb1560 Struct
return # this
END
new struct _bb1559
BUILTIN x I2
BEGIN _bb1562
BUILTIN _bb1563 "Assertion failed"
fail # _bb1563
END
BUILTIN _bb1565 Bfalse
BUILTIN _bb1567 I0
get _bb1569 struct xthis
call _bb1568 # _bb1569
eq _bb1566 _bb1568 _bb1567
eq _bb1564 _bb1566 _bb1565
if # _bb1564 _bb1562
BEGIN _bb1570
BUILTIN _bb1571 "Assertion failed"
fail # _bb1571
END
BUILTIN _bb1573 Bfalse
BUILTIN _bb1575 I1
get _bb1577 struct xclosure
call _bb1576 # _bb1577
eq _bb1574 _bb1576 _bb1575
eq _bb1572 _bb1574 _bb1573
if # _bb1572 _bb1570
BUILTIN _bb1578 Btrue
return # _bb1578
END
do _bbmacro27 _bb1548
BEGIN _bb1579
BEGIN _bb1581
str _bb1583 _bbmacro27
BUILTIN _bb1585 "\n"
BUILTIN _bb1586 "Closure"
add _bb1584 _bb1586 _bb1585
add _bb1582 _bb1584 _bb1583
list args _bb1582
END
get _bb1588 bb logger
get _bb1587 _bb1588 fail
call _bb1580 _bb1581 _bb1587
END
BEGIN _bb1589
BEGIN _bb1591
BUILTIN _bb1592 "Closure"
list args _bb1592
END
get _bb1594 bb logger
get _bb1593 _bb1594 ok
call _bb1590 _bb1591 _bb1593
END
catch # _bbmacro27 _bb1579 _bb1589
BEGIN _bb1597
BEGIN _bb1600
BUILTIN x I1
BUILTIN y I2
return # this
END
new A _bb1600
BEGIN _bb1603
BUILTIN _bb1604 "Assertion failed"
fail # _bb1604
END
BUILTIN _bb1606 Bfalse
BUILTIN _bb1608 I1
get _bb1609 A x
eq _bb1607 _bb1609 _bb1608
eq _bb1605 _bb1607 _bb1606
if # _bb1605 _bb1603
clear # A
BEGIN _bb1611
BUILTIN _bb1612 "Assertion failed"
fail # _bb1612
END
BUILTIN _bb1614 Bfalse
BEGIN _bb1617
BEGIN _bb1618
BUILTIN _bb1619 Btrue
return # _bb1619
END
BEGIN _bb1620
BUILTIN _bb1621 Bfalse
return # _bb1621
END
get _bb1622 A x
catch # _bb1622 _bb1618 _bb1620
END
do _bb1615 _bb1617
eq _bb1613 _bb1615 _bb1614
if # _bb1613 _bb1611
BEGIN _bb1625
BUILTIN x I1
BUILTIN y I2
return # this
END
new B _bb1625
move C B
BEGIN _bb1629
BUILTIN _bb1630 "Assertion failed"
fail # _bb1630
END
BUILTIN _bb1632 Bfalse
BEGIN _bb1635
BEGIN _bb1636
BUILTIN _bb1637 Btrue
return # _bb1637
END
BEGIN _bb1638
BUILTIN _bb1639 Bfalse
return # _bb1639
END
get _bb1640 B x
catch # _bb1640 _bb1636 _bb1638
END
do _bb1633 _bb1635
eq _bb1631 _bb1633 _bb1632
if # _bb1631 _bb1629
BEGIN _bb1641
BUILTIN _bb1642 "Assertion failed"
fail # _bb1642
END
BUILTIN _bb1644 Bfalse
BUILTIN _bb1646 I1
get _bb1647 C x
eq _bb1645 _bb1647 _bb1646
eq _bb1643 _bb1645 _bb1644
if # _bb1643 _bb1641
BUILTIN _bb1648 Btrue
return # _bb1648
END
do _bbmacro28 _bb1597
BEGIN _bb1649
BEGIN _bb1651
str _bb1653 _bbmacro28
BUILTIN _bb1655 "\n"
BUILTIN _bb1656 "Clear"
add _bb1654 _bb1656 _bb1655
add _bb1652 _bb1654 _bb1653
list args _bb1652
END
get _bb1658 bb logger
get _bb1657 _bb1658 fail
call _bb1650 _bb1651 _bb1657
END
BEGIN _bb1659
BEGIN _bb1661
BUILTIN _bb1662 "Clear"
list args _bb1662
END
get _bb1664 bb logger
get _bb1663 _bb1664 ok
call _bb1660 _bb1661 _bb1663
END
catch # _bbmacro28 _bb1649 _bb1659
BEGIN _bb1667
BEGIN _bb1668
next A args
move A A
len _bb1669 A
return # _bb1669
END
IS waslength _bb1668
BUILTIN _bb1670 I1
BUILTIN _bb1671 I2
BUILTIN _bb1672 I3
list A _bb1670 _bb1671 _bb1672
BEGIN _bb1674
BUILTIN _bb1675 "Assertion failed"
fail # _bb1675
END
BUILTIN _bb1677 Bfalse
BUILTIN _bb1679 I3
len _bb1680 A
eq _bb1678 _bb1680 _bb1679
eq _bb1676 _bb1678 _bb1677
if # _bb1676 _bb1674
BEGIN _bb1681
BUILTIN _bb1682 "Assertion failed"
fail # _bb1682
END
BUILTIN _bb1684 Bfalse
BUILTIN _bb1686 I3
BEGIN _bb1688
list args A
END
call _bb1687 _bb1688 waslength
eq _bb1685 _bb1687 _bb1686
eq _bb1683 _bb1685 _bb1684
if # _bb1683 _bb1681
BEGIN _bb1689
BUILTIN _bb1690 "Assertion failed"
fail # _bb1690
END
BUILTIN _bb1692 Bfalse
BUILTIN _bb1694 I0
len _bb1695 A
eq _bb1693 _bb1695 _bb1694
eq _bb1691 _bb1693 _bb1692
if # _bb1691 _bb1689
BUILTIN _bb1696 Btrue
return # _bb1696
END
do _bbmacro29 _bb1667
BEGIN _bb1697
BEGIN _bb1699
str _bb1701 _bbmacro29
BUILTIN _bb1703 "\n"
BUILTIN _bb1704 "Move "
add _bb1702 _bb1704 _bb1703
add _bb1700 _bb1702 _bb1701
list args _bb1700
END
get _bb1706 bb logger
get _bb1705 _bb1706 fail
call _bb1698 _bb1699 _bb1705
END
BEGIN _bb1707
BEGIN _bb1709
BUILTIN _bb1710 "Move "
list args _bb1710
END
get _bb1712 bb logger
get _bb1711 _bb1712 ok
call _bb1708 _bb1709 _bb1711
END
catch # _bbmacro29 _bb1697 _bb1707
BEGIN _bb1715
BUILTIN _bb1716 I1
BUILTIN _bb1717 I2
BUILTIN _bb1718 I3
list A _bb1716 _bb1717 _bb1718
BEGIN _bb1721
list args A
END
BEGIN _bb1724
BUILTIN _bb1725 I4
list args _bb1725
END
get _bb1727 bb collection
get _bb1726 _bb1727 toback
call _bb1723 _bb1724 _bb1726
call _bb1720 _bb1721 _bb1723
IS A _bb1720
BEGIN _bb1728
BUILTIN _bb1729 "Assertion failed"
fail # _bb1729
END
BUILTIN _bb1731 Bfalse
BUILTIN _bb1733 I4
pop _bb1734 A
eq _bb1732 _bb1734 _bb1733
eq _bb1730 _bb1732 _bb1731
if # _bb1730 _bb1728
BUILTIN _bb1735 Btrue
return # _bb1735
END
do _bbmacro30 _bb1715
BEGIN _bb1736
BEGIN _bb1738
str _bb1740 _bbmacro30
BUILTIN _bb1742 "\n"
BUILTIN _bb1743 "Collection"
add _bb1741 _bb1743 _bb1742
add _bb1739 _bb1741 _bb1740
list args _bb1739
END
get _bb1745 bb logger
get _bb1744 _bb1745 fail
call _bb1737 _bb1738 _bb1744
END
BEGIN _bb1746
BEGIN _bb1748
BUILTIN _bb1749 "Collection"
list args _bb1749
END
get _bb1751 bb logger
get _bb1750 _bb1751 ok
call _bb1747 _bb1748 _bb1750
END
catch # _bbmacro30 _bb1736 _bb1746
BEGIN _bb1754
BUILTIN A "I like banana!"
BEGIN _bb1756
BUILTIN _bb1757 "Assertion failed"
fail # _bb1757
END
BUILTIN _bb1759 Bfalse
BEGIN _bb1761
list args A
END
BEGIN _bb1764
BUILTIN _bb1765 "I like"
list args _bb1765
END
get _bb1767 bb string
get _bb1766 _bb1767 starts
call _bb1763 _bb1764 _bb1766
call _bb1760 _bb1761 _bb1763
eq _bb1758 _bb1760 _bb1759
if # _bb1758 _bb1756
BEGIN _bb1768
BUILTIN _bb1769 "Assertion failed"
fail # _bb1769
END
BUILTIN _bb1771 Bfalse
BEGIN _bb1773
list args A
END
BEGIN _bb1776
BUILTIN _bb1777 "banana!"
list args _bb1777
END
get _bb1779 bb string
get _bb1778 _bb1779 ends
call _bb1775 _bb1776 _bb1778
call _bb1772 _bb1773 _bb1775
eq _bb1770 _bb1772 _bb1771
if # _bb1770 _bb1768
BEGIN _bb1780
BUILTIN _bb1781 "Assertion failed"
fail # _bb1781
END
BUILTIN _bb1783 Bfalse
BUILTIN _bb1785 Bfalse
BEGIN _bb1787
list args A
END
BEGIN _bb1790
BUILTIN _bb1791 "w"
list args _bb1791
END
get _bb1793 bb string
get _bb1792 _bb1793 ends
call _bb1789 _bb1790 _bb1792
call _bb1786 _bb1787 _bb1789
eq _bb1784 _bb1786 _bb1785
eq _bb1782 _bb1784 _bb1783
if # _bb1782 _bb1780
BEGIN _bb1794
BUILTIN _bb1795 "Assertion failed"
fail # _bb1795
END
BUILTIN _bb1797 Bfalse
BUILTIN _bb1799 I2
BEGIN _bb1801
list args A
END
BEGIN _bb1804
BUILTIN _bb1805 "like"
list args _bb1805
END
get _bb1807 bb string
get _bb1806 _bb1807 index
call _bb1803 _bb1804 _bb1806
call _bb1800 _bb1801 _bb1803
eq _bb1798 _bb1800 _bb1799
eq _bb1796 _bb1798 _bb1797
if # _bb1796 _bb1794
BEGIN _bb1808
BUILTIN _bb1809 "Assertion failed"
fail # _bb1809
END
BUILTIN _bb1811 Bfalse
BUILTIN _bb1813 I10
BEGIN _bb1815
list args A
END
BEGIN _bb1818
BUILTIN _bb1819 "an"
list args _bb1819
BUILTIN pos I9
END
get _bb1822 bb string
get _bb1821 _bb1822 index
call _bb1817 _bb1818 _bb1821
call _bb1814 _bb1815 _bb1817
eq _bb1812 _bb1814 _bb1813
eq _bb1810 _bb1812 _bb1811
if # _bb1810 _bb1808
BEGIN _bb1823
BUILTIN _bb1824 "Assertion failed"
fail # _bb1824
END
BUILTIN _bb1826 Bfalse
BUILTIN _bb1828 I3
BEGIN _bb1831
list args A
END
BEGIN _bb1834
BUILTIN _bb1835 " "
list args _bb1835
END
get _bb1837 bb string
get _bb1836 _bb1837 split
call _bb1833 _bb1834 _bb1836
call _bb1830 _bb1831 _bb1833
len _bb1829 _bb1830
eq _bb1827 _bb1829 _bb1828
eq _bb1825 _bb1827 _bb1826
if # _bb1825 _bb1823
BUILTIN _bb1838 Btrue
return # _bb1838
END
do _bbmacro31 _bb1754
BEGIN _bb1839
BEGIN _bb1841
str _bb1843 _bbmacro31
BUILTIN _bb1845 "\n"
BUILTIN _bb1846 "Stringutil"
add _bb1844 _bb1846 _bb1845
add _bb1842 _bb1844 _bb1843
list args _bb1842
END
get _bb1848 bb logger
get _bb1847 _bb1848 fail
call _bb1840 _bb1841 _bb1847
END
BEGIN _bb1849
BEGIN _bb1851
BUILTIN _bb1852 "Stringutil"
list args _bb1852
END
get _bb1854 bb logger
get _bb1853 _bb1854 ok
call _bb1850 _bb1851 _bb1853
END
catch # _bbmacro31 _bb1839 _bb1849
BEGIN _bb1857
BEGIN _bb1860
BUILTIN value I0
BEGIN _bb1862
next x args
get _bb1863 this value
add _bb1863 _bb1863 x
set # this value _bb1863
END
IS add _bb1862
return # this
END
new accum _bb1860
final # accum
BUILTIN _bb1865 I10
range _bb1864 _bb1865
iter _bbmacro33 _bb1864
BEGIN _bb1869
BEGIN _bb1870
next _bb1871 _bbmacro33
AS i _bb1871
exists _bb1872 i
END
BEGIN _bb1873
BEGIN _bb1875
list args i
END
get _bb1876 accum add
call _bb1874 _bb1875 _bb1876
END
while # _bb1870 _bb1873
END
do _bb1867 _bb1869
BEGIN _bb1877
BUILTIN _bb1878 "Assertion failed"
fail # _bb1878
END
BUILTIN _bb1880 Bfalse
BUILTIN _bb1882 I45
get _bb1883 accum value
eq _bb1881 _bb1883 _bb1882
eq _bb1879 _bb1881 _bb1880
if # _bb1879 _bb1877
BUILTIN _bb1884 Btrue
return # _bb1884
END
do _bbmacro32 _bb1857
BEGIN _bb1885
BEGIN _bb1887
str _bb1889 _bbmacro32
BUILTIN _bb1891 "\n"
BUILTIN _bb1892 "Atomicity"
add _bb1890 _bb1892 _bb1891
add _bb1888 _bb1890 _bb1889
list args _bb1888
END
get _bb1894 bb logger
get _bb1893 _bb1894 fail
call _bb1886 _bb1887 _bb1893
END
BEGIN _bb1895
BEGIN _bb1897
BUILTIN _bb1898 "Atomicity"
list args _bb1898
END
get _bb1900 bb logger
get _bb1899 _bb1900 ok
call _bb1896 _bb1897 _bb1899
END
catch # _bbmacro32 _bb1885 _bb1895
BEGIN _bb1903
BEGIN _bb1906
BEGIN _bb1907
BEGIN _bb1909
list args B
END
call _bb1908 _bb1909 extern2
return # _bb1908
END
IS foo1 _bb1907
BEGIN _bb1910
BEGIN _bb1912
list args this
END
call _bb1911 _bb1912 extern3
return # _bb1911
END
IS foo2 _bb1910
BEGIN _bb1913
get _bb1915 B foo1
call _bb1914 # _bb1915
return # _bb1914
END
IS foo3 _bb1913
return # this
END
new A _bb1906
final # A
BEGIN _bb1918
BEGIN _bb1919
BEGIN _bb1921
list args A
END
call _bb1920 _bb1921 extern2
return # _bb1920
END
IS foo1 _bb1919
BEGIN _bb1922
BEGIN _bb1924
list args this
END
call _bb1923 _bb1924 extern3
return # _bb1923
END
IS foo2 _bb1922
BEGIN _bb1925
BUILTIN _bb1926 I1
return # _bb1926
END
IS foo3 _bb1925
return # this
END
new B _bb1918
final # B
BEGIN _bb1927
next obj args
get _bb1929 obj foo1
call _bb1928 # _bb1929
return # _bb1928
END
IS extern1 _bb1927
final # extern1
BEGIN _bb1930
next obj args
get _bb1932 obj foo2
call _bb1931 # _bb1932
return # _bb1931
END
IS extern2 _bb1930
final # extern2
BEGIN _bb1933
next obj args
get _bb1935 obj foo3
call _bb1934 # _bb1935
return # _bb1934
END
IS extern3 _bb1933
final # extern3
BEGIN _bb1936
BUILTIN _bb1937 "Assertion failed"
fail # _bb1937
END
BUILTIN _bb1939 Bfalse
BUILTIN _bb1941 I1
BEGIN _bb1943
list args A
END
call _bb1942 _bb1943 extern1
eq _bb1940 _bb1942 _bb1941
eq _bb1938 _bb1940 _bb1939
if # _bb1938 _bb1936
BUILTIN _bb1944 Btrue
return # _bb1944
END
do _bbmacro34 _bb1903
BEGIN _bb1945
BEGIN _bb1947
str _bb1949 _bbmacro34
BUILTIN _bb1951 "\n"
BUILTIN _bb1952 "No deadlock"
add _bb1950 _bb1952 _bb1951
add _bb1948 _bb1950 _bb1949
list args _bb1948
END
get _bb1954 bb logger
get _bb1953 _bb1954 fail
call _bb1946 _bb1947 _bb1953
END
BEGIN _bb1955
BEGIN _bb1957
BUILTIN _bb1958 "No deadlock"
list args _bb1958
END
get _bb1960 bb logger
get _bb1959 _bb1960 ok
call _bb1956 _bb1957 _bb1959
END
catch # _bbmacro34 _bb1945 _bb1955
BEGIN _bb1963
BUILTIN _bb1965 "vfs://test.txt"
file f1 _bb1965
BUILTIN _bb1966 "Virtual data."
push # f1 _bb1966
BUILTIN _bb1968 "vfs://test.txt"
file f2 _bb1968
BEGIN _bb1969
BUILTIN _bb1970 "Assertion failed"
fail # _bb1970
END
BUILTIN _bb1972 Bfalse
BUILTIN _bb1974 "Virtual data."
BEGIN _bb1976
list args f2
END
get _bb1978 bb os
get _bb1977 _bb1978 read
call _bb1975 _bb1976 _bb1977
eq _bb1973 _bb1975 _bb1974
eq _bb1971 _bb1973 _bb1972
if # _bb1971 _bb1969
BUILTIN _bb1979 Btrue
return # _bb1979
END
do _bbmacro35 _bb1963
BEGIN _bb1980
BEGIN _bb1982
str _bb1984 _bbmacro35
BUILTIN _bb1986 "\n"
BUILTIN _bb1987 "VFS"
add _bb1985 _bb1987 _bb1986
add _bb1983 _bb1985 _bb1984
list args _bb1983
END
get _bb1989 bb logger
get _bb1988 _bb1989 fail
call _bb1981 _bb1982 _bb1988
END
BEGIN _bb1990
BEGIN _bb1992
BUILTIN _bb1993 "VFS"
list args _bb1993
END
get _bb1995 bb logger
get _bb1994 _bb1995 ok
call _bb1991 _bb1992 _bb1994
END
catch # _bbmacro35 _bb1980 _bb1990
BEGIN _bb1998
BUILTIN _bb1999 "bb://.cache/database.db"
sqlite db _bb1999
BUILTIN _bb2002 "CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY, name TEXT, age INTEGER);"
push _bb2001 db _bb2002
BUILTIN n I10000
time start
BUILTIN _bb2006 "BEGIN TRANSACTION;"
push _bb2005 db _bb2006
range _bb2007 n
iter _bbmacro37 _bb2007
BEGIN _bb2009
next _bb2010 _bbmacro37
AS i _bb2010
exists _bb2011 i
END
BEGIN _bb2012
BUILTIN _bb2015 ");"
BUILTIN _bb2019 I10
mod _bb2018 i _bb2019
BUILTIN _bb2020 I20
add _bb2017 _bb2020 _bb2018
str _bb2021 _bb2017
BUILTIN _bb2023 "', "
str _bb2025 i
BUILTIN _bb2026 "INSERT INTO users (name, age) VALUES ('User"
add _bb2024 _bb2026 _bb2025
add _bb2022 _bb2024 _bb2023
add _bb2016 _bb2022 _bb2021
add _bb2014 _bb2016 _bb2015
push _bb2013 db _bb2014
BUILTIN _bb2029 ";"
str _bb2031 i
BUILTIN _bb2032 "SELECT * FROM users WHERE id = "
add _bb2030 _bb2032 _bb2031
add _bb2028 _bb2030 _bb2029
push _bb2027 db _bb2028
BUILTIN _bb2035 ";"
str _bb2037 i
BUILTIN _bb2038 "UPDATE users SET age = age + 1 WHERE id = "
add _bb2036 _bb2038 _bb2037
add _bb2034 _bb2036 _bb2035
push _bb2033 db _bb2034
END
while # _bb2009 _bb2012
BUILTIN _bb2040 "COMMIT;"
push _bb2039 db _bb2040
time _bb2042
sub eta _bb2042 start
BEGIN _bb2043
BUILTIN _bb2044 "Assertion failed"
fail # _bb2044
END
BUILTIN _bb2046 Bfalse
BUILTIN _bb2048 I1
lt _bb2047 eta _bb2048
eq _bb2045 _bb2047 _bb2046
if # _bb2045 _bb2043
BEGIN _bb2049
BUILTIN _bb2050 "Assertion failed"
fail # _bb2050
END
BUILTIN _bb2052 Bfalse
BUILTIN _bb2056 "SELECT * FROM users;"
push _bb2055 db _bb2056
len _bb2054 _bb2055
eq _bb2053 n _bb2054
eq _bb2051 _bb2053 _bb2052
if # _bb2051 _bb2049
BUILTIN _bb2058 "DELETE FROM users;"
push _bb2057 db _bb2058
BUILTIN _bb2059 Btrue
return # _bb2059
END
do _bbmacro36 _bb1998
BEGIN _bb2060
BEGIN _bb2062
str _bb2064 _bbmacro36
BUILTIN _bb2066 "\n"
BUILTIN _bb2067 "Database"
add _bb2065 _bb2067 _bb2066
add _bb2063 _bb2065 _bb2064
list args _bb2063
END
get _bb2069 bb logger
get _bb2068 _bb2069 fail
call _bb2061 _bb2062 _bb2068
END
BEGIN _bb2070
BEGIN _bb2072
BUILTIN _bb2073 "Database"
list args _bb2073
END
get _bb2075 bb logger
get _bb2074 _bb2075 ok
call _bb2071 _bb2072 _bb2074
END
catch # _bbmacro36 _bb2060 _bb2070
