BEGIN _bb19
BEGIN _bb22
BUILTIN lightred "\e[0;91m"
final # lightred
BUILTIN lightgreen "\e[0;92m"
final # lightgreen
BUILTIN reset "\e[0m"
final # reset
return # this
END
new ansi _bb22
final # ansi
BEGIN _bb42
BEGIN _bb43
next element args
BEGIN _bb46
get _bb47 this element
IS .element _bb47
BEGIN _bb48
next A args
get _bb49 this .element
IS ..element _bb49
push # A ..element
return # A
END
IS call _bb48
return # this
END
new _bb44 _bb46
return # _bb44
END
IS toback _bb43
final # toback
return # this
END
new collection _bb42
final # collection
BEGIN _bb67
BEGIN _bb68
next text args
str text text
BUILTIN _bb70 ""
str _bb72 text
BUILTIN _bb74 "  ] "
get _bb77 bb ansi
get _bb76 _bb77 reset
str _bb78 _bb76
BUILTIN _bb80 "ok"
get _bb83 bb ansi
get _bb82 _bb83 lightgreen
str _bb84 _bb82
BUILTIN _bb85 "[  "
add _bb81 _bb85 _bb84
add _bb79 _bb81 _bb80
add _bb75 _bb79 _bb78
add _bb73 _bb75 _bb74
add _bb71 _bb73 _bb72
add _bb69 _bb71 _bb70
print # _bb69
END
IS ok _bb68
final # ok
BEGIN _bb86
next text args
str text text
BUILTIN _bb88 ""
str _bb90 text
BUILTIN _bb92 " ] "
get _bb95 bb ansi
get _bb94 _bb95 reset
str _bb96 _bb94
BUILTIN _bb98 "fail"
get _bb101 bb ansi
get _bb100 _bb101 lightred
str _bb102 _bb100
BUILTIN _bb103 "[ "
add _bb99 _bb103 _bb102
add _bb97 _bb99 _bb98
add _bb93 _bb97 _bb96
add _bb91 _bb93 _bb92
add _bb89 _bb91 _bb90
add _bb87 _bb89 _bb88
print # _bb87
END
IS fail _bb86
final # fail
return # this
END
new logger _bb67
final # logger
BEGIN _bb227
BEGIN _bb228
next value args
str value value
return # value
END
IS call _bb228
BEGIN _bb274
next query args
str query query
BEGIN _bb277
get _bb278 this query
IS .query _bb278
BEGIN _bb279
BUILTIN _bb280 "Assertion failed"
fail # _bb280
END
BUILTIN _bb282 Bfalse
BUILTIN _bb284 I0
len _bb285 args
eq _bb283 _bb285 _bb284
eq _bb281 _bb283 _bb282
if # _bb281 _bb279
BEGIN _bb286
next search args
str search search
get _bb287 this .query
IS ..query _bb287
BEGIN _bb288
BUILTIN _bb289 "Assertion failed"
fail # _bb289
END
BUILTIN _bb291 Bfalse
BUILTIN _bb293 I0
len _bb294 args
eq _bb292 _bb294 _bb293
eq _bb290 _bb292 _bb291
if # _bb290 _bb288
IS query ..query
len nsearch search
len nquery query
BEGIN _bb297
BUILTIN _bb298 Bfalse
return # _bb298
END
lt _bb299 nsearch nquery
if # _bb299 _bb297
range _bb300 nquery
iter _bbmacro2 _bb300
BEGIN _bb302
next _bb303 _bbmacro2
AS i _bb303
exists _bb304 i
END
BEGIN _bb305
BEGIN _bb306
BUILTIN _bb307 Bfalse
return # _bb307
END
at _bb309 search i
at _bb310 query i
neq _bb308 _bb310 _bb309
if # _bb308 _bb306
END
while # _bb302 _bb305
BUILTIN _bb311 Btrue
return # _bb311
END
IS call _bb286
return # this
END
new _bb275 _bb277
return # _bb275
END
IS starts _bb274
final # starts
BEGIN _bb312
next query args
str query query
BEGIN _bb315
get _bb316 this query
IS .query _bb316
BEGIN _bb317
BUILTIN _bb318 "Assertion failed"
fail # _bb318
END
BUILTIN _bb320 Bfalse
BUILTIN _bb322 I0
len _bb323 args
eq _bb321 _bb323 _bb322
eq _bb319 _bb321 _bb320
if # _bb319 _bb317
BEGIN _bb324
next search args
str search search
get _bb325 this .query
IS ..query _bb325
BEGIN _bb326
BUILTIN _bb327 "Assertion failed"
fail # _bb327
END
BUILTIN _bb329 Bfalse
BUILTIN _bb331 I0
len _bb332 args
eq _bb330 _bb332 _bb331
eq _bb328 _bb330 _bb329
if # _bb328 _bb326
IS query ..query
len nsearch search
len nquery query
BEGIN _bb335
BUILTIN _bb336 Bfalse
return # _bb336
END
lt _bb337 nsearch nquery
if # _bb337 _bb335
range _bb338 nquery
iter _bbmacro3 _bb338
BEGIN _bb340
next _bb341 _bbmacro3
AS i _bb341
exists _bb342 i
END
BEGIN _bb343
BEGIN _bb344
BUILTIN _bb345 Bfalse
return # _bb345
END
sub _bb349 nsearch nquery
add _bb348 _bb349 i
at _bb347 search _bb348
at _bb350 query i
neq _bb346 _bb350 _bb347
if # _bb346 _bb344
END
while # _bb340 _bb343
BUILTIN _bb351 Btrue
return # _bb351
END
IS call _bb324
return # this
END
new _bb313 _bb315
return # _bb313
END
IS ends _bb312
final # ends
BEGIN _bb352
next query args
str query query
BEGIN _bb355
get _bb356 this query
IS .query _bb356
BEGIN _bb357
BUILTIN _bb358 "Assertion failed"
fail # _bb358
END
BUILTIN _bb360 Bfalse
BUILTIN _bb362 I0
len _bb363 args
eq _bb361 _bb363 _bb362
eq _bb359 _bb361 _bb360
if # _bb359 _bb357
BEGIN _bb364
BUILTIN pos I0
END
BEGIN _bb368
IS pos pos
return # #
END
try _bb366 _bb368
catch # _bb366 _bb364
BEGIN _bb369
next search args
str search search
get _bb370 this .query
IS ..query _bb370
BEGIN _bb371
BUILTIN _bb372 "Assertion failed"
fail # _bb372
END
BUILTIN _bb374 Bfalse
BUILTIN _bb376 I0
len _bb377 args
eq _bb375 _bb377 _bb376
eq _bb373 _bb375 _bb374
if # _bb373 _bb371
IS query ..query
get _bb378 this pos
IS pos _bb378
len nsearch search
len nquery query
BUILTIN _bb383 I1
sub _bb384 nsearch nquery
add _bb382 _bb384 _bb383
range _bb381 pos _bb382
iter _bbmacro4 _bb381
BEGIN _bb386
next _bb387 _bbmacro4
AS i _bb387
exists _bb388 i
END
BEGIN _bb389
range _bb390 nquery
iter _bbmacro5 _bb390
BEGIN _bb394
BEGIN _bb395
next _bb396 _bbmacro5
AS j _bb396
exists _bb397 j
END
BEGIN _bb398
BEGIN _bb399
BUILTIN _bb400 Btrue
return # _bb400
END
add _bb403 i j
at _bb402 search _bb403
at _bb404 query j
neq _bb401 _bb404 _bb402
if # _bb401 _bb399
END
while # _bb395 _bb398
END
try different _bb394
BEGIN _bb405
return # i
END
catch # different _bb405
END
while # _bb386 _bb389
return # nsearch
END
IS call _bb369
return # this
END
new _bb353 _bb355
return # _bb353
END
IS index _bb352
final # index
BEGIN _bb406
next query args
str query query
BEGIN _bb409
get _bb410 this query
IS .query _bb410
BEGIN _bb411
BUILTIN _bb412 "Assertion failed"
fail # _bb412
END
BUILTIN _bb414 Bfalse
BUILTIN _bb416 I0
len _bb417 args
eq _bb415 _bb417 _bb416
eq _bb413 _bb415 _bb414
if # _bb413 _bb411
BEGIN _bb419
END
default # _bb419
BEGIN _bb421
next search args
str search search
get _bb422 this .query
IS ..query _bb422
IS query ..query
len nsearch search
len nquery query
BEGIN _bb425
BUILTIN _bb426 "Cannot split on a zero-length string"
fail # _bb426
END
BUILTIN _bb428 I0
eq _bb427 nquery _bb428
if # _bb427 _bb425
list ret
BUILTIN pos I0
BEGIN _bb431
lt _bb432 pos nsearch
END
BEGIN _bb433
IS prev_pos pos
BEGIN _bb435
list args search
END
BEGIN _bb438
list args query
IS pos pos
END
get _bb440 bb string
get _bb439 _bb440 index
call _bb437 _bb438 _bb439
call _bb434 _bb435 _bb437
IS pos _bb434
range _bb442 prev_pos pos
at _bb441 search _bb442
IS s _bb441
push # ret s
add pos pos nquery
END
while # _bb431 _bb433
return # ret
END
IS call _bb421
return # this
END
new _bb407 _bb409
return # _bb407
END
IS split _bb406
final # split
return # this
END
new string _bb227
final # string
return # this
END
new bb _bb19
final # bb
BEGIN _bb445
BUILTIN _bb446 I1
BUILTIN _bb447 I2
BUILTIN _bb448 I3
BUILTIN _bb449 I4
list A _bb446 _bb447 _bb448 _bb449
BEGIN _bb451
BUILTIN _bb452 "Assertion failed"
fail # _bb452
END
BUILTIN _bb454 Bfalse
BUILTIN _bb456 I2
BUILTIN _bb458 I1
at _bb457 A _bb458
eq _bb455 _bb457 _bb456
eq _bb453 _bb455 _bb454
if # _bb453 _bb451
BEGIN _bb459
BUILTIN _bb460 "Assertion failed"
fail # _bb460
END
BUILTIN _bb462 Bfalse
BUILTIN _bb464 I1
next _bb465 A
eq _bb463 _bb465 _bb464
eq _bb461 _bb463 _bb462
if # _bb461 _bb459
BEGIN _bb466
BUILTIN _bb467 "Assertion failed"
fail # _bb467
END
BUILTIN _bb469 Bfalse
BUILTIN _bb471 I2
next _bb472 A
eq _bb470 _bb472 _bb471
eq _bb468 _bb470 _bb469
if # _bb468 _bb466
BEGIN _bb473
BUILTIN _bb474 "Assertion failed"
fail # _bb474
END
BUILTIN _bb476 Bfalse
BUILTIN _bb478 I4
pop _bb479 A
eq _bb477 _bb479 _bb478
eq _bb475 _bb477 _bb476
if # _bb475 _bb473
BEGIN _bb480
BUILTIN _bb481 "Assertion failed"
fail # _bb481
END
BUILTIN _bb483 Bfalse
BUILTIN _bb485 I3
pop _bb486 A
eq _bb484 _bb486 _bb485
eq _bb482 _bb484 _bb483
if # _bb482 _bb480
BEGIN _bb487
BUILTIN _bb488 "Assertion failed"
fail # _bb488
END
BUILTIN _bb490 Bfalse
BUILTIN _bb492 I0
len _bb493 A
eq _bb491 _bb493 _bb492
eq _bb489 _bb491 _bb490
if # _bb489 _bb487
BUILTIN _bb494 I5
push # A _bb494
BEGIN _bb495
BUILTIN _bb496 "Assertion failed"
fail # _bb496
END
BUILTIN _bb498 Bfalse
BUILTIN _bb500 I5
pop _bb501 A
eq _bb499 _bb501 _bb500
eq _bb497 _bb499 _bb498
if # _bb497 _bb495
return # #
END
try _bbmacro6 _bb445
BEGIN _bb502
BEGIN _bb504
str _bb506 _bbmacro6
BUILTIN _bb508 "\n"
BUILTIN _bb509 "List"
add _bb507 _bb509 _bb508
add _bb505 _bb507 _bb506
list args _bb505
END
get _bb511 bb logger
get _bb510 _bb511 fail
call _bb503 _bb504 _bb510
END
BEGIN _bb512
BEGIN _bb514
BUILTIN _bb515 "List"
list args _bb515
END
get _bb517 bb logger
get _bb516 _bb517 ok
call _bb513 _bb514 _bb516
END
catch # _bbmacro6 _bb502 _bb512
BEGIN _bb520
BUILTIN s I0
BUILTIN _bb523 I10
range _bb522 _bb523
iter _bbmacro8 _bb522
BEGIN _bb525
next _bb526 _bbmacro8
AS i _bb526
exists _bb527 i
END
BEGIN _bb528
add s s i
END
while # _bb525 _bb528
BEGIN _bb529
BUILTIN _bb530 "Assertion failed"
fail # _bb530
END
BUILTIN _bb532 Bfalse
BUILTIN _bb534 I45
eq _bb533 s _bb534
eq _bb531 _bb533 _bb532
if # _bb531 _bb529
return # #
END
try _bbmacro7 _bb520
BEGIN _bb535
BEGIN _bb537
str _bb539 _bbmacro7
BUILTIN _bb541 "\n"
BUILTIN _bb542 "Range"
add _bb540 _bb542 _bb541
add _bb538 _bb540 _bb539
list args _bb538
END
get _bb544 bb logger
get _bb543 _bb544 fail
call _bb536 _bb537 _bb543
END
BEGIN _bb545
BEGIN _bb547
BUILTIN _bb548 "Range"
list args _bb548
END
get _bb550 bb logger
get _bb549 _bb550 ok
call _bb546 _bb547 _bb549
END
catch # _bbmacro7 _bb535 _bb545
BEGIN _bb553
BUILTIN _bb554 I1
BUILTIN _bb555 I2
BUILTIN _bb556 I3
list A _bb554 _bb555 _bb556
BUILTIN s I0
iter _bbmacro10 A
BEGIN _bb560
next _bb561 _bbmacro10
AS x _bb561
exists _bb562 x
END
BEGIN _bb563
add s s x
END
while # _bb560 _bb563
iter it A
BEGIN _bb565
next _bb566 it
AS x _bb566
exists _bb567 x
END
BEGIN _bb568
sub s s x
END
while # _bb565 _bb568
BEGIN _bb569
BUILTIN _bb570 "Assertion failed"
fail # _bb570
END
BUILTIN _bb572 Bfalse
BUILTIN _bb574 I0
eq _bb573 s _bb574
eq _bb571 _bb573 _bb572
if # _bb571 _bb569
return # #
END
try _bbmacro9 _bb553
BEGIN _bb575
BEGIN _bb577
str _bb579 _bbmacro9
BUILTIN _bb581 "\n"
BUILTIN _bb582 "Iteration"
add _bb580 _bb582 _bb581
add _bb578 _bb580 _bb579
list args _bb578
END
get _bb584 bb logger
get _bb583 _bb584 fail
call _bb576 _bb577 _bb583
END
BEGIN _bb585
BEGIN _bb587
BUILTIN _bb588 "Iteration"
list args _bb588
END
get _bb590 bb logger
get _bb589 _bb590 ok
call _bb586 _bb587 _bb589
END
catch # _bbmacro9 _bb575 _bb585
BEGIN _bb593
BEGIN _bb594
get _bb595 this x
IS .x _bb595
BUILTIN x I0
BEGIN _bb597
get _bb598 this x
return # _bb598
END
IS xthis _bb597
BEGIN _bb599
get _bb600 this .x
IS ..x _bb600
return # ..x
END
IS xclosure _bb599
END
IS Struct _bb594
BUILTIN x I1
BEGIN _bb604
inline _bb605 Struct
return # this
END
new struct _bb604
BUILTIN x I2
BEGIN _bb607
BUILTIN _bb608 "Assertion failed"
fail # _bb608
END
BUILTIN _bb610 Bfalse
BUILTIN _bb612 I0
get _bb614 struct xthis
call _bb613 # _bb614
eq _bb611 _bb613 _bb612
eq _bb609 _bb611 _bb610
if # _bb609 _bb607
BEGIN _bb615
BUILTIN _bb616 "Assertion failed"
fail # _bb616
END
BUILTIN _bb618 Bfalse
BUILTIN _bb620 I1
get _bb622 struct xclosure
call _bb621 # _bb622
eq _bb619 _bb621 _bb620
eq _bb617 _bb619 _bb618
if # _bb617 _bb615
return # #
END
try _bbmacro11 _bb593
BEGIN _bb623
BEGIN _bb625
str _bb627 _bbmacro11
BUILTIN _bb629 "\n"
BUILTIN _bb630 "Closure"
add _bb628 _bb630 _bb629
add _bb626 _bb628 _bb627
list args _bb626
END
get _bb632 bb logger
get _bb631 _bb632 fail
call _bb624 _bb625 _bb631
END
BEGIN _bb633
BEGIN _bb635
BUILTIN _bb636 "Closure"
list args _bb636
END
get _bb638 bb logger
get _bb637 _bb638 ok
call _bb634 _bb635 _bb637
END
catch # _bbmacro11 _bb623 _bb633
BEGIN _bb641
BUILTIN _bb642 I1
BUILTIN _bb643 I2
BUILTIN _bb644 I3
list A _bb642 _bb643 _bb644
BEGIN _bb647
list args A
END
BEGIN _bb650
BUILTIN _bb651 I4
list args _bb651
END
get _bb653 bb collection
get _bb652 _bb653 toback
call _bb649 _bb650 _bb652
call _bb646 _bb647 _bb649
IS A _bb646
BEGIN _bb654
BUILTIN _bb655 "Assertion failed"
fail # _bb655
END
BUILTIN _bb657 Bfalse
BUILTIN _bb659 I4
pop _bb660 A
eq _bb658 _bb660 _bb659
eq _bb656 _bb658 _bb657
if # _bb656 _bb654
return # #
END
try _bbmacro12 _bb641
BEGIN _bb661
BEGIN _bb663
str _bb665 _bbmacro12
BUILTIN _bb667 "\n"
BUILTIN _bb668 "Collection"
add _bb666 _bb668 _bb667
add _bb664 _bb666 _bb665
list args _bb664
END
get _bb670 bb logger
get _bb669 _bb670 fail
call _bb662 _bb663 _bb669
END
BEGIN _bb671
BEGIN _bb673
BUILTIN _bb674 "Collection"
list args _bb674
END
get _bb676 bb logger
get _bb675 _bb676 ok
call _bb672 _bb673 _bb675
END
catch # _bbmacro12 _bb661 _bb671
BEGIN _bb679
BUILTIN A "I like banana!"
BEGIN _bb681
BUILTIN _bb682 "Assertion failed"
fail # _bb682
END
BUILTIN _bb684 Bfalse
BEGIN _bb686
list args A
END
BEGIN _bb689
BUILTIN _bb690 "I like"
list args _bb690
END
get _bb692 bb string
get _bb691 _bb692 starts
call _bb688 _bb689 _bb691
call _bb685 _bb686 _bb688
eq _bb683 _bb685 _bb684
if # _bb683 _bb681
BEGIN _bb693
BUILTIN _bb694 "Assertion failed"
fail # _bb694
END
BUILTIN _bb696 Bfalse
BEGIN _bb698
list args A
END
BEGIN _bb701
BUILTIN _bb702 "banana!"
list args _bb702
END
get _bb704 bb string
get _bb703 _bb704 ends
call _bb700 _bb701 _bb703
call _bb697 _bb698 _bb700
eq _bb695 _bb697 _bb696
if # _bb695 _bb693
BEGIN _bb705
BUILTIN _bb706 "Assertion failed"
fail # _bb706
END
BUILTIN _bb708 Bfalse
BUILTIN _bb710 I3
BEGIN _bb713
list args A
END
BEGIN _bb716
BUILTIN _bb717 " "
list args _bb717
END
get _bb719 bb string
get _bb718 _bb719 split
call _bb715 _bb716 _bb718
call _bb712 _bb713 _bb715
len _bb711 _bb712
eq _bb709 _bb711 _bb710
eq _bb707 _bb709 _bb708
if # _bb707 _bb705
BEGIN _bb720
BUILTIN _bb721 "Assertion failed"
fail # _bb721
END
BUILTIN _bb723 Bfalse
BUILTIN _bb725 I2
BEGIN _bb727
list args A
END
BEGIN _bb730
BUILTIN _bb731 "like"
list args _bb731
END
get _bb733 bb string
get _bb732 _bb733 index
call _bb729 _bb730 _bb732
call _bb726 _bb727 _bb729
eq _bb724 _bb726 _bb725
eq _bb722 _bb724 _bb723
if # _bb722 _bb720
BEGIN _bb734
BUILTIN _bb735 "Assertion failed"
fail # _bb735
END
BUILTIN _bb737 Bfalse
BUILTIN _bb739 I10
BEGIN _bb741
list args A
END
BEGIN _bb744
BUILTIN _bb745 "an"
list args _bb745
BUILTIN pos I9
END
get _bb748 bb string
get _bb747 _bb748 index
call _bb743 _bb744 _bb747
call _bb740 _bb741 _bb743
eq _bb738 _bb740 _bb739
eq _bb736 _bb738 _bb737
if # _bb736 _bb734
return # #
END
try _bbmacro13 _bb679
BEGIN _bb749
BEGIN _bb751
str _bb753 _bbmacro13
BUILTIN _bb755 "\n"
BUILTIN _bb756 "String"
add _bb754 _bb756 _bb755
add _bb752 _bb754 _bb753
list args _bb752
END
get _bb758 bb logger
get _bb757 _bb758 fail
call _bb750 _bb751 _bb757
END
BEGIN _bb759
BEGIN _bb761
BUILTIN _bb762 "String"
list args _bb762
END
get _bb764 bb logger
get _bb763 _bb764 ok
call _bb760 _bb761 _bb763
END
catch # _bbmacro13 _bb749 _bb759
BEGIN _bb767
BEGIN _bb770
BUILTIN value I0
BEGIN _bb772
next x args
get _bb773 this value
add _bb773 _bb773 x
set # this value _bb773
END
IS add _bb772
return # this
END
new accum _bb770
final # accum
BUILTIN _bb775 I10
range _bb774 _bb775
iter _bbmacro15 _bb774
BEGIN _bb779
BEGIN _bb780
next _bb781 _bbmacro15
AS i _bb781
exists _bb782 i
END
BEGIN _bb783
BEGIN _bb785
list args i
END
get _bb786 accum add
call _bb784 _bb785 _bb786
END
while # _bb780 _bb783
END
try _bb777 _bb779
BEGIN _bb787
BUILTIN _bb788 "Assertion failed"
fail # _bb788
END
BUILTIN _bb790 Bfalse
BUILTIN _bb792 I45
get _bb793 accum value
eq _bb791 _bb793 _bb792
eq _bb789 _bb791 _bb790
if # _bb789 _bb787
return # #
END
try _bbmacro14 _bb767
BEGIN _bb794
BEGIN _bb796
str _bb798 _bbmacro14
BUILTIN _bb800 "\n"
BUILTIN _bb801 "Atomicity"
add _bb799 _bb801 _bb800
add _bb797 _bb799 _bb798
list args _bb797
END
get _bb803 bb logger
get _bb802 _bb803 fail
call _bb795 _bb796 _bb802
END
BEGIN _bb804
BEGIN _bb806
BUILTIN _bb807 "Atomicity"
list args _bb807
END
get _bb809 bb logger
get _bb808 _bb809 ok
call _bb805 _bb806 _bb808
END
catch # _bbmacro14 _bb794 _bb804
BEGIN _bb812
BEGIN _bb815
BEGIN _bb816
BEGIN _bb818
list args B
END
call _bb817 _bb818 extern2
return # _bb817
END
IS foo1 _bb816
BEGIN _bb819
BEGIN _bb821
list args this
END
call _bb820 _bb821 extern3
return # _bb820
END
IS foo2 _bb819
BEGIN _bb822
get _bb824 B foo1
call _bb823 # _bb824
return # _bb823
END
IS foo3 _bb822
return # this
END
new A _bb815
final # A
BEGIN _bb827
BEGIN _bb828
BEGIN _bb830
list args A
END
call _bb829 _bb830 extern2
return # _bb829
END
IS foo1 _bb828
BEGIN _bb831
BEGIN _bb833
list args this
END
call _bb832 _bb833 extern3
return # _bb832
END
IS foo2 _bb831
BEGIN _bb834
BUILTIN _bb835 I1
return # _bb835
END
IS foo3 _bb834
return # this
END
new B _bb827
final # B
BEGIN _bb836
next obj args
get _bb838 obj foo1
call _bb837 # _bb838
return # _bb837
END
IS extern1 _bb836
final # extern1
BEGIN _bb839
next obj args
get _bb841 obj foo2
call _bb840 # _bb841
return # _bb840
END
IS extern2 _bb839
final # extern2
BEGIN _bb842
next obj args
get _bb844 obj foo3
call _bb843 # _bb844
return # _bb843
END
IS extern3 _bb842
final # extern3
BEGIN _bb845
BUILTIN _bb846 "Assertion failed"
fail # _bb846
END
BUILTIN _bb848 Bfalse
BUILTIN _bb850 I1
BEGIN _bb852
list args A
END
call _bb851 _bb852 extern1
eq _bb849 _bb851 _bb850
eq _bb847 _bb849 _bb848
if # _bb847 _bb845
return # #
END
try _bbmacro16 _bb812
BEGIN _bb853
BEGIN _bb855
str _bb857 _bbmacro16
BUILTIN _bb859 "\n"
BUILTIN _bb860 "No deadlock"
add _bb858 _bb860 _bb859
add _bb856 _bb858 _bb857
list args _bb856
END
get _bb862 bb logger
get _bb861 _bb862 fail
call _bb854 _bb855 _bb861
END
BEGIN _bb863
BEGIN _bb865
BUILTIN _bb866 "No deadlock"
list args _bb866
END
get _bb868 bb logger
get _bb867 _bb868 ok
call _bb864 _bb865 _bb867
END
catch # _bbmacro16 _bb853 _bb863
