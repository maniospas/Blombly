BEGINFINAL Zeros
BEGIN _bb0
BUILTIN _bb2 I4
div _bb1 n _bb2
int step _bb1
END
default # _bb0
copy step step
final # step
List list
final # list
copy n n
final # n
div _bb1 n step
int num _bb1
BUILTIN i I0
BEGIN _bb2
lt # i num
END
BEGIN _bb3
mul start i step
BEGIN _bb4
BUILTIN _bb6 I1
add _bb5 i _bb6
mul end _bb5 step
gt # end n
END
BEGIN _bb5
IS n end
END
if # _bb4 _bb5
sub _bb7 end start
Vector _bb6 _bb7
push # list _bb6
BUILTIN _bb7 I1
add i i _bb7
END
while # _bb2 _bb3
END
BEGINFINAL PVector
copy PVector PVector
final # PVector
BEGINFINAL put
poll pos args
div _bb4 pos step
int id _bb4
at _bb5 list id
mul _bb7 id step
sub _bb6 pos _bb7
poll _bb7 args
put _bb6 _bb5 _bb6 _bb7
END
BEGINFINAL len
return # n
END
BEGINFINAL at
poll pos args
div _bb8 pos step
int id _bb8
at _bb10 list id
mul _bb12 id step
sub _bb11 pos _bb12
at _bb11 _bb10 _bb11
IS _bb11 _bb9
return # _bb9
END
BEGINFINAL add
poll other args
List ret
BEGIN adder
at _bb11 a i
IS _bb11 _bb10
at _bb12 b i
IS _bb12 _bb11
add _bb13 _bb10 _bb11
put _bb12 c i _bb13
END
BUILTIN i I0
BEGIN _bb14
len _bb15 list
lt # i _bb15
END
BEGIN _bb15
BEGIN _bb16
IS list a
get _bb17 other list
IS _bb17 b
IS ret c
copy i i
END
call # _bb16 adder
BUILTIN _bb17 I1
add i i _bb17
END
while # _bb14 _bb15
BEGIN _bb16
IS ret list
final # list
copy step step
final # step
copy n n
final # n
inline # PVector
return # this
END
new ret _bb16
return # ret
END
END
BUILTIN n I10000000
BUILTIN pos I5
BEGIN _bb17
copy n n
inline # Zeros
inline # PVector
return # this
END
new a _bb17
BEGIN _bb18
copy n n
inline # Zeros
inline # PVector
return # this
END
new b _bb18
BUILTIN _bb22 F1.2
IS _bb22 _bb20
put _bb19 a pos _bb20
time tic
add c a b
at _bb23 c pos
IS _bb23 result
time _bb25
sub _bb24 _bb25 tic
print # _bb24
